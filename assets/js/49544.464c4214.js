"use strict";
exports.id = 49544;
exports.ids = [49544];
exports.modules = {

/***/ 49544:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   invokeGeometryOp: () => (/* binding */ n)
/* harmony export */ });
/* harmony import */ var _geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56053);
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
function t(e,t){let r;return{loaded:!1,load:()=>r??=t().then((t=>{o[e]={loaded:!0,execute:t}}))}}function r(e){return null==e?null:e.toJSON()}const o={disjoint:t("disjoint",(()=>__webpack_require__.e(/* import() */ 85987).then(__webpack_require__.bind(__webpack_require__, 85987)).then((e=>e.execute)))),intersects:t("intersects",(()=>__webpack_require__.e(/* import() */ 88865).then(__webpack_require__.bind(__webpack_require__, 88865)).then((e=>e.execute)))),touches:t("touches",(()=>__webpack_require__.e(/* import() */ 59136).then(__webpack_require__.bind(__webpack_require__, 59136)).then((e=>e.execute)))),crosses:t("crosses",(()=>__webpack_require__.e(/* import() */ 7175).then(__webpack_require__.bind(__webpack_require__, 7175)).then((e=>e.execute)))),within:t("within",(()=>__webpack_require__.e(/* import() */ 24536).then(__webpack_require__.bind(__webpack_require__, 24536)).then((e=>e.execute)))),contains:t("contains",(()=>__webpack_require__.e(/* import() */ 53342).then(__webpack_require__.bind(__webpack_require__, 53342)).then((e=>e.execute)))),overlaps:t("overlaps",(()=>__webpack_require__.e(/* import() */ 17499).then(__webpack_require__.bind(__webpack_require__, 17499)).then((e=>e.execute)))),equals:t("equals",(async()=>{const t=await __webpack_require__.e(/* import() */ 59659).then(__webpack_require__.bind(__webpack_require__, 59659));return(r,o)=>t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(r),(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(o))})),relate:t("relate",(async()=>{const t=await __webpack_require__.e(/* import() */ 25147).then(__webpack_require__.bind(__webpack_require__, 25147));return(r,o,n)=>t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(r),(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(o),n)})),intersection:t("intersection",(()=>__webpack_require__.e(/* import() */ 19122).then(__webpack_require__.bind(__webpack_require__, 19122)).then((e=>e.execute)))),union:t("union",(()=>__webpack_require__.e(/* import() */ 37560).then(__webpack_require__.bind(__webpack_require__, 37560)).then((e=>e.executeMany)))),difference:t("difference",(async()=>{const t=await __webpack_require__.e(/* import() */ 16485).then(__webpack_require__.bind(__webpack_require__, 16485));return(o,n)=>r(t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(o),(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(n)))})),symmetricDifference:t("symmetricDifference",(async()=>{const t=await __webpack_require__.e(/* import() */ 76960).then(__webpack_require__.bind(__webpack_require__, 76960));return(o,n)=>r(t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(o),(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(n)))})),clip:t("clip",(async()=>{const t=await __webpack_require__.e(/* import() */ 39296).then(__webpack_require__.bind(__webpack_require__, 39296));return(o,n)=>r(t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(o),(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(n)))})),cut:t("cut",(async()=>{const t=await __webpack_require__.e(/* import() */ 504).then(__webpack_require__.bind(__webpack_require__, 504));return(o,n)=>t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(o),(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(n)).map((e=>r(e)))})),area:t("area",(async()=>{const t=await __webpack_require__.e(/* import() */ 37339).then(__webpack_require__.bind(__webpack_require__, 37339)),{convertFromSpatialReferenceUnit:r,toAreaUnit:o}=await __webpack_require__.e(/* import() */ 32064).then(__webpack_require__.bind(__webpack_require__, 32064));return(n,a)=>{const s=t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(n));return r(n.spatialReference,o(a),s)}})),geodeticArea:t("geodeticArea",(async()=>{const t=await __webpack_require__.e(/* import() */ 17517).then(__webpack_require__.bind(__webpack_require__, 17517)),{convert:r,squareMeters:o,toAreaUnit:n}=await __webpack_require__.e(/* import() */ 32064).then(__webpack_require__.bind(__webpack_require__, 32064));return await t.load(),(a,s,i)=>{const c=t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(a),{curveType:i});return r(o,n(s),c)}})),length:t("length",(async()=>{const e=await __webpack_require__.e(/* import() */ 55847).then(__webpack_require__.bind(__webpack_require__, 55847)),{convertFromSpatialReferenceUnit:t,toLengthUnit:r}=await __webpack_require__.e(/* import() */ 32064).then(__webpack_require__.bind(__webpack_require__, 32064));return(o,n)=>{const a=e.execute(o);return t(o.spatialReference,r(n),a)}})),geodeticLength:t("geodeticLength",(async()=>{const t=await __webpack_require__.e(/* import() */ 90676).then(__webpack_require__.bind(__webpack_require__, 90676)),{convert:r,meters:o,toLengthUnit:n}=await __webpack_require__.e(/* import() */ 32064).then(__webpack_require__.bind(__webpack_require__, 32064));return await t.load(),(a,s,i)=>{const c=t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(a),{curveType:i});return r(o,n(s),c)}})),distance:t("distance",(async()=>{const t=await __webpack_require__.e(/* import() */ 71741).then(__webpack_require__.bind(__webpack_require__, 71741)),{convertFromSpatialReferenceUnit:r,toLengthUnit:o}=await __webpack_require__.e(/* import() */ 32064).then(__webpack_require__.bind(__webpack_require__, 32064));return(n,a,s)=>{const i=t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(n),(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(a));return r(n.spatialReference,o(s),i)}})),densify:t("densify",(async()=>{const t=await __webpack_require__.e(/* import() */ 1878).then(__webpack_require__.bind(__webpack_require__, 1878)),{convertToSpatialReferenceUnit:o,toLengthUnit:n}=await __webpack_require__.e(/* import() */ 32064).then(__webpack_require__.bind(__webpack_require__, 32064));return(a,s,i)=>(s=o(n(i),a.spatialReference,s),r(t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(a),s)))})),geodeticDensify:t("geodeticDensify",(async()=>{const t=await __webpack_require__.e(/* import() */ 66372).then(__webpack_require__.bind(__webpack_require__, 66372)),{convert:o,meters:n,toLengthUnit:a}=await __webpack_require__.e(/* import() */ 32064).then(__webpack_require__.bind(__webpack_require__, 32064));return await t.load(),(s,i,c,p)=>(i=o(a(c),n,i),r(t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(s),i,{curveType:p})))})),generalize:t("generalize",(async()=>{const t=await __webpack_require__.e(/* import() */ 98944).then(__webpack_require__.bind(__webpack_require__, 98944)),{convertToSpatialReferenceUnit:o,toLengthUnit:n}=await __webpack_require__.e(/* import() */ 32064).then(__webpack_require__.bind(__webpack_require__, 32064));return(a,s,i,c)=>(s=o(n(i),a.spatialReference,s),r(t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(a),s,c)))})),buffer:t("buffer",(async()=>{const e=await __webpack_require__.e(/* import() */ 36689).then(__webpack_require__.bind(__webpack_require__, 36689)),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await __webpack_require__.e(/* import() */ 32064).then(__webpack_require__.bind(__webpack_require__, 32064));return(o,n,a)=>(n=t(r(a),o.spatialReference,n),e.execute(o,n))})),geodesicBuffer:t("geodesicBuffer",(async()=>{const e=await __webpack_require__.e(/* import() */ 914).then(__webpack_require__.bind(__webpack_require__, 914)),{convert:t,meters:r,toLengthUnit:o}=await __webpack_require__.e(/* import() */ 32064).then(__webpack_require__.bind(__webpack_require__, 32064));return await e.load(),(n,a,s,i)=>(a=t(o(s),r,a),e.execute(n,a,{curveType:i}))})),offset:t("offset",(async()=>{const e=await __webpack_require__.e(/* import() */ 6988).then(__webpack_require__.bind(__webpack_require__, 6988)),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await __webpack_require__.e(/* import() */ 32064).then(__webpack_require__.bind(__webpack_require__, 32064));return(o,n,a,s)=>(n=t(r(a),o.spatialReference,n),e.execute(o,n,s))})),rotate:t("rotate",(async()=>{const t=await __webpack_require__.e(/* import() */ 41935).then(__webpack_require__.bind(__webpack_require__, 41935)),{default:o}=await __webpack_require__.e(/* import() */ 34679).then(__webpack_require__.bind(__webpack_require__, 34679));return(n,a,s,i)=>{const c=(new o).rotate(a,s,i);return r(t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(n),c))}})),centroid:t("centroid",(async()=>{const t=await __webpack_require__.e(/* import() */ 19694).then(__webpack_require__.bind(__webpack_require__, 19694));return o=>r(t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(o)))})),labelPoint:t("labelPoint",(async()=>{const t=await __webpack_require__.e(/* import() */ 50482).then(__webpack_require__.bind(__webpack_require__, 50482));return o=>r(t.execute((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(o)))})),simplify:t("simplify",(()=>__webpack_require__.e(/* import() */ 29284).then(__webpack_require__.bind(__webpack_require__, 29284)).then((e=>e.execute)))),isSelfIntersecting:t("isSelfIntersecting",(async()=>{const{NonSimpleResult:t}=await __webpack_require__.e(/* import() */ 31174).then(__webpack_require__.bind(__webpack_require__, 31174)),r=await __webpack_require__.e(/* import() */ 66692).then(__webpack_require__.bind(__webpack_require__, 66692)),o=new Set([5,6,7,10,11,12]);return n=>{const a=new t;return!r.isSimple((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(n),a)&&o.has(a.m_reason)}})),isSimple:t("isSimple",(()=>__webpack_require__.e(/* import() */ 29284).then(__webpack_require__.bind(__webpack_require__, 29284)).then((e=>e.isSimple)))),convexHull:t("convexHull",(()=>__webpack_require__.e(/* import() */ 81311).then(__webpack_require__.bind(__webpack_require__, 81311)).then((e=>e.execute)))),getNearestCoordinate:t("getNearestCoordinate",(async()=>{const t=await __webpack_require__.e(/* import() */ 36077).then(__webpack_require__.bind(__webpack_require__, 36077));return(o,n,a)=>{const s=t.getNearestCoordinate((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(o),(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(n),a);return{...s,coordinate:r(s.coordinate)}}})),getNearestVertex:t("getNearestVertex",(async()=>{const t=await __webpack_require__.e(/* import() */ 36077).then(__webpack_require__.bind(__webpack_require__, 36077));return(o,n)=>{const a=t.getNearestVertex((0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(o),(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__/* .fromJSON */ .rS)(n));return{...a,coordinate:r(a.coordinate)}}}))};function n(e,t){const r=o[e];return r.loaded?r.execute.apply(void 0,t):r.load().then((()=>n(e,t)))}


/***/ })

};
;