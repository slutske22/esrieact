"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[51974],{99100:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var t=n(74848),a=n(28453);const s={},i="createRendererComponent",o={id:"core-apis/createRendererComponent",title:"createRendererComponent",description:"The createRendererComponent function can be used to create any type of component that extends from the ESRI Renderer class. It takes in a function that creates the renderer instance, a ref, and the renderer properties, and returns a react-ready component that can be used as a child of a Layer that can use a renderer. The returned renderer component can also take its own children, i.e. Symbol components that apply to the renderer.",source:"@site/docs/core-apis/createRendererComponent.mdx",sourceDirName:"core-apis",slug:"/core-apis/createRendererComponent",permalink:"/esrieact/core-apis/createRendererComponent",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"createLayerViewComponent",permalink:"/esrieact/core-apis/createLayerViewComponent"},next:{title:"createWidgetComponent",permalink:"/esrieact/core-apis/createWidgetComponent"}},c={},p=[{value:"Function signature",id:"function-signature",level:2},{value:"Example Usage",id:"example-usage",level:2},{value:"Typescript",id:"typescript",level:3},{value:"Javascript",id:"javascript",level:3},{value:"Usage",id:"usage",level:3}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"createrenderercomponent",children:(0,t.jsx)(r.code,{children:"createRendererComponent"})})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"createRendererComponent"})," function can be used to create any type of component that extends from the ",(0,t.jsxs)(r.a,{href:"https://developers.arcgis.com/javascript/latest/api-reference/esri-renderers-Renderer.html",children:["ESRI ",(0,t.jsx)(r.code,{children:"Renderer"})," class"]}),". It takes in a function that creates the renderer instance, a ref, and the renderer properties, and returns a react-ready component that can be used as a child of a ",(0,t.jsx)(r.code,{children:"Layer"})," that can use a renderer. The returned renderer component can also take its own children, i.e. ",(0,t.jsx)(r.code,{children:"Symbol"})," components that apply to the renderer."]}),"\n",(0,t.jsx)(r.h2,{id:"function-signature",children:"Function signature"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"/**\n * Factory function to create an esrieact renderer component\n * @param createRenderer - Function that takes in renderer properties and returns an esri Renderer instance. Properties must be\n * any esri properties that extend esri.RendererProperties, and optional children\n * @param ref - Ref to the renderer instance\n * @param properties - Renderer properties\n * @returns A context provider whose context is the renderer instance to be passed to children, or if there are no children, returns null\n */\ncreateRendererComponent: (\n  createRenderer: CreateRendererFunction<RendererProps>,\n  ref: Ref<__esri.Renderer>,\n  { children, ...properties }: RendererProps,\n) => JSX.Element | null;\n"})}),"\n",(0,t.jsx)(r.p,{children:"Where"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"export type RendererProps<\n  T extends __esri.RendererProperties = __esri.RendererProperties,\n> = React.PropsWithChildren<T>;\n"})}),"\n",(0,t.jsx)(r.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,t.jsx)(r.h3,{id:"typescript",children:"Typescript"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"/**\n * Function that takes in properties of a SimpleRenderer and returns an esri SimpleRenderer instance\n */\nconst createSimpleRenderer = (\n  properties: RendererProps<__esri.SimpleRendererProperties>,\n) => new EsriSimpleRenderer(properties);\n\n/**\n * The react SimpleRenderer component\n */\nexport const SimpleRenderer = React.forwardRef<\n  __esri.UniqueValueRenderer,\n  RendererProps<__esri.SimpleRendererProperties>\n>((properties, ref) =>\n  createRendererComponent(createSimpleRenderer, ref, properties),\n);\n"})}),"\n",(0,t.jsx)(r.h3,{id:"javascript",children:"Javascript"}),"\n",(0,t.jsx)(r.p,{children:"Much of the above code is for proper typescript typing. The javascript version is much simpler:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"const createSimpleRenderer = (properties) => new EsriSimpleRenderer(properties);\n\nexport const SimpleRenderer = React.forwardRef((properties, ref) =>\n  createRendererComponent(createSimpleRenderer, ref, properties),\n);\n"})}),"\n",(0,t.jsx)(r.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",metastring:"live noInline",live:!0,children:'function Example() {\n  return (\n    <MapView\n      ViewProperties={{ extent: OAHU_EXTENT_2 }}\n      MapProperties={{ basemap: "topo-vector" }}\n      style={{ height: "300px", width: "100%" }}\n    >\n      <GeoJSONLayer url={SAMPLE_GEOJSON_URL}>\n        <SimpleRenderer>\n          <PictureMarkerSymbol\n            height={24}\n            width={24}\n            url={"/esrieact/img/zebra.png"}\n          />\n        </SimpleRenderer>\n      </GeoJSONLayer>\n    </MapView>\n  );\n}\n\nrender(<Example />);\n'})})]})}function l(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);