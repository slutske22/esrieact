"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[69698],{20740:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var a=i(74848),t=i(28453);const r={sidebar_position:2},s="GroupLayer",l={id:"layers/GroupLayer",title:"GroupLayer",description:"Basic Usage",source:"@site/examples/layers/GroupLayer.mdx",sourceDirName:"layers",slug:"/layers/GroupLayer",permalink:"/esrieact/examples/layers/GroupLayer",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"examplesSidebar",previous:{title:"FeatureLayer",permalink:"/esrieact/examples/layers/FeatureLayer"},next:{title:"GraphicsLayer",permalink:"/esrieact/examples/layers/GraphicsLayer"}},o={},d=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"State managed properties",id:"state-managed-properties",level:2},{value:"Example - Blend Mode",id:"example---blend-mode",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"grouplayer",children:"GroupLayer"})}),"\n",(0,a.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.code,{children:"GroupLayer"})," can take other layers as children:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",metastring:"live",live:!0,children:'<MapView\n  ViewProperties={{ extent: OAHU_EXTENT }}\n  MapProperties={{ basemap: "topo-vector" }}\n  style={{ height: "300px", width: "100%" }}\n>\n  <GroupLayer title="Benthic and Landcover">\n    <FeatureLayer url={BENTHIC_FEATURELAYER_URL} />\n    <MapImageLayer url={LANDCOVER_IMAGELAYER_URL} />\n  </GroupLayer>\n\n  <LayerList position="top-right" />\n</MapView>\n'})}),"\n",(0,a.jsx)(n.h2,{id:"state-managed-properties",children:"State managed properties"}),"\n",(0,a.jsxs)(n.p,{children:["You can use state to manage properties of a ",(0,a.jsx)(n.code,{children:"GroupLayer"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",metastring:"live",live:!0,children:'function Example() {\n  const [visibilityMode, setVisibilityMode] = useState("independent");\n\n  return (\n    <div className="flex gap-2">\n      <div>\n        <h4>Visibility Mode</h4>\n        <select\n          value={visibilityMode}\n          onChange={(e) => setVisibilityMode(e.target.value)}\n        >\n          {["independent", "inherited", "exclusive"].map((visibilityMode) => (\n            <option key={visibilityMode} value={visibilityMode}>\n              {visibilityMode}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <MapView\n        ViewProperties={{ extent: OAHU_EXTENT }}\n        MapProperties={{ basemap: "topo-vector" }}\n        style={{ height: "300px", width: "100%" }}\n      >\n        <GroupLayer title="Land and Rain Group" visibilityMode={visibilityMode}>\n          <FeatureLayer url={BENTHIC_FEATURELAYER_URL} />\n          <MapImageLayer url={LANDCOVER_IMAGELAYER_URL} />\n        </GroupLayer>\n\n        <LayerList\n          position="top-right"\n          listItemCreatedFunction={(event) => {\n            const item = event.item;\n            if (item.layer.type === "group") {\n              item.open = true;\n            }\n          }}\n        />\n      </MapView>\n    </div>\n  );\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"example---blend-mode",children:"Example - Blend Mode"}),"\n",(0,a.jsx)(n.p,{children:"Another example of state-managed properties. In this example, blend mode applies only to the layers within the group layer."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",metastring:"live",live:!0,children:'function Example() {\n  const [blendMode, setBlendMode] = useState("multiply");\n\n  return (\n    <div className="flex gap-2">\n      <div>\n        <h4>Choose Blend Mode</h4>\n        <select\n          value={blendMode}\n          onChange={(e) => setBlendMode(e.target.value)}\n        >\n          {blendModes.map((blendMode) => (\n            <option key={blendMode} value={blendMode}>\n              {blendMode}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <MapView\n        ViewProperties={{ extent: OAHU_EXTENT }}\n        MapProperties={{ basemap: "topo-vector" }}\n        style={{ height: "300px", width: "100%" }}\n      >\n        <MapImageLayer\n          url={CLIMATE_RATINGS_RASTERLAYER_URL}\n          sublayers={[{ id: 4, visible: true }]}\n        />\n\n        <GroupLayer title="Land and Rain Group">\n          <MapImageLayer\n            url={LANDCOVER_IMAGELAYER_URL}\n            sublayers={[{ id: 1, visible: true }]}\n          />\n          <MapImageLayer\n            url={CLIMATE_RATINGS_RASTERLAYER_URL}\n            sublayers={[{ id: 1, visible: true }]}\n            blendMode={blendMode}\n          />\n        </GroupLayer>\n\n        <LayerList position="top-right" />\n      </MapView>\n    </div>\n  );\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);