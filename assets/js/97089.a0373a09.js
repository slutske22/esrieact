"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[97089],{68449:(e,t,r)=>{r.d(t,{B:()=>M});r(39831);var o=r(16541),n=r(41746);const a=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],i=!1,s=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","uvec2","uvec3","uvec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","usampler1D","usampler2D","usampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"],l=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"],c=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT","textureSize","texelFetch"];var f=999,h=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function m(){var e,t,r,o=0,n=0,a=f,i=[],m=[],u=1,g=0,d=0,_=!1,p=!1,x="";return function(e){return m=[],null!==e?T(e.replace?e.replace(/\r\n/g,"\n"):e):(i.length&&v(i.join("")),a=10,v("(eof)"),m)};function v(e){e.length&&m.push({type:h[a],data:e,position:d,line:u,column:g})}function T(t){var i;for(o=0,r=(x+=t).length;e=x[o],o<r;){switch(i=o,a){case 0:o=U();break;case 1:case 2:o=M();break;case 3:o=w();break;case 4:o=E();break;case 11:o=C();break;case 5:o=P();break;case 9999:o=b();break;case 9:o=S();break;case f:o=y()}i!==o&&("\n"===x[i]?(g=0,++u):++g)}return n+=o,x=x.slice(o),m}function y(){return i=i.length?[]:i,"/"===t&&"*"===e?(d=n+o-1,a=0,t=e,o+1):"/"===t&&"/"===e?(d=n+o-1,a=1,t=e,o+1):"#"===e?(a=2,d=n+o,o):/\s/.test(e)?(a=9,d=n+o,o):(_=/\d/.test(e),p=/[^\w_]/.test(e),d=n+o,a=_?4:p?3:9999,o)}function S(){return/[^\s]/g.test(e)?(v(i.join("")),a=f,o):(i.push(e),t=e,o+1)}function M(){return"\r"!==e&&"\n"!==e||"\\"===t?(i.push(e),t=e,o+1):(v(i.join("")),a=f,o)}function U(){return"/"===e&&"*"===t?(i.push(e),v(i.join("")),a=f,o+1):(i.push(e),t=e,o+1)}function w(){if("."===t&&/\d/.test(e))return a=5,o;if("/"===t&&"*"===e)return a=0,o;if("/"===t&&"/"===e)return a=1,o;if("."===e&&i.length){for(;D(i););return a=5,o}if(";"===e||")"===e||"("===e){if(i.length)for(;D(i););return v(e),a=f,o+1}var r=2===i.length&&"="!==e;if(/[\w_\d\s]/.test(e)||r){for(;D(i););return a=f,o}return i.push(e),t=e,o+1}function D(e){for(var t,r,o=0;;){if(t=l.indexOf(e.slice(0,e.length+o).join("")),r=l[t],-1===t){if(o--+e.length>0)continue;r=e.slice(0,1).join("")}return v(r),d+=r.length,(i=i.slice(r.length)).length}}function C(){return/[^a-fA-F0-9]/.test(e)?(v(i.join("")),a=f,o):(i.push(e),t=e,o+1)}function E(){return"."===e||/[eE]/.test(e)?(i.push(e),a=5,t=e,o+1):"x"===e&&1===i.length&&"0"===i[0]?(a=11,i.push(e),t=e,o+1):/[^\d]/.test(e)?(v(i.join("")),a=f,o):(i.push(e),t=e,o+1)}function P(){return"f"===e&&(i.push(e),t=e,o+=1),/[eE]/.test(e)||"-"===e&&/[eE]/.test(t)?(i.push(e),t=e,o+1):/[^\d]/.test(e)?(v(i.join("")),a=f,o):(i.push(e),t=e,o+1)}function b(){if(/[^\d\w_]/.test(e)){var r=i.join("");return a=s.indexOf(r)>-1?8:c.indexOf(r)>-1?7:6,v(i.join("")),a=f,o}return i.push(e),t=e,o+1}}function u(e){return function(e){var t=m(),r=[];return(r=r.concat(t(e))).concat(t(null))}(e)}const g=new Set(["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"]);function d(e,t){for(let r=t-1;r>=0;r--){const t=e[r];if("whitespace"!==t.type&&"block-comment"!==t.type){if("keyword"!==t.type)break;if("attribute"===t.data||"in"===t.data)return!0}}return!1}function _(e,t,r,o){o=o||r;for(const n of e)if("ident"===n.type&&n.data===r)return o in t?t[o]++:t[o]=0,_(e,t,o+"_"+t[o],o);return r}function p(e,t,r="afterVersion"){function o(e,t){for(let r=t;r<e.length;r++){const t=e[r];if("operator"===t.type&&";"===t.data)return r}return null}const n={data:"\n",type:"whitespace"},a=t=>t<e.length&&/[^\r\n]$/.test(e[t].data);let i=function(e){let t=-1,n=0,a=-1;for(let i=0;i<e.length;i++){const s=e[i];if("preprocessor"===s.type&&(/#(if|ifdef|ifndef)\s+.+/.test(s.data)?++n:/#endif\s*.*/.test(s.data)&&--n),"afterVersion"!==r&&"afterPrecision"!==r||"preprocessor"===s.type&&s.data.startsWith("#version")&&(a=Math.max(a,i)),"afterPrecision"===r&&"keyword"===s.type&&"precision"===s.data){const t=o(e,i);if(null===t)throw new Error("precision statement not followed by any semicolons!");a=Math.max(a,t)}t<a&&0===n&&(t=i)}return t+1}(e);a(i-1)&&e.splice(i++,0,n);for(const s of t)e.splice(i++,0,s);a(i-1)&&a(i)&&e.splice(i,0,n)}function x(e,t,r,o="lowp"){p(e,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:o},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function v(e,t,r,o,n="lowp"){p(e,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:o.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function T(e,t){let r,o,n=-1;for(let a=t;a<e.length;a++){const t=e[a];if("operator"===t.type&&("["===t.data&&(r=a),"]"===t.data)){o=a;break}"integer"===t.type&&(n=parseInt(t.data,10))}return r&&o&&e.splice(r,o-r+1),n}function y(e,t){if(e.startsWith("#version 300"))return e;const r=function(e){return i?S.get(e):null}(e);if(null!=r)return r;const o=u(e);if("300 es"===function(e,t="100",r="300 es"){const o=/^\s*#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const n of e)if("preprocessor"===n.type){const e=o.exec(n.data);if(e){const o=e[1].replaceAll(/\s{2,}/g," ");if(o===r)return o;if(o===t)return n.data="#version "+r,t;throw new Error("unknown glsl version: "+o)}}return e.splice(0,0,{type:"preprocessor",data:"#version "+r},{type:"whitespace",data:"\n"}),null}(o,"100","300 es"))return e;let s=null,l=null;const c={},f={};for(let i=0;i<o.length;++i){const e=o[i];switch(e.type){case"keyword":t===n.Co.VERTEX_SHADER&&"attribute"===e.data?e.data="in":"varying"===e.data&&(e.data=t===n.Co.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(e.data.trim())&&(e.data=e.data.replaceAll(/(2D|Cube|EXT)/g,"")),t===n.Co.FRAGMENT_SHADER&&"gl_FragColor"===e.data&&(s||(s=_(o,c,"fragColor"),x(o,s,"vec4")),e.data=s),t===n.Co.FRAGMENT_SHADER&&"gl_FragData"===e.data){const t=T(o,i+1),r=_(o,c,"fragData");v(o,r,"vec4",t,"mediump"),e.data=r}else t===n.Co.FRAGMENT_SHADER&&"gl_FragDepthEXT"===e.data&&(l||(l=_(o,c,"gl_FragDepth")),e.data=l);break;case"ident":if(a.includes(e.data)){if(t===n.Co.VERTEX_SHADER&&d(o,i))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");e.data in f||(f[e.data]=_(o,c,e.data)),e.data=f[e.data]}}}for(let n=o.length-1;n>=0;--n){const e=o[n];if("preprocessor"===e.type){const t=e.data.match(/#extension\s+(.*):/);if(t?.[1]&&g.has(t[1].trim())){const e=o[n+1];o.splice(n,e&&"whitespace"===e.type?2:1)}const r=e.data.match(/#ifdef\s+(.*)/);r?.[1]&&g.has(r[1].trim())&&(e.data="#if 1");const a=e.data.match(/#ifndef\s+(.*)/);a?.[1]&&g.has(a[1].trim())&&(e.data="#if 0")}}return function(e,t){return i&&S.set(e,t),t}(e,function(e){return e.map((e=>"eof"!==e.type?e.data:"")).join("")}(o))}const S=new Map;class M{constructor(e,t,r,a,i=new Map,s=[]){this._context=e,this._locations=a,this._uniformBlockBindings=i,this._transformFeedbackVaryings=s,this._refCount=1,this._compiled=!1,this._linesOfCode=0,this._nameToUniformLocation=new Map,this._nameToUniform1=new Map,this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,e||console.error("RenderingContext isn't initialized!"),0===t.length&&console.error("Shaders source should not be empty!"),t=y(t,n.Co.VERTEX_SHADER),r=y(r,n.Co.FRAGMENT_SHADER),this._vShader=U(this._context,n.Co.VERTEX_SHADER,t),this._fShader=U(this._context,n.Co.FRAGMENT_SHADER,r),D.enabled&&(this._linesOfCode=t.match(/\n/g).length+r.match(/\n/g).length+2,this._context.instanceCounter.increment(n.vt.LinesOfCode,this._vShader,this._linesOfCode)),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(n.vt.Shader,this),(0,o.Xc)()&&(this.vertexShader=t,this.fragmentShader=r),this.usedMemory=t.length+r.length;const l=this._context.gl,c=l.createProgram();l.attachShader(c,this._vShader),l.attachShader(c,this._fShader),this._locations.forEach(((e,t)=>l.bindAttribLocation(c,e,t))),this._transformFeedbackVaryings?.length&&l.transformFeedbackVaryings(c,this._transformFeedbackVaryings,l.SEPARATE_ATTRIBS),l.linkProgram(c),(0,o.Xc)()&&!l.getProgramParameter(c,l.LINK_STATUS)&&console.error(`Could not link shader\nvalidated: ${l.getProgramParameter(c,l.VALIDATE_STATUS)}, gl error ${l.getError()}, vertex: ${l.getShaderParameter(this._vShader,l.COMPILE_STATUS)}, fragment: ${l.getShaderParameter(this._fShader,l.COMPILE_STATUS)}, info log: ${l.getProgramInfoLog(c)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`);for(const[o,n]of this._uniformBlockBindings){const e=l.getUniformBlockIndex(c,o);e<4294967295&&l.uniformBlockBinding(c,e,n)}this._glName=c,this._context.instanceCounter.increment(n.vt.Program,this)}get glName(){return this._glName}get hasGLName(){return null!=this._glName}get hasTransformFeedbackVaryings(){return!!this._transformFeedbackVaryings?.length}get compiled(){return!!this._compiled||(this._context.capabilities.parallelShaderCompile&&null!=this.glName?(this._compiled=!!this._context.gl.getProgramParameter(this.glName,n.YY.COMPLETION_STATUS_KHR),this._compiled):(this._compiled=!0,!0))}dispose(){if(--this._refCount>0)return;const e=this._context.gl,t=this._context.instanceCounter;this._nameToUniformLocation.forEach((e=>e&&t.decrement(n.vt.Uniform,e))),this._nameToUniformLocation.clear(),this._vShader&&(this._linesOfCode>0&&(t.decrement(n.vt.LinesOfCode,this._vShader,this._linesOfCode),this._linesOfCode=0),e.deleteShader(this._vShader),this._vShader=null,t.decrement(n.vt.Shader,this)),this._fShader&&(e.deleteShader(this._fShader),this._fShader=null),this._glName&&(e.deleteProgram(this._glName),this._glName=null,t.decrement(n.vt.Program,this))}ref(){++this._refCount}_getUniformLocation(e){const t=this._nameToUniformLocation.get(e);if(void 0!==t)return t;if(this.glName){const t=this._context.gl.getUniformLocation(this.glName,e);return this._nameToUniformLocation.set(e,t),t&&this._context.instanceCounter.increment(n.vt.Uniform,t),t}return null}hasUniform(e){return null!=this._getUniformLocation(e)}setUniform1i(e,t){C(t);const r=this._nameToUniform1.get(e);void 0!==r&&t===r||(this._context.gl.uniform1i(this._getUniformLocation(e),t),this._nameToUniform1.set(e,t))}setUniform1iv(e,t){E(t),w(this._nameToUniform1v,e,t)&&this._context.gl.uniform1iv(this._getUniformLocation(e),t)}setUniform2iv(e,t){E(t),w(this._nameToUniform2,e,t)&&this._context.gl.uniform2iv(this._getUniformLocation(e),t)}setUniform3iv(e,t){E(t),w(this._nameToUniform3,e,t)&&this._context.gl.uniform3iv(this._getUniformLocation(e),t)}setUniform4iv(e,t){E(t),w(this._nameToUniform4,e,t)&&this._context.gl.uniform4iv(this._getUniformLocation(e),t)}setUniform1f(e,t){C(t);const r=this._nameToUniform1.get(e);void 0!==r&&t===r||(this._context.gl.uniform1f(this._getUniformLocation(e),t),this._nameToUniform1.set(e,t))}setUniform1fv(e,t){E(t),w(this._nameToUniform1v,e,t)&&this._context.gl.uniform1fv(this._getUniformLocation(e),t)}setUniform2f(e,t,r){C(t,r);const o=this._nameToUniform2.get(e);void 0===o?(this._context.gl.uniform2f(this._getUniformLocation(e),t,r),this._nameToUniform2.set(e,[t,r])):t===o[0]&&r===o[1]||(this._context.gl.uniform2f(this._getUniformLocation(e),t,r),o[0]=t,o[1]=r)}setUniform2fv(e,t){E(t),w(this._nameToUniform2,e,t)&&this._context.gl.uniform2fv(this._getUniformLocation(e),t)}setUniform3f(e,t,r,o){C(t,r,o);const n=this._nameToUniform3.get(e);void 0===n?(this._context.gl.uniform3f(this._getUniformLocation(e),t,r,o),this._nameToUniform3.set(e,[t,r,o])):t===n[0]&&r===n[1]&&o===n[2]||(this._context.gl.uniform3f(this._getUniformLocation(e),t,r,o),n[0]=t,n[1]=r,n[2]=o)}setUniform3fv(e,t){E(t);const r=this._getUniformLocation(e);null!=r&&w(this._nameToUniform3,e,t)&&this._context.gl.uniform3fv(r,t)}setUniform4f(e,t,r,o,n){C(t,r,o,n);const a=this._nameToUniform4.get(e);void 0===a?(this._context.gl.uniform4f(this._getUniformLocation(e),t,r,o,n),this._nameToUniform4.set(e,[t,r,o,n])):void 0!==a&&t===a[0]&&r===a[1]&&o===a[2]&&n===a[3]||(this._context.gl.uniform4f(this._getUniformLocation(e),t,r,o,n),a[0]=t,a[1]=r,a[2]=o,a[3]=n)}setUniform4fv(e,t){E(t);const r=this._getUniformLocation(e);null!=r&&w(this._nameToUniform4,e,t)&&this._context.gl.uniform4fv(r,t)}setUniformMatrix3fv(e,t,r=!1){E(t);const o=this._getUniformLocation(e);null!=o&&w(this._nameToUniformMatrix3,e,t)&&this._context.gl.uniformMatrix3fv(o,r,t)}setUniformMatrix4fv(e,t,r=!1){E(t);const o=this._getUniformLocation(e);null!=o&&w(this._nameToUniformMatrix4,e,t)&&this._context.gl.uniformMatrix4fv(o,r,t)}stop(){}}function U(e,t,r){const a=e.gl,i=a.createShader(t);return a.shaderSource(i,r),a.compileShader(i),(0,o.Xc)()&&!a.getShaderParameter(i,a.COMPILE_STATUS)&&(console.error("Compile error in ".concat(t===n.Co.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(a.getShaderInfoLog(i)),console.error(function(e){let t=2;return e.replaceAll("\n",(()=>"\n"+function(e){return e>=1e3?e.toString():("  "+e).slice(-3)}(t++)+":"))}(r))),i}function w(e,t,r){const o=e.get(t);if(!o)return e.set(t,Array.from(r)),!0;const n=r.length;if(o.length!==n)return e.set(t,Array.from(r)),!0;for(let a=0;a<n;++a){const e=r[a];if(o[a]!==e){for(o[a]=e;a<n;++a)o[a]=r[a];return!0}}return!1}const D={enabled:!1},C=(0,o.en)()?(...e)=>E(e):()=>{},E=(0,o.en)()?e=>{const t=e.length;for(let r=0;r<t;++r){const t=e[r];Number.isNaN(t)&&console.error(`Got ${t} as uniform value from ${(new Error).stack}`)}}:()=>{}},50122:(e,t,r)=>{r.d(t,{r:()=>n});var o=r(68449);function n(e,t,r=""){return new o.B(e,r+t.shaders.vertexShader,r+t.shaders.fragmentShader,t.attributes)}},29638:(e,t,r)=>{r.d(t,{Z:()=>o});class o{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this._read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const o=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let n=o.exec(r);const a=[];for(;null!=n;)a.push({path:n[1],start:n.index,length:n[0].length}),n=o.exec(r);let i=0,s="";return a.forEach((e=>{s+=r.slice(i,e.start),s+=t.has(e.path)?"":this._resolve(e.path,t),i=e.start+e.length})),s+=r.slice(i),t.set(e,s),s}_read(e){return this._readFile(e)}}}}]);