"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[57175],{57491:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=t(74848),a=t(28453);const r={},s="Widgets",o={id:"widgets/index",title:"Widgets",description:"As map children",source:"@site/examples/widgets/index.mdx",sourceDirName:"widgets",slug:"/widgets/",permalink:"/esrieact/examples/widgets/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"examplesSidebar",previous:{title:"GraphicsLayer",permalink:"/esrieact/examples/layers/GraphicsLayer"},next:{title:"Expand",permalink:"/esrieact/examples/widgets/expand"}},d={},c=[{value:"As map children",id:"as-map-children",level:2},{value:"State managed props",id:"state-managed-props",level:2},{value:"Widgets outside the map",id:"widgets-outside-the-map",level:2},{value:"Widgets elsewhere in the tree",id:"widgets-elsewhere-in-the-tree",level:2},{value:"Integration with web components",id:"integration-with-web-components",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"widgets",children:"Widgets"})}),"\n",(0,i.jsx)(n.h2,{id:"as-map-children",children:"As map children"}),"\n",(0,i.jsxs)(n.p,{children:["Widgets can be added to a ",(0,i.jsx)(n.code,{children:"MapView"})," as children. They take all the same properties as their native ArcGIS JS API instance:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",metastring:"live",live:!0,children:'function Example() {\n  return (\n    <MapView\n      ViewProperties={{ extent: OAHU_EXTENT }}\n      MapProperties={{ basemap: "topo-vector" }}\n      style={{ height: "400px", width: "100%" }}\n    >\n      <FeatureLayer url={BENTHIC_FEATURELAYER_URL} />\n\n      <SearchBar position="top-right" />\n      <Legend position="top-right" />\n    </MapView>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"state-managed-props",children:"State managed props"}),"\n",(0,i.jsx)(n.p,{children:"Properties of a widget can be managed via react state:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",metastring:"live",live:!0,children:'function Example() {\n  const [checked, setChecked] = useState(true);\n  return (\n    <div>\n      <div>\n        <label className="flex gap-2 mb-2 items-center">\n          <input\n            type="checkbox"\n            checked={checked}\n            onChange={(e) => setChecked(e.target.checked)}\n          />\n          Legend: Respect Definition Expression\n        </label>\n      </div>\n\n      <MapView\n        ViewProperties={{ extent: OAHU_EXTENT }}\n        MapProperties={{ basemap: "topo-vector" }}\n        style={{ height: "400px", width: "100%" }}\n      >\n        <FeatureLayer\n          url={OAHU_HPMS_ROADS_FL_URL}\n          definitionExpression="f_system_t = \'Interstate\'"\n        />\n\n        <Legend\n          position="top-right"\n          key={`${checked}`}\n          respectLayerDefinitionExpression={checked}\n        />\n      </MapView>\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"widgets-outside-the-map",children:"Widgets outside the map"}),"\n",(0,i.jsxs)(n.p,{children:["Widgets can also be added outside of the ",(0,i.jsx)(n.code,{children:"MapView"})," component using the ",(0,i.jsx)(n.code,{children:"container"})," property."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",metastring:"live",live:!0,children:'function Example() {\n  return (\n    <div className="flex gap-2">\n      <MapView\n        ViewProperties={{ extent: OAHU_EXTENT }}\n        MapProperties={{ basemap: "topo-vector" }}\n        style={{ height: "400px", width: "100%" }}\n      >\n        <Legend position="top-right" container="legend-container" />\n\n        <FeatureLayer\n          url={BENTHIC_FEATURELAYER_URL}\n          definitionExpression="zone = \'Back Reef\'"\n        />\n      </MapView>\n      <div className="w-[300px] border border-green-500 bg-white">\n        <h4 className="text-center m-1">Outside the map</h4>\n        <div\n          id="legend-container"\n          className="w-full max-h-[400px] overflow-y-auto"\n        />\n      </div>\n    </div>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"widgets-elsewhere-in-the-tree",children:"Widgets elsewhere in the tree"}),"\n",(0,i.jsxs)(n.p,{children:["In the above example, the semantics of the component tree are a bit odd. The ",(0,i.jsx)(n.code,{children:"Legend"})," is declared as a child of the ",(0,i.jsx)(n.code,{children:"MapView"}),". You can have a component tree that matches your UI more closely by using the ",(0,i.jsx)(n.code,{children:"MapViewContext"})," and a careful combination of ",(0,i.jsx)(n.code,{children:"container"})," and ",(0,i.jsx)(n.code,{children:"view"})," props:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",metastring:"live noInline",live:!0,children:'function OtherUI() {\n  const { view } = useMap();\n\n  return (\n    <nav className="border-blue-800 border p-2">\n      <h4>Elsewhere in the component tree</h4>\n\n      <div\n        id="legend-container-2"\n        className="w-full max-h-[300px] overflow-y-auto"\n      >\n        {view && <Legend container="legend-container-2" view={view} />}{" "}\n      </div>\n    </nav>\n  );\n}\n\nfunction Example() {\n  return (\n    <MapContextProvider>\n      <div className="flex gap-2">\n        <OtherUI />\n\n        <div className="flex-1 border-green-800 border items-stretch">\n          <MapViewCore\n            ViewProperties={{ extent: OAHU_EXTENT }}\n            MapProperties={{ basemap: "topo-vector" }}\n            style={{ height: "100%", width: "100%" }}\n          >\n            <FeatureLayer url={BENTHIC_FEATURELAYER_URL} />\n          </MapViewCore>\n        </div>\n      </div>\n    </MapContextProvider>\n  );\n}\n\nrender(<Example />);\n'})}),"\n",(0,i.jsx)(n.h2,{id:"integration-with-web-components",children:"Integration with web components"}),"\n",(0,i.jsxs)(n.p,{children:["During development of this library, esri announced ",(0,i.jsx)(n.a,{href:"https://developers.arcgis.com/javascript/latest/components-transition-plan/",children:"their plan to transition away from classic widgets, to standard web components"}),". These standard web components make development with react much more intuitive for UI elements like widgets. This library has not yet been brought up to date to be based on web-components. In the meantime, you can either use the class (but soon to be deprecated) widgets as shown above, or you can mix in the newer web-components. You can declare a web component widget in your map, but you must manually add the widget to the ",(0,i.jsx)(n.code,{children:"view"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",metastring:"live noInline",live:!0,children:'// import "@arcgis/map-components/components/arcgis-directional-pad";\n\nfunction Provider({ children }) {\n  return <MapContextProvider>{children}</MapContextProvider>;\n}\n\nfunction Example() {\n  const { view } = useMap();\n\n  useEffect(() => {\n    if (view?.when) {\n      view.when(() => {\n        const pad = document.querySelector("arcgis-directional-pad");\n        pad.view = view;\n        view.ui.add(pad, "top-right");\n      });\n    }\n  }, [view]);\n\n  return (\n    <MapViewCore\n      ViewProperties={{ extent: HAWAII_EXTENT }}\n      MapProperties={{ basemap: "topo-vector" }}\n      style={{ height: "300px", width: "100%" }}\n    >\n      <arcgis-directional-pad></arcgis-directional-pad>\n    </MapViewCore>\n  );\n}\n\nrender(\n  <MapContextProvider>\n    <Example />\n  </MapContextProvider>,\n);\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Once this library has been brought up to date with the still-emerging web component standard, and its mixture with React 19, the ",(0,i.jsx)(n.code,{children:"useEffect"})," in the above example will no longer be necessary \ud83e\udd1e."]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);