"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[43374],{21484:(e,r,t)=>{t.d(r,{L:()=>a});var o=t(12690),n=t(40189),s=t(68659);async function a(e,r,t){const a=e&&e.getAtOrigin&&e.getAtOrigin("renderer",r.origin);if(a&&"unique-value"===a.type&&a.styleOrigin){const i=await(0,o.Ke)(a.populateFromStyle());if((0,n.Te)(t),!1===i.ok){const t=i.error;r?.messages&&r.messages.push(new s.A("renderer:style-reference",`Failed to create unique value renderer from style reference: ${t.message}`,{error:t,context:r})),e.clear("renderer",r?.origin)}}}},15954:(e,r,t)=>{var o;t.d(r,{X:()=>o}),function(e){e[e.SAVE=0]="SAVE",e[e.SAVE_AS=1]="SAVE_AS"}(o||(o={}))},22942:(e,r,t)=>{t.d(r,{ci:()=>a,dL:()=>n});var o=t(98849);t(40454);async function n(e){const r=[];for(const t of e.allLayers)if("beforeSave"in t&&"function"==typeof t.beforeSave){const e=t.beforeSave();e&&r.push(e)}await Promise.allSettled(r)}const s=new Set(["layer:unsupported","property:unsupported","symbol:unsupported","symbol-layer:unsupported","url:unsupported"]);function a(e,r,t){let n=(e.messages??[]).filter((({type:e})=>"error"===e)).map((({name:e,message:r,details:t})=>new o.A(e,r,t)));if(e.blockedRelativeUrls&&(n=n.concat(e.blockedRelativeUrls.map((e=>new o.A("url:unsupported",`Relative url '${e}' is not supported`))))),t){const{ignoreUnsupported:e,supplementalUnsupportedErrors:r=[],requiredPropertyChecksDisabled:o}=t;e&&(n=n.filter((({name:e})=>!(s.has(e)||r.includes(e))))),o&&(n=n.filter((e=>"web-document-write:property-required"!==e.name)))}if(n.length>0)throw new o.A(r.errorName,"Failed to save due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:n})}}}]);