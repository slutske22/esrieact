"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7325,4007,1051],{84858:(e,t,r)=>{var i;r.d(t,{u:()=>i}),function(e){e[e.KILOBYTES=1024]="KILOBYTES",e[e.MEGABYTES=1048576]="MEGABYTES",e[e.GIGABYTES=1073741824]="GIGABYTES"}(i||(i={}))},10107:(e,t,r)=>{r.r(t),r.d(t,{default:()=>Z});var i,s=r(66866),o=r(86394),a=r(98849),n=r(6412),l=r(35775),p=r(40189),u=r(20909),c=r(21564),h=r(4130),d=(r(85569),r(39831),r(75094)),y=r(63863),f=r(77542),v=r(78983),m=r(68833),g=r(50193),w=r(9127),A=r(47217),_=r(45681),S=r(15305),T=r(16161),b=r(41506),M=r(34722),O=r(50508),C=r(25389),D=r(2178),L=r(16123),R=r(84356),x=r(52775),I=r(68619);const E=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let F=i=class extends((0,S.d)((0,C.j)((0,D.I)((0,w.f)((0,A.V)((0,b.q)((0,M.A)((0,_.b)((0,l.P)((0,O.J)((0,g.p)((0,T.d)(m.A))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(p.QP).then((()=>this._fetchService(t)))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,t){return(e=e||t.tileInfo?.spatialReference)&&v.A.fromJSON(e)}writeSublayers(e,t,r,i){if(!this.loaded||!e)return;const s=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray(),o=[],a={writeSublayerStructure:!1,...i};s.forEach((e=>{const t=e.write({},a);o.push(t)})),o.some((e=>Object.keys(e).length>1))&&(t.layers=o)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl?.path)}castTileServers(e){return Array.isArray(e)?e.map((e=>(0,u.An)(e).path)):null}fetchTile(e,t,r,i={}){const{signal:s}=i,a=this.getTileUrl(e,t,r),n={responseType:"image",signal:s,query:{...this.refreshParameters}};return(0,o.A)(a,n).then((e=>e.data))}async fetchImageBitmapTile(e,t,r,s={}){const{signal:a}=s;if(this.fetchTile!==i.prototype.fetchTile){const i=await this.fetchTile(e,t,r,s);return(0,x.C)(i,e,t,r,a)}const n=this.getTileUrl(e,t,r),l={responseType:"blob",signal:a,query:{...this.refreshParameters}},{data:p}=await(0,o.A)(n,l);return(0,x.C)(p,e,t,r,a)}getTileUrl(e,t,r){const i=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,s=(0,u.x0)({...this.parsedUrl?.query,blankTile:!i&&null,...this.customParameters,token:this.apiKey}),o=this.tileServers;return`${o&&o.length?o[t%o.length]:this.parsedUrl?.path}/tile/${e}/${t}/${r}${s?"?"+s:""}`}loadAll(){return(0,n.g)(this,(e=>{e(this.allSublayers)}))}_fetchService(e){return new Promise(((t,r)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new a.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void t({data:this.sourceJSON})}if(!this.parsedUrl)throw new a.A("tile-layer:undefined-url","layer's url is not defined");const i=(0,L.qg)(this.parsedUrl.path);if(null!=i&&"ImageServer"===i.serverType)throw new a.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");(0,o.A)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(t,r)})).then((t=>{let r=this.url;if(t.ssl&&(r=this.url=r.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!(0,L.Wo)(r))return this._fetchServerVersion(r,e).then((e=>{this.read({currentVersion:e})})).catch((()=>{}))}))}_fetchServerVersion(e,t){if(!(0,L.Fi)(e))return Promise.reject();const r=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return(0,o.A)(r,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:t}).then((e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new a.A("tile-layer:version-not-available")}))}_getMapName(e){const t=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return t?t[2]:void 0}_getDefaultAttribution(e){if(null==e)return null;let t;e=e.toLowerCase();for(let r=0,i=E.length;r<i;r++)if(t=E[r],t.toLowerCase().includes(e))return(0,u.s2)("//static.arcgis.com/attribution/"+t);return null}_getDefaultTileServers(e){if(null==e)return[];const t=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),r=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return t||r?[e,e.replace(t?/server\.arcgisonline/i:/services\.arcgisonline/i,t?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[P]}};(0,s._)([(0,c.MZ)({readOnly:!0})],F.prototype,"attributionDataUrl",null),(0,s._)([(0,c.MZ)({type:["show","hide","hide-children"]})],F.prototype,"listMode",void 0),(0,s._)([(0,c.MZ)({json:{read:!0,write:!0}})],F.prototype,"blendMode",void 0),(0,s._)([(0,c.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],F.prototype,"isReference",void 0),(0,s._)([(0,c.MZ)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],F.prototype,"operationalLayerType",void 0),(0,s._)([(0,c.MZ)({type:Boolean})],F.prototype,"resampling",void 0),(0,s._)([(0,c.MZ)()],F.prototype,"sourceJSON",void 0),(0,s._)([(0,c.MZ)({type:v.A})],F.prototype,"spatialReference",void 0),(0,s._)([(0,d.w)("spatialReference",["spatialReference","tileInfo"])],F.prototype,"readSpatialReference",null),(0,s._)([(0,c.MZ)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],F.prototype,"path",void 0),(0,s._)([(0,c.MZ)({readOnly:!0})],F.prototype,"sublayers",void 0),(0,s._)([(0,f.K)("sublayers",{layers:{type:[I.A]}})],F.prototype,"writeSublayers",null),(0,s._)([(0,c.MZ)({json:{read:!1,write:!1}})],F.prototype,"popupEnabled",void 0),(0,s._)([(0,c.MZ)()],F.prototype,"tileServers",null),(0,s._)([(0,h.w)("tileServers")],F.prototype,"castTileServers",null),(0,s._)([(0,c.MZ)({readOnly:!0,json:{read:!1}})],F.prototype,"type",void 0),(0,s._)([(0,c.MZ)(R.OZ)],F.prototype,"url",void 0),F=i=(0,s._)([(0,y.$)("esri.layers.TileLayer")],F);const P=Symbol("default-fetch-tile");F.prototype.fetchTile[P]=!0;const Z=F},9127:(e,t,r)=>{r.d(t,{f:()=>c});var i=r(66866),s=(r(17639),r(21564)),o=(r(73446),r(85569),r(39831),r(75094)),a=r(63863),n=r(65228),l=r(68820),p=r(35787),u=r(78983);const c=e=>{let t=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}destroy(){this.tilemapCache?.destroy?.()}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t,r){const i=t.capabilities?.includes("Tilemap");let{minLOD:s,maxLOD:o,minScale:a,maxScale:u}=t;if(null==s&&null==o&&0!==a&&0!==u){const e=e=>Math.round(1e4*e)/1e4;a=e(a||t.tileInfo.lods[0].scale),u=e(u||t.tileInfo.lods[t.tileInfo.lods.length-1].scale);for(const r of t.tileInfo.lods){const t=e(r.scale);s=t>=a?r.level:s,o=t>=u?r.level:o}}if(i)return new p.d({layer:this,minLOD:s,maxLOD:o});if(t.tileInfo){const e=new n.A;return e.read(t.tileInfo,r),new l.A(e,s,o)}return null}};return(0,i._)([(0,s.MZ)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,i._)([(0,s.MZ)()],t.prototype,"minScale",void 0),(0,i._)([(0,o.w)("service","minScale")],t.prototype,"readMinScale",null),(0,i._)([(0,s.MZ)()],t.prototype,"maxScale",void 0),(0,i._)([(0,o.w)("service","maxScale")],t.prototype,"readMaxScale",null),(0,i._)([(0,s.MZ)({type:u.A})],t.prototype,"spatialReference",void 0),(0,i._)([(0,s.MZ)({readOnly:!0})],t.prototype,"supportsBlankTile",null),(0,i._)([(0,s.MZ)({type:n.A})],t.prototype,"tileInfo",void 0),(0,i._)([(0,s.MZ)()],t.prototype,"tilemapCache",void 0),(0,i._)([(0,o.w)("service","tilemapCache",["capabilities","tileInfo"])],t.prototype,"readTilemapCache",null),(0,i._)([(0,s.MZ)()],t.prototype,"version",void 0),t=(0,i._)([(0,a.$)("esri.layers.mixins.ArcGISCachedService")],t),t}},48330:(e,t,r)=>{r.d(t,{A:()=>c});var i=r(66866),s=r(24793),o=r(59851),a=r(21877),n=r(21564),l=(r(73446),r(85569),r(39831),r(63863));const p=new o.J({esriFeatureEditToolAutoCompletePolygon:"auto-complete-polygon",esriFeatureEditToolCircle:"circle",esriFeatureEditToolEllipse:"ellipse",esriFeatureEditToolFreehand:"freehand",esriFeatureEditToolLine:"line",esriFeatureEditToolNone:"none",esriFeatureEditToolPoint:"point",esriFeatureEditToolPolygon:"polygon",esriFeatureEditToolRectangle:"rectangle",esriFeatureEditToolArrow:"arrow",esriFeatureEditToolTriangle:"triangle",esriFeatureEditToolLeftArrow:"left-arrow",esriFeatureEditToolRightArrow:"right-arrow",esriFeatureEditToolUpArrow:"up-arrow",esriFeatureEditToolDownArrow:"down-arrow"});let u=class extends((0,s.O)(a.oY)){constructor(e){super(e),this.name=null,this.description=null,this.drawingTool=null,this.prototype=null,this.thumbnail=null}};(0,i._)([(0,n.MZ)({json:{write:!0}})],u.prototype,"name",void 0),(0,i._)([(0,n.MZ)({json:{write:!0}})],u.prototype,"description",void 0),(0,i._)([(0,n.MZ)({json:{read:p.read,write:p.write}})],u.prototype,"drawingTool",void 0),(0,i._)([(0,n.MZ)({json:{write:!0}})],u.prototype,"prototype",void 0),(0,i._)([(0,n.MZ)({json:{write:!0}})],u.prototype,"thumbnail",void 0),u=(0,i._)([(0,l.$)("esri.layers.support.FeatureTemplate")],u);const c=u},25392:(e,t,r)=>{r.d(t,{A:()=>d});var i=r(66866),s=r(24793),o=r(21877),a=r(21564),n=(r(73446),r(85569),r(39831),r(75094)),l=r(63863),p=r(77542),u=r(38938),c=r(48330);let h=class extends((0,s.O)(o.oY)){constructor(e){super(e),this.id=null,this.name=null,this.domains=null,this.templates=null}readDomains(e){const t={};for(const r of Object.keys(e))t[r]=(0,u.rS)(e[r]);return t}writeDomains(e,t){const r={};for(const i of Object.keys(e))e[i]&&(r[i]=e[i]?.toJSON());t.domains=r}};(0,i._)([(0,a.MZ)({json:{write:!0}})],h.prototype,"id",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],h.prototype,"name",void 0),(0,i._)([(0,a.MZ)({json:{write:!0}})],h.prototype,"domains",void 0),(0,i._)([(0,n.w)("domains")],h.prototype,"readDomains",null),(0,i._)([(0,p.K)("domains")],h.prototype,"writeDomains",null),(0,i._)([(0,a.MZ)({type:[c.A],json:{write:!0}})],h.prototype,"templates",void 0),h=(0,i._)([(0,l.$)("esri.layers.support.FeatureType")],h);const d=h},8585:(e,t,r)=>{r.d(t,{A:()=>u});var i,s=r(66866),o=r(48982),a=r(21877),n=r(21564),l=(r(73446),r(85569),r(39831),r(63863));let p=i=class extends a.oY{constructor(e){super(e),this.floorField=null,this.viewAllMode=!1,this.viewAllLevelIds=new o.A}clone(){return new i({floorField:this.floorField,viewAllMode:this.viewAllMode,viewAllLevelIds:this.viewAllLevelIds})}};(0,s._)([(0,n.MZ)({type:String,json:{write:!0}})],p.prototype,"floorField",void 0),(0,s._)([(0,n.MZ)({json:{read:!1,write:!1}})],p.prototype,"viewAllMode",void 0),(0,s._)([(0,n.MZ)({json:{read:!1,write:!1}})],p.prototype,"viewAllLevelIds",void 0),p=i=(0,s._)([(0,l.$)("esri.layers.support.LayerFloorInfo")],p);const u=p},68820:(e,t,r)=>{r.d(t,{A:()=>o});var i=r(98849),s=r(40189);class o{constructor(e,t=0,r=e.lods[e.lods.length-1].level){this.tileInfo=e,this.minLOD=t,this.maxLOD=r,e.lodAt(t)||(this.minLOD=e.lods[0].level),e.lodAt(r)||(this.maxLOD=e.lods[e.lods.length-1].level)}get effectiveMinLOD(){return this.minLOD??this.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.tileInfo.lods[this.tileInfo.lods.length-1].level}getAvailability(e,t,r){const i=this.tileInfo?.lodAt(e);return!i||e<this.minLOD||e>this.maxLOD?"unavailable":i.cols&&i.rows?r>=i.cols[0]&&r<=i.cols[1]&&t>=i.rows[0]&&t<=i.rows[1]?"unknown":"unavailable":"unknown"}async fetchAvailability(e,t,r,o){await(0,s.NO)(o);const a=this.getAvailability(e,t,r);if("unavailable"===a)throw new i.A("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:r});return a}async fetchAvailabilityUpsample(e,t,r,i,o){await(0,s.NO)(o),i.level=e,i.row=t,i.col=r;const a=this.tileInfo;return a.updateTileInfo(i),this.fetchAvailability(e,t,r,o).catch((e=>{if((0,s.zf)(e))throw e;if(a.upsampleTile(i))return this.fetchAvailabilityUpsample(i.level,i.row,i.col,i,o);throw e}))}}},35787:(e,t,r)=>{r.d(t,{d:()=>b});var i,s=r(66866),o=r(86394),a=r(52495),n=r(84858),l=r(98849),p=r(20464),u=r(89926),c=r(63678),h=r(40189),d=r(85251),y=r(61449),f=r(20909),v=r(21564),m=(r(73446),r(85569)),g=(r(39831),r(63863)),w=r(88061),A=r(19251),_=r(86942);class S{constructor(e){this._validateJSON(e);const{location:t,data:r}=e;this.location=Object.freeze((0,A.o8)(t));const i=this.location.width,s=this.location.height;let o=!0,a=!0;const n=function(e,t=!1){return e<=_.y9?t?new Array(e).fill(0):new Array(e):new Uint32Array(e)}(Math.ceil(i*s/32));let l=0;for(let p=0;p<r.length;p++){const e=p%32;r[p]?(a=!1,n[l]|=1<<e):o=!1,31===e&&++l}a?(this._availability="unavailable",this.byteSize=40):o?(this._availability="available",this.byteSize=40):(this._availability=n,this.byteSize=40+(0,_.Ek)(n))}getAvailability(e,t){if("unavailable"===this._availability||"available"===this._availability)return this._availability;const r=(e-this.location.top)*this.location.width+(t-this.location.left),i=r%32,s=r>>5,o=this._availability;return s<0||s>o.length?"unknown":o[s]&1<<i?"available":"unavailable"}static fromDefinition(e,t){const r=e.service.request||o.A,{row:i,col:s,width:a,height:n}=e,p={query:{f:"json"}};return t=t?{...p,...t}:p,r(function(e){let t;if(e.service.tileServers?.length){const r=e.service.tileServers;t=`${r&&r.length?r[e.row%r.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}else t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;const r=e.service.query;return r&&(t=`${t}?${r}`),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:i,left:s,width:a,height:n},valid:!0,data:(0,m.dY)(a*n,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==i||e.location.left!==s||e.location.width!==a||e.location.height!==n))throw new l.A("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:i,left:s,width:a,height:n}});return S.fromJSON(e)}))}static fromJSON(e){return Object.freeze(new S(e))}_validateJSON(e){if(!e?.location)throw new l.A("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new l.A("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new l.A("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new l.A("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new l.A("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function T(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}let b=i=class extends a.A{constructor(e){super(e),this._pendingTilemapRequests={},this.request=o.A,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new u.q(2*n.u.MEGABYTES),this.addHandles([(0,d.wB)((()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]}),(()=>this._initializeTilemapDefinition()),d.Vh)])}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}fetchTilemap(e,t,r,i){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new l.A("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const s=this._tmpTilemapDefinition,o=this._tilemapFromCache(e,t,r,s);if(o)return Promise.resolve(o);const a=i?.signal;return i={...i,signal:null},new Promise(((e,t)=>{(0,h.u7)(a,(()=>t((0,h.NK)())));const r=T(s);let o=this._pendingTilemapRequests[r];if(!o){o=S.fromDefinition(s,i).then((e=>(this._tilemapCache.put(r,e,e.byteSize),e)));const e=()=>{delete this._pendingTilemapRequests[r]};this._pendingTilemapRequests[r]=o,o.then(e,e)}o.then(e,t)}))}getAvailability(e,t,r){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";const i=this._tilemapFromCache(e,t,r,this._tmpTilemapDefinition);return i?i.getAvailability(t,r):"unknown"}fetchAvailability(e,t,r,i){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(new l.A("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:r})):this.fetchTilemap(e,t,r,i).catch((e=>e)).then((i=>{if(i instanceof S){const s=i.getAvailability(t,r);if("unavailable"===s)throw new l.A("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:r});return s}if((0,h.zf)(i))throw i;return"unknown"}))}fetchAvailabilityUpsample(e,t,r,i,s){i.level=e,i.row=t,i.col=r;const o=this.layer.tileInfo;o.updateTileInfo(i);const a=this.fetchAvailability(e,t,r,s).catch((e=>{if((0,h.zf)(e))throw e;if(o.upsampleTile(i))return this.fetchAvailabilityUpsample(i.level,i.row,i.col,i,s);throw e}));return this._fetchAvailabilityUpsamplePrefetch(i.id,e,t,r,s,a),a}async _fetchAvailabilityUpsamplePrefetch(e,t,r,s,o,a){if(!this._prefetchingEnabled||null==e)return;const n=`prefetch-${e}`;if(this.hasHandles(n))return;const l=new AbortController;a.then((()=>l.abort()),(()=>l.abort()));let u=!1;const c=(0,p.hA)((()=>{u||(u=!0,l.abort())}));if(this.addHandles(c,n),await(0,y.md)(10,l.signal).catch((()=>{})),u||(u=!0,this.removeHandles(n)),(0,h.G4)(l))return;const d=new w.U(e,t,r,s),f={...o,signal:l.signal},v=this.layer.tileInfo;for(let p=0;i._prefetches.length<i._maxPrefetch&&v.upsampleTile(d);++p){const e=this.fetchAvailability(d.level,d.row,d.col,f);i._prefetches.push(e);const t=()=>{i._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:t,customParameters:r}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:(0,f.x0)({...e.query,...r,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,r,i){i.level=e,i.row=t-t%this.size,i.col=r-r%this.size;const s=T(i);return this._tilemapCache.get(s)}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,r,i)=>!!e._tilemapFromCache(t,r,i,e._tmpTilemapDefinition)}}};b._maxPrefetch=4,b._prefetches=new c.A({initialSize:i._maxPrefetch}),(0,s._)([(0,v.MZ)({constructOnly:!0})],b.prototype,"layer",void 0),(0,s._)([(0,v.MZ)({constructOnly:!0})],b.prototype,"minLOD",void 0),(0,s._)([(0,v.MZ)({constructOnly:!0})],b.prototype,"maxLOD",void 0),(0,s._)([(0,v.MZ)({constructOnly:!0})],b.prototype,"request",void 0),(0,s._)([(0,v.MZ)({constructOnly:!0})],b.prototype,"size",void 0),b=i=(0,s._)([(0,g.$)("esri.layers.support.TilemapCache")],b)},90351:(e,t,r)=>{r.d(t,{S:()=>c});var i=r(39831),s=r(16123);function o(e,t,r){return!!n(e,t,r)}function a(e,t,r){return n(e,t,r)}function n(e,t,r){return e&&e.hasOwnProperty(t)?e[t]:r}const l={name:"supportsName",size:"supportsSize",contentType:"supportsContentType",keywords:"supportsKeywords",exifInfo:"supportsExifInfo"};function p(e){const t=e?.supportedSpatialAggregationStatistics?.map((e=>e.toLowerCase()));return{envelope:!!t?.includes("envelopeaggregate"),centroid:!!t?.includes("centroidaggregate"),convexHull:!!t?.includes("convexhullaggregate")}}function u(e,t){const r=e?.supportedOperationsWithCacheHint?.map((e=>e.toLowerCase()));return!!r?.includes(t.toLowerCase())}function c(e,t){return{analytics:h(e),attachment:d(e),data:y(e),metadata:f(e),operations:v(e.capabilities,e,t),query:m(e,t),queryRelated:g(e),queryTopFeatures:w(e),editing:A(e)}}function h(e){return{supportsCacheHint:u(e.advancedQueryCapabilities,"queryAnalytics")}}function d(e){const t=e.attachmentProperties,r={supportsName:!1,supportsSize:!1,supportsContentType:!1,supportsKeywords:!1,supportsExifInfo:!1,supportsCacheHint:u(e.advancedQueryCapabilities,"queryAttachments"),supportsResize:o(e,"supportsAttachmentsResizing",!1)};return t&&Array.isArray(t)&&t.forEach((e=>{const t=l[e.name];t&&(r[t]=!!e.isEnabled)})),r}function y(e){return{isVersioned:o(e,"isDataVersioned",!1),supportsAttachment:o(e,"hasAttachments",!1),supportsM:o(e,"hasM",!1),supportsZ:o(e,"hasZ",!1)}}function f(e){return{supportsAdvancedFieldProperties:o(e,"supportsFieldDescriptionProperty",!1)}}function v(e,t,r){const i=e?e.toLowerCase().split(",").map((e=>e.trim())):[],a=r?(0,s.qg)(r):null,n=i.includes(null!=a&&"MapServer"===a.serverType?"data":"query"),l=i.includes("editing")&&!t.datesInUnknownTimezone;let p=l&&i.includes("create"),u=l&&i.includes("delete"),c=l&&i.includes("update");const h=i.includes("changetracking"),d=t.advancedQueryCapabilities;return l&&!(p||u||c)&&(p=u=c=!0),{supportsCalculate:o(t,"supportsCalculate",!1),supportsTruncate:o(t,"supportsTruncate",!1),supportsValidateSql:o(t,"supportsValidateSql",!1),supportsAdd:p,supportsDelete:u,supportsEditing:l,supportsChangeTracking:h,supportsQuery:n,supportsQueryAnalytics:o(d,"supportsQueryAnalytic",!1),supportsQueryAttachments:o(d,"supportsQueryAttachments",!1),supportsQueryTopFeatures:o(d,"supportsTopFeaturesQuery",!1),supportsResizeAttachments:o(t,"supportsAttachmentsResizing",!1),supportsSync:i.includes("sync"),supportsUpdate:c,supportsExceedsLimitStatistics:o(t,"supportsExceedsLimitStatistics",!1),supportsAsyncConvert3D:o(t,"supportsAsyncConvert3D",!1)}}function m(e,t){const r=e.advancedQueryCapabilities,n=e.ownershipBasedAccessControlForFeatures,l=e.archivingInfo,c=e.currentVersion,h=t?.includes("MapServer"),d=!h||c>=(0,i.A)("mapserver-pbf-version-support"),y=(0,s.Wo)(t),f=new Set((e.supportedQueryFormats??"").split(",").map((e=>e.toLowerCase().trim())));return{supportsStatistics:o(r,"supportsStatistics",e.supportsStatistics),supportsPercentileStatistics:o(r,"supportsPercentileStatistics",!1),supportsSpatialAggregationStatistics:o(r,"supportsSpatialAggregationStatistics",!1),supportedSpatialAggregationStatistics:p(r),supportsCentroid:o(r,"supportsReturningGeometryCentroid",!1),supportsDistance:o(r,"supportsQueryWithDistance",!1),supportsDistinct:o(r,"supportsDistinct",e.supportsAdvancedQueries),supportsExtent:o(r,"supportsReturningQueryExtent",!1),supportsGeometryProperties:o(r,"supportsReturningGeometryProperties",!1),supportsHavingClause:o(r,"supportsHavingClause",!1),supportsOrderBy:o(r,"supportsOrderBy",e.supportsAdvancedQueries),supportsPagination:o(r,"supportsPagination",!1),supportsQuantization:o(e,"supportsCoordinatesQuantization",!1),supportsQuantizationEditMode:o(e,"supportsQuantizationEditMode",!1),supportsQueryGeometry:o(e,"supportsReturningQueryGeometry",!1),supportsResultType:o(r,"supportsQueryWithResultType",!1),supportsMaxRecordCountFactor:o(r,"supportsMaxRecordCountFactor",!1),supportsSqlExpression:o(r,"supportsSqlExpression",!1),supportsStandardizedQueriesOnly:o(e,"useStandardizedQueries",!1),supportsTopFeaturesQuery:o(r,"supportsTopFeaturesQuery",!1),supportsQueryByAnonymous:o(n,"allowAnonymousToQuery",!0),supportsQueryByOthers:o(n,"allowOthersToQuery",!0),supportsHistoricMoment:o(l,"supportsQueryWithHistoricMoment",!1),supportsFormatPBF:d&&f.has("pbf"),supportsDisjointSpatialRelationship:o(r,"supportsDisjointSpatialRel",!1),supportsCacheHint:o(r,"supportsQueryWithCacheHint",!1)||u(r,"query"),supportsDefaultSpatialReference:o(r,"supportsDefaultSR",!1),supportsCompactGeometry:y,supportsFullTextSearch:o(r,"supportsFullTextSearch",!1),maxRecordCountFactor:a(e,"maxRecordCountFactor",void 0),maxRecordCount:a(e,"maxRecordCount",void 0),standardMaxRecordCount:a(e,"standardMaxRecordCount",void 0),tileMaxRecordCount:a(e,"tileMaxRecordCount",void 0)}}function g(e){const t=e.advancedQueryCapabilities,r=o(t,"supportsAdvancedQueryRelated",!1);return{supportsPagination:o(t,"supportsQueryRelatedPagination",!1),supportsCount:r,supportsOrderBy:r,supportsCacheHint:u(t,"queryRelated")}}function w(e){return{supportsCacheHint:u(e.advancedQueryCapabilities,"queryTopFilter")}}function A(e){const t=e.ownershipBasedAccessControlForFeatures,r=e?e.advancedEditingCapabilities:void 0;return{supportsGeometryUpdate:o(e,"allowGeometryUpdates",!0),supportsGlobalId:o(e,"supportsApplyEditsWithGlobalIds",!1),supportsReturnServiceEditsInSourceSpatialReference:o(e,"supportsReturnServiceEditsInSourceSR",!1),supportsRollbackOnFailure:o(e,"supportsRollbackOnFailureParameter",!1),supportsUpdateWithoutM:o(e,"allowUpdateWithoutMValues",!1),supportsUploadWithItemId:o(e,"supportsAttachmentsByUploadId",!1),supportsDeleteByAnonymous:o(t,"allowAnonymousToDelete",!0),supportsDeleteByOthers:o(t,"allowOthersToDelete",!0),supportsUpdateByAnonymous:o(t,"allowAnonymousToUpdate",!0),supportsUpdateByOthers:o(t,"allowOthersToUpdate",!0),supportsAsyncApplyEdits:o(r,"supportsAsyncApplyEdits",!1),zDefault:a(e,"zDefault",void 0)}}},27604:(e,t,r)=>{r.d(t,{q:()=>s});var i=r(8034);function s(e,t,r){if(!r?.features||!r.hasZ)return;const s=(0,i.N)(r.geometryType,t,e.outSpatialReference);if(null!=s)for(const i of r.features)s(i.geometry)}}}]);