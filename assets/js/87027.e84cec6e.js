"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[87027],{87027:(e,t,i)=>{i.r(t),i.d(t,{default:()=>I});var r=i(66866),o=i(98849),s=i(539),n=i(35775),a=i(40189),p=i(85251),l=i(21564),y=(i(39831),i(9272),i(75094)),d=i(63863),c=i(77841),h=i(68833),u=i(50193),m=i(45681),f=i(16161),g=i(41506),v=i(34722),_=i(25389),S=i(68821),w=i(76592),M=i(84546),A=i(75624),O=i(27451),T=i(63680);let x=class extends((0,S.w6)((0,m.b)((0,g.q)((0,v.A)((0,_.j)((0,n.P)((0,f.d)((0,u.p)(h.A))))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles((0,p.on)((()=>this.modifications),"after-changes",(()=>this.modifications=this.modifications),p.OH))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}readModifications(e,t,i){this._modificationsSource={url:(0,T.f)(e,i),context:i}}set elevationInfo(e){null!=e&&"absolute-height"!==e.mode||this._set("elevationInfo",e),this._validateElevationInfo(e)}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e?.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(i){(0,a.QP)(i)}if(await this._fetchService(t),null!=this._modificationsSource){const t=await A.A.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",t,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(null!=this._modificationsSource)return this.load().then((()=>{}),(()=>{}))}async saveAs(e,t){return this._debouncedSaveOperations(S.Xh.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(S.Xh.SAVE,e)}validateLayer(e){if(e.layerType&&"IntegratedMesh"!==e.layerType)throw new o.A("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new o.A("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new o.A("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(e){const t="Integrated mesh layers";(0,O.XF)(s.A.getLogger(this),(0,O.B)(t,"absolute-height",e)),(0,O.XF)(s.A.getLogger(this),(0,O.tW)(t,e))}};(0,r._)([(0,l.MZ)({type:String,readOnly:!0})],x.prototype,"geometryType",void 0),(0,r._)([(0,l.MZ)({type:["show","hide"]})],x.prototype,"listMode",void 0),(0,r._)([(0,l.MZ)({type:["IntegratedMeshLayer"]})],x.prototype,"operationalLayerType",void 0),(0,r._)([(0,l.MZ)({json:{read:!1},readOnly:!0})],x.prototype,"type",void 0),(0,r._)([(0,l.MZ)({type:M.W4,readOnly:!0})],x.prototype,"nodePages",void 0),(0,r._)([(0,l.MZ)({type:[M.uV],readOnly:!0})],x.prototype,"materialDefinitions",void 0),(0,r._)([(0,l.MZ)({type:[M.Ot],readOnly:!0})],x.prototype,"textureSetDefinitions",void 0),(0,r._)([(0,l.MZ)({type:[M.L0],readOnly:!0})],x.prototype,"geometryDefinitions",void 0),(0,r._)([(0,l.MZ)({readOnly:!0})],x.prototype,"serviceUpdateTimeStamp",void 0),(0,r._)([(0,l.MZ)({type:A.A,clonable:e=>e.clone()}),(0,c.P)({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],x.prototype,"modifications",void 0),(0,r._)([(0,y.w)(["web-scene","portal-item"],"modifications")],x.prototype,"readModifications",null),(0,r._)([(0,l.MZ)(w.Yj)],x.prototype,"elevationInfo",null),(0,r._)([(0,l.MZ)({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],x.prototype,"path",void 0),x=(0,r._)([(0,d.$)("esri.layers.IntegratedMeshLayer")],x);const I=x},50193:(e,t,i)=>{i.d(t,{p:()=>n});var r=i(66866),o=i(21564),s=(i(39831),i(539),i(9272),i(63863));const n=e=>{let t=class extends e{get apiKey(){return this._isOverridden("apiKey")?this._get("apiKey"):"portalItem"in this?this.portalItem?.apiKey:null}set apiKey(e){null!=e?this._override("apiKey",e):(this._clearOverride("apiKey"),this.clear("apiKey","user"))}};return(0,r._)([(0,o.MZ)({type:String})],t.prototype,"apiKey",null),t=(0,r._)([(0,s.$)("esri.layers.mixins.APIKeyMixin")],t),t}},75624:(e,t,i)=>{i.d(t,{A:()=>_});var r,o=i(66866),s=i(86394),n=i(48982),a=i(21877),p=i(20909),l=i(21564),y=(i(39831),i(539),i(9272),i(63863)),d=i(19251),c=i(68659),h=i(77542),u=i(77841),m=i(62802),f=i(68490);let g=r=class extends a.A{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,t,i,r){if(r.layer?.spatialReference&&!r.layer.spatialReference.equals(this.geometry.spatialReference)){if(!(0,f.canProjectWithoutEngine)(e.spatialReference,r.layer.spatialReference))return void(r?.messages&&r.messages.push(new c.A("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:r.layer.spatialReference,context:r})));const o=new m.A;(0,f.projectPolygon)(e,o,r.layer.spatialReference),t[i]=o.toJSON(r)}else t[i]=e.toJSON(r);delete t[i].spatialReference}clone(){return new r({geometry:(0,d.o8)(this.geometry),type:this.type})}};var v;(0,o._)([(0,l.MZ)({type:m.A}),(0,u.P)()],g.prototype,"geometry",void 0),(0,o._)([(0,h.K)(["web-scene","portal-item"],"geometry")],g.prototype,"writeGeometry",null),(0,o._)([(0,l.MZ)({type:["clip","mask","replace"],nonNullable:!0}),(0,u.P)()],g.prototype,"type",void 0),g=r=(0,o._)([(0,y.$)("esri.layers.support.SceneModification")],g);let _=v=class extends(a.A.JSONSupportMixin(n.A.ofType(g))){constructor(e){super(e),this.url=null}clone(){return new v({url:this.url,items:this.items.map((e=>e.clone()))})}toJSON(e){return this.toArray().map((t=>t.toJSON(e))).filter((e=>!!e.geometry))}static fromJSON(e,t){const i=new v;for(const r of e)i.add(g.fromJSON(r,t));return i}static async fromUrl(e,t,i){const r={url:(0,p.An)(e),origin:"service"},o=await(0,s.A)(e,{responseType:"json",signal:i?.signal}),n=t.toJSON(),a=[];for(const s of o.data)a.push(g.fromJSON({...s,geometry:{...s.geometry,spatialReference:n}},r));return new v({url:e,items:a})}};(0,o._)([(0,l.MZ)({type:String})],_.prototype,"url",void 0),_=v=(0,o._)([(0,y.$)("esri.layers.support.SceneModifications")],_)}}]);