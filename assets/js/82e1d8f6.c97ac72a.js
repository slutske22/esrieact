"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[63619],{47151:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var r=n(74848),i=n(28453);const a={},s="createWidgetComponent",o={id:"core-apis/createWidgetComponent",title:"createWidgetComponent",description:"The createWidgetComponent function can be used to create any type of component that extends from the ESRI Widget class. It takes in a function that creates the widget instance, a ref, and the widget properties, and returns a react-ready component that can be used as a child of a MapView.",source:"@site/docs/core-apis/createWidgetComponent.mdx",sourceDirName:"core-apis",slug:"/core-apis/createWidgetComponent",permalink:"/esrieact/core-apis/createWidgetComponent",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"createRendererComponent",permalink:"/esrieact/core-apis/createRendererComponent"}},c={},d=[{value:"Function signature",id:"function-signature",level:2},{value:"Example Usage",id:"example-usage",level:2},{value:"Typescript",id:"typescript",level:3},{value:"Javascript",id:"javascript",level:3},{value:"Usage",id:"usage",level:3}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"createwidgetcomponent",children:(0,r.jsx)(t.code,{children:"createWidgetComponent"})})}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"createWidgetComponent"})," function can be used to create any type of component that extends from the ",(0,r.jsxs)(t.a,{href:"https://developers.arcgis.com/javascript/latest/api-reference/esri-widgets-Widget.html",children:["ESRI ",(0,r.jsx)(t.code,{children:"Widget"})," class"]}),". It takes in a function that creates the widget instance, a ref, and the widget properties, and returns a react-ready component that can be used as a child of a ",(0,r.jsx)(t.code,{children:"MapView"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"function-signature",children:"Function signature"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"/**\n * Factory function to create an esrieact widget component\n * @param createWidget Function that takes in the widget properties\n * (which must extend from __esri.WidgetProperties) and returns the widget instance\n * @param ref The react ref to be passed from the parent\n * @param properties The widget properties\n * @returns A context provider whose context is the instance to be passed to children,\n * or if there are no children, returns null.\n */\ncreateWidgetComponent<P extends WidgetComponentProps>(\n  createWidget: CreateWidgetFunction,\n  ref: Ref<EsriWidget>,\n  { children, events, position, view: viewFromProps, ...properties }: P,\n) => JSX.Element | null;\n"})}),"\n",(0,r.jsx)(t.p,{children:"Where"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"/**\n * Properties that can be applied to any ESRIEACT Widget component.  Extends from\n * esri's WidgetProperties to include child components and the widget position\n */\nexport type WidgetComponentProps<\n  T extends __esri.WidgetProperties = __esri.WidgetProperties & {\n    view?: __esri.MapView;\n  },\n  E extends Record<string, Function> = {},\n> = React.PropsWithChildren<T> & {\n  events?: E;\n  position?: string | __esri.UIAddPosition;\n};\n\n/**\n * Function that takes in layer properties and returns an esri Layer instance. Properties must be\n * any esri properties that extend esri.LayerProperties, and optional children\n */\nexport type CreateWidgetFunction<\n  T extends WidgetComponentProps = WidgetComponentProps,\n> = (properties: T) => __esri.Widget;\n"})}),"\n",(0,r.jsx)(t.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,r.jsx)(t.h3,{id:"typescript",children:"Typescript"}),"\n",(0,r.jsxs)(t.p,{children:["If you need to create a widget component that is not in ESRIEACT, you can use ",(0,r.jsx)(t.code,{children:"createWidgetComponent"})," to create it. For example, here we want to create a ",(0,r.jsx)(t.code,{children:"DirectionalPad"})," component. We first define the event handler function map for the ",(0,r.jsx)(t.code,{children:"DirectionalPad"})," component, and then define the ",(0,r.jsx)(t.code,{children:"createWidget"})," function that takes in the widget properties and returns the ",(0,r.jsx)(t.code,{children:"DirectionalPad"})," instance. Finally, we use ",(0,r.jsx)(t.code,{children:"createWidgetComponent"})," to create the ",(0,r.jsx)(t.code,{children:"DirectionalPad"})," component."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"/**\n * Event handler function map for events specific the Sketch widget\n *\n * Note that most widgets do not have events\n */\ntype SketchEventHandlerFnMap = Partial<{\n  delete: __esri.SketchDeleteEventHandler;\n  create: __esri.SketchCreateEventHandler;\n  update: __esri.SketchUpdateEventHandler;\n  redo: __esri.SketchRedoEventHandler;\n  undo: __esri.SketchUndoEventHandler;\n}>;\n\n/**\n * Special properties for this specific widget\n */\ninterface SketchProperties extends __esri.SketchProperties {\n  layer: __esri.GraphicsLayer;\n}\n\n/**\n * Function that takes in the widget specific properties and returns the widget instance\n */\nconst createWidget = (\n  properties: WidgetComponentProps<SketchProperties, SketchEventHandlerFnMap>,\n): EsriSketch => {\n  return new EsriSketch(properties);\n};\n\n/**\n * The react Sketch component\n */\nexport const Sketch = React.forwardRef<\n  EsriSketch,\n  WidgetComponentProps<SketchProperties, SketchEventHandlerFnMap>\n>((properties, ref) => createWidgetComponent(createWidget, ref, properties));\n"})}),"\n",(0,r.jsx)(t.h3,{id:"javascript",children:"Javascript"}),"\n",(0,r.jsx)(t.p,{children:"Most of the above code is careful typescript typing to ensure correctly typed props and event handlers. The javascript version is much simpler:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"const createWidget = (properties) => new EsriSketch(properties);\n\nexport const Sketch = React.forwardRef((properties, ref) =>\n  createWidgetComponent(createWidget, ref, properties),\n);\n"})}),"\n",(0,r.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(t.p,{children:["Now you can use the ",(0,r.jsx)(t.code,{children:"Sketch"})," component as a child of a ",(0,r.jsx)(t.code,{children:"MapView"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:"live",live:!0,children:'// Example.tsx\nfunction Example() {\n  return (\n    <MapView\n      ViewProperties={{ extent: OAHU_EXTENT_2 }}\n      MapProperties={{ basemap: "topo-vector" }}\n      style={{ height: "300px", width: "100%" }}\n    >\n      <Sketch position="top-right" />\n    </MapView>\n  );\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["(Note that the ",(0,r.jsx)(t.code,{children:"Sketch"})," widget requires you to specify a ",(0,r.jsx)(t.code,{children:"GraphicsLayer"})," to work - see the ",(0,r.jsx)(t.a,{href:"/examples/layers/GraphicsLayer#as-a-canvas-for-sketch",children:"GraphicsLayer example"}),".)"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);