"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[30828],{66602:(e,n,t)=>{t.d(n,{A:()=>z,B:()=>I,C:()=>V,D:()=>j,E:()=>k,F:()=>C,G:()=>H,H:()=>_,I:()=>q,J:()=>B,K:()=>O,L:()=>P,M:()=>M,N:()=>F,a:()=>o,b:()=>f,c:()=>c,d:()=>l,e:()=>u,f:()=>a,g:()=>J,h:()=>s,i:()=>g,j:()=>d,k:()=>w,l:()=>y,m:()=>S,n:()=>D,o:()=>h,p:()=>R,q:()=>v,r:()=>m,s:()=>x,t:()=>G,u:()=>b,v:()=>A,w:()=>p,x:()=>E,y:()=>L,z:()=>T});var r=t(47313),i=t(94625);function u(e){return r.G.extendedSpatialReferenceInfo(e)}function c(e,n,t){return r.G.clip(i.g,e,n,t)}function o(e,n,t){return r.G.cut(i.g,e,n,t)}function f(e,n,t){return r.G.contains(i.g,e,n,t)}function l(e,n,t){return r.G.crosses(i.g,e,n,t)}function a(e,n,t,u){return r.G.distance(i.g,e,n,t,u)}function s(e,n,t){return r.G.equals(i.g,e,n,t)}function g(e,n,t){return r.G.intersects(i.g,e,n,t)}function G(e,n,t){return r.G.touches(i.g,e,n,t)}function p(e,n,t){return r.G.within(i.g,e,n,t)}function d(e,n,t){return r.G.disjoint(i.g,e,n,t)}function h(e,n,t){return r.G.overlaps(i.g,e,n,t)}function m(e,n,t,u){return r.G.relate(i.g,e,n,t,u)}function w(e,n){return r.G.isSimple(i.g,e,n)}function x(e,n){return r.G.simplify(i.g,e,n)}function y(e,n,t=!1){return r.G.convexHull(i.g,e,n,t)}function S(e,n,t){return r.G.difference(i.g,e,n,t)}function D(e,n,t){return r.G.symmetricDifference(i.g,e,n,t)}function R(e,n,t){return r.G.intersect(i.g,e,n,t)}function b(e,n,t=null){return r.G.union(i.g,e,n,t)}function v(e,n,t,u,c,o,f){return r.G.offset(i.g,e,n,t,u,c,o,f)}function A(e,n,t,u,c=!1){return r.G.buffer(i.g,e,n,t,u,c)}function E(e,n,t,u,c,o,f){return r.G.geodesicBuffer(i.g,e,n,t,u,c,o,f)}function L(e,n,t,u=!0){return r.G.nearestCoordinate(i.g,e,n,t,u)}function T(e,n,t){return r.G.nearestVertex(i.g,e,n,t)}function z(e,n,t,u,c){return r.G.nearestVertices(i.g,e,n,t,u,c)}function I(e,n,t,i){if(null==n||null==i)throw new Error("Illegal Argument Exception");const u=r.G.rotate(n,t,i);return u.spatialReference=e,u}function V(e,n,t){if(null==n||null==t)throw new Error("Illegal Argument Exception");const i=r.G.flipHorizontal(n,t);return i.spatialReference=e,i}function j(e,n,t){if(null==n||null==t)throw new Error("Illegal Argument Exception");const i=r.G.flipVertical(n,t);return i.spatialReference=e,i}function k(e,n,t,u,c){return r.G.generalize(i.g,e,n,t,u,c)}function C(e,n,t,u){return r.G.densify(i.g,e,n,t,u)}function H(e,n,t,u,c=0){return r.G.geodesicDensify(i.g,e,n,t,u,c)}function _(e,n,t){return r.G.planarArea(i.g,e,n,t)}function q(e,n,t){return r.G.planarLength(i.g,e,n,t)}function B(e,n,t,u){return r.G.geodesicArea(i.g,e,n,t,u)}function O(e,n,t,u){return r.G.geodesicLength(i.g,e,n,t,u)}function P(e,n,t){return null==n||null==t?[]:r.G.intersectLinesToPoints(i.g,e,n,t)}function M(e,n){r.G.changeDefaultSpatialReferenceTolerance(e,n)}function F(e){r.G.clearDefaultSpatialReferenceTolerance(e)}const J=Object.freeze(Object.defineProperty({__proto__:null,buffer:A,changeDefaultSpatialReferenceTolerance:M,clearDefaultSpatialReferenceTolerance:F,clip:c,contains:f,convexHull:y,crosses:l,cut:o,densify:C,difference:S,disjoint:d,distance:a,equals:s,extendedSpatialReferenceInfo:u,flipHorizontal:V,flipVertical:j,generalize:k,geodesicArea:B,geodesicBuffer:E,geodesicDensify:H,geodesicLength:O,intersect:R,intersectLinesToPoints:P,intersects:g,isSimple:w,nearestCoordinate:L,nearestVertex:T,nearestVertices:z,offset:v,overlaps:h,planarArea:_,planarLength:q,relate:m,rotate:I,simplify:x,symmetricDifference:D,touches:G,union:b,within:p},Symbol.toStringTag,{value:"Module"}))},30828:(e,n,t)=>{t.r(n),t.d(n,{executeGEOperation:()=>i});var r=t(66602);function i(e){return(0,r.g[e.operation])(...e.parameters)}}}]);