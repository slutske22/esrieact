"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[20784],{75804:(e,a,t)=>{t.d(a,{v:()=>n});var r=t(90176);class n{constructor(){this._serviceMetadatas=new Map,this._itemDatas=new Map}async fetchServiceMetadata(e,a){const t=this._serviceMetadatas.get(e);if(t)return t;const n=await(0,r.V)(e,a);return this._serviceMetadatas.set(e,n),n}async fetchItemData(e){const{id:a}=e;if(!a)return null;const{_itemDatas:t}=this;if(t.has(a))return t.get(a);const r=await e.fetchData();return t.set(a,r),r}async fetchCustomParameters(e,a){const t=await this.fetchItemData(e);return t&&"object"==typeof t&&(a?a(t):t.customParameters)||null}}},98154:(e,a,t)=>{t.d(a,{L:()=>u});var r=t(28830),n=t(86394),s=t(98849),i=t(40189),l=t(16123),c=t(10282),o=t(26099);async function u(e,a){const t=(0,l.qg)(e);if(!t)throw new s.A("invalid-url","Invalid scene service url");const u={...a,sceneServerUrl:t.url.path,layerId:t.sublayer??void 0};if(u.sceneLayerItem??=await async function(e){const a=(await y(e)).serviceItemId;if(!a)return null;const t=new o.default({id:a,apiKey:e.apiKey}),s=await async function(e){const a=r.id?.findServerInfo(e.sceneServerUrl);if(a?.owningSystemUrl)return a.owningSystemUrl;const t=e.sceneServerUrl.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{const a=(await(0,n.A)(t,{query:{f:"json"},responseType:"json",signal:e.signal})).data.owningSystemUrl;if(a)return a}catch(f){(0,i.QP)(f)}return null}(e);null!=s&&(t.portal=new c.A({url:s}));try{return await t.load({signal:e.signal})}catch(m){return(0,i.QP)(m),null}}(u),null==u.sceneLayerItem)return d(u.sceneServerUrl.replace("/SceneServer","/FeatureServer"),u);const f=await async function({sceneLayerItem:e,signal:a}){if(!e)return null;try{const t=(await e.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:a})).find((e=>"Feature Service"===e.type))||null;if(!t)return null;const r=new o.default({portal:t.portal,id:t.id});return await r.load(),r}catch(t){return(0,i.QP)(t),null}}(u);if(!f?.url)throw new s.A("related-service-not-found","Could not find feature service through portal item relationship");u.featureServiceItem=f;const m=await d(f.url,u);return m.portalItem=f,m}async function y(e){if(e.rootDocument)return e.rootDocument;const a={query:{f:"json",...e.customParameters,token:e.apiKey},responseType:"json",signal:e.signal};try{const t=await(0,n.A)(e.sceneServerUrl,a);e.rootDocument=t.data}catch{e.rootDocument={}}return e.rootDocument}async function d(e,a){const t=(0,l.qg)(e);if(!t)throw new s.A("invalid-feature-service-url","Invalid feature service url");const r=t.url.path,i=a.layerId;if(null==i)return{serverUrl:r};const c=y(a),o=a.featureServiceItem?await a.featureServiceItem.fetchData("json"):null,u=(o?.layers?.[0]||o?.tables?.[0])?.customParameters,d=e=>{const t={query:{f:"json",...u},responseType:"json",authMode:e,signal:a.signal};return(0,n.A)(r,t)},f=d("anonymous").catch((()=>d("no-prompt"))),[m,w]=await Promise.all([f,c]),p=w?.layers,h=m.data&&m.data.layers;if(!Array.isArray(h))throw new Error("expected layers array");if(Array.isArray(p)){for(let n=0;n<Math.min(p.length,h.length);n++)if(p[n].id===i)return{serverUrl:r,layerId:h[n].id}}else if(null!=i&&i<h.length)return{serverUrl:r,layerId:h[i].id};throw new Error("could not find matching associated sublayer")}},83175:(e,a,t)=>{t.d(a,{K:()=>f,Q:()=>i});var r=t(40454),n=t(90176);const s=new Set(["Catalog Layer","Feature Layer","Oriented Imagery Layer"]);async function i(e,a){const{loadContext:t,...s}=a||{},i=t?await t.fetchServiceMetadata(e,s):await(0,n.V)(e,s),l=(0,r.G$)();d(i),o(i);const c={serviceJSON:i,preferredHost:l};if((i.currentVersion??0)<10.5)return c;const u=`${(0,r.$x)()??e}/layers`,y=t?await t.fetchServiceMetadata(u,s):await(0,n.V)(u,s);return d(y),o(y),c.layersJSON={layers:y.layers,tables:y.tables},c}function l(e){const{type:a}=e;return!!a&&s.has(a)}function c(e){return"Table"===e.type}function o(e){e.layers=e.layers?.filter(l),e.tables=e.tables?.filter(c)}function u(e){e.type||="Feature Layer"}function y(e){e.type||="Table"}function d(e){e.layers?.forEach(u),e.tables?.forEach(y)}function f(e){switch(e){case"Feature Layer":case"Table":return"FeatureLayer";case"Oriented Imagery Layer":return"OrientedImageryLayer";case"Catalog Layer":return"CatalogLayer"}return"FeatureLayer"}},12434:(e,a,t)=>{t.d(a,{S:()=>r});const r={BingMapsLayer:async()=>(await Promise.all([t.e(72076),t.e(16132)]).then(t.bind(t,16132))).default,BuildingSceneLayer:async()=>(await Promise.all([t.e(72076),t.e(53255),t.e(77684),t.e(83780),t.e(92585),t.e(74859),t.e(15976),t.e(61180),t.e(77859)]).then(t.bind(t,59436))).default,CSVLayer:async()=>(await Promise.all([t.e(72076),t.e(53255),t.e(77684),t.e(83780),t.e(54993)]).then(t.bind(t,97588))).default,CatalogLayer:async()=>(await Promise.all([t.e(72076),t.e(77684),t.e(9190),t.e(15524),t.e(97796)]).then(t.bind(t,84480))).default,DimensionLayer:async()=>(await Promise.all([t.e(72076),t.e(39994)]).then(t.bind(t,39994))).default,ElevationLayer:async()=>(await Promise.all([t.e(72076),t.e(48870)]).then(t.bind(t,48870))).default,FeatureLayer:async()=>(await Promise.all([t.e(72076),t.e(53255),t.e(77684),t.e(83780),t.e(73472)]).then(t.bind(t,83780))).default,GeoJSONLayer:async()=>(await Promise.all([t.e(72076),t.e(53255),t.e(8485)]).then(t.bind(t,8485))).default,GeoRSSLayer:async()=>(await Promise.all([t.e(72076),t.e(5730)]).then(t.bind(t,5730))).default,GroupLayer:async()=>(await Promise.all([t.e(72076),t.e(44040),t.e(43374)]).then(t.bind(t,44040))).default,ImageryLayer:async()=>(await Promise.all([t.e(72076),t.e(9190),t.e(98100),t.e(35114),t.e(4739),t.e(43107),t.e(97668)]).then(t.bind(t,43107))).default,ImageryTileLayer:async()=>(await Promise.all([t.e(72076),t.e(98100),t.e(15995),t.e(35114),t.e(25478),t.e(38712),t.e(4739),t.e(11817),t.e(61877),t.e(85517)]).then(t.bind(t,61877))).default,IntegratedMesh3DTilesLayer:async()=>(await Promise.all([t.e(72076),t.e(97701)]).then(t.bind(t,97701))).default,IntegratedMeshLayer:async()=>(await Promise.all([t.e(72076),t.e(61180),t.e(87027)]).then(t.bind(t,87027))).default,KMLLayer:async()=>(await Promise.all([t.e(72076),t.e(19062)]).then(t.bind(t,19062))).default,KnowledgeGraphLayer:async()=>(await Promise.all([t.e(72076),t.e(46826),t.e(96568),t.e(74995),t.e(45442),t.e(90563),t.e(31550),t.e(53423)]).then(t.bind(t,53423))).default,LineOfSightLayer:async()=>(await Promise.all([t.e(72076),t.e(63453),t.e(6593)]).then(t.bind(t,6593))).default,LinkChartLayer:async()=>(await Promise.all([t.e(72076),t.e(46826),t.e(96568),t.e(74995),t.e(45442),t.e(90563),t.e(31550),t.e(32610)]).then(t.bind(t,32610))).default,MapImageLayer:async()=>(await Promise.all([t.e(72076),t.e(9190),t.e(38041),t.e(11330)]).then(t.bind(t,11330))).default,MapNotesLayer:async()=>(await Promise.all([t.e(72076),t.e(53255),t.e(77684),t.e(83780),t.e(27339)]).then(t.bind(t,60266))).default,MediaLayer:async()=>(await Promise.all([t.e(72076),t.e(13183)]).then(t.bind(t,13183))).default,OGCFeatureLayer:async()=>(await Promise.all([t.e(72076),t.e(53255),t.e(28820)]).then(t.bind(t,28820))).default,OpenStreetMapLayer:async()=>(await Promise.all([t.e(72076),t.e(8628)]).then(t.bind(t,8628))).default,OrientedImageryLayer:async()=>(await Promise.all([t.e(72076),t.e(53255),t.e(77684),t.e(83780),t.e(93927),t.e(90745)]).then(t.bind(t,58859))).default,PointCloudLayer:async()=>(await Promise.all([t.e(72076),t.e(75840)]).then(t.bind(t,75840))).default,RouteLayer:async()=>(await Promise.all([t.e(72076),t.e(3058),t.e(2928)]).then(t.bind(t,2928))).default,SceneLayer:async()=>(await Promise.all([t.e(72076),t.e(92585),t.e(74859),t.e(15976),t.e(61180),t.e(9287)]).then(t.bind(t,9287))).default,StreamLayer:async()=>(await Promise.all([t.e(72076),t.e(53255),t.e(31058)]).then(t.bind(t,31058))).default,SubtypeGroupLayer:async()=>(await Promise.all([t.e(72076),t.e(77684),t.e(73182)]).then(t.bind(t,76027))).default,TileLayer:async()=>(await Promise.all([t.e(72076),t.e(9190),t.e(38041),t.e(10107)]).then(t.bind(t,10107))).default,UnknownLayer:async()=>(await Promise.all([t.e(72076),t.e(75335)]).then(t.bind(t,75335))).default,UnsupportedLayer:async()=>(await Promise.all([t.e(72076),t.e(7400)]).then(t.bind(t,7400))).default,VectorTileLayer:async()=>(await Promise.all([t.e(72076),t.e(17744),t.e(13351),t.e(44328)]).then(t.bind(t,38782))).default,VideoLayer:async()=>(await Promise.all([t.e(72076),t.e(93346),t.e(62316)]).then(t.bind(t,62316))).default,ViewshedLayer:async()=>(await Promise.all([t.e(72076),t.e(63453),t.e(24359)]).then(t.bind(t,24359))).default,VoxelLayer:async()=>(await Promise.all([t.e(72076),t.e(68235)]).then(t.bind(t,68235))).default,WCSLayer:async()=>(await Promise.all([t.e(72076),t.e(98100),t.e(15995),t.e(35114),t.e(25478),t.e(38712),t.e(4739),t.e(11817),t.e(13386)]).then(t.bind(t,13386))).default,WFSLayer:async()=>(await Promise.all([t.e(72076),t.e(53255),t.e(62783)]).then(t.bind(t,62783))).default,WMSLayer:async()=>(await Promise.all([t.e(72076),t.e(25719)]).then(t.bind(t,25719))).default,WMTSLayer:async()=>(await Promise.all([t.e(72076),t.e(89685)]).then(t.bind(t,89685))).default,WebTileLayer:async()=>(await Promise.all([t.e(72076),t.e(47187)]).then(t.bind(t,47187))).default}},58035:(e,a,t)=>{t.d(a,{Ju:()=>u,K8:()=>f,XH:()=>y,_r:()=>i,bO:()=>l,l:()=>d,nu:()=>m,pJ:()=>c,rc:()=>o});var r=t(98154),n=t(83175),s=t(40454);function i(e){const a={id:e.id,name:e.name},t=(0,n.K)(e.type);return"FeatureLayer"!==t&&(a.layerType=t),a}async function l(e,a,t){let r;if(null==e?.layers||null==e?.tables){const n=await t.fetchServiceMetadata(a,{customParameters:c(e)?.customParameters});r=(0,s.G$)(),(e=e||{}).layers=e.layers||n?.layers?.map(i),e.tables=e.tables||n?.tables?.map(i)}return{data:e,preferredHost:r}}function c(e){if(!e)return null;const{layers:a,tables:t}=e;return a?.length?a[0]:t?.length?t[0]:null}function o(e,a){return null==a?null:[...e.layers||[],...e.tables||[]].find((e=>e.id===a))}function u(e,a){return[...e.layers||[],...e.tables||[]].filter((({layerType:e})=>e?a.includes(e):a.includes("ArcGISFeatureLayer")))}function y(e){return(e?.layers?.length??0)+(e?.tables?.length??0)}function d(e){switch(e){case"catalog":return["CatalogLayer"];case"feature":return["ArcGISFeatureLayer"];case"oriented-imagery":return["OrientedImageryLayer"];case"subtype-group":return["SubtypeGroupLayer","SubtypeGroupTable"]}return null}function f(e){switch(e){case"CatalogLayer":return"CatalogLayer";case"OrientedImageryLayer":return"OrientedImageryLayer";case"SubtypeGroupLayer":case"SubtypeGroupTable":return"SubtypeGroupLayer"}return"FeatureLayer"}async function m(e,a,t){if(!e?.url)return a??{};if(a??={},!a.layers){const r=await t.fetchServiceMetadata(e.url);a.layers=r.layers?.map(i)}const{serverUrl:n,portalItem:s}=await(0,r.L)(e.url,{sceneLayerItem:e,customParameters:c(a)?.customParameters}).catch((()=>({serverUrl:null,portalItem:null})));if(null==n)return a.tables=[],a;if(!a.tables&&s){const e=await s.fetchData().catch((()=>null));if(e?.tables)a.tables=e.tables.map(i);else{const r=await t.fetchServiceMetadata(n,{customParameters:c(e)?.customParameters}).catch((()=>null));a.tables=r?.tables?.map(i)}}if(a.tables)for(const r of a.tables)r.url=`${n}/${r.id}`;return a}},20784:(e,a,t)=>{t.d(a,{fromItem:()=>d,n:()=>f});var r=t(98849),n=t(98154),s=t(83175),i=t(75804),l=t(40454),c=t(12434),o=t(26099),u=t(58035),y=t(39532);async function d(e){let{portalItem:a}=e;!a||a instanceof o.default||(a=new o.default(a));const t=await async function(e){await e.load();const a=new i.v;return async function(e){const a=e.className,t=c.S[a];return{constructor:await t(),properties:e.properties}}(await f(e,a))}(a);return new(0,t.constructor)({portalItem:a,...t.properties})}async function f(e,a){switch(e.type){case"3DTiles Service":return e.typeKeywords.includes("3DObject")?{className:"UnsupportedLayer"}:{className:"IntegratedMesh3DTilesLayer"};case"CSV":return{className:"CSVLayer"};case"Feature Collection":return async function(e){await e.load();const a=(0,y.Y)(e,"Map Notes"),t=(0,y.Y)(e,"Markup");if(a||t)return{className:"MapNotesLayer"};if((0,y.Y)(e,"Route Layer"))return{className:"RouteLayer"};const r=await e.fetchData();return 1===(0,u.XH)(r)?{className:"FeatureLayer"}:{className:"GroupLayer"}}(e);case"Feature Service":return async function(e,a){const t=await m(e,a);if("object"==typeof t){const{sourceJSON:e,className:a}=t,r={sourceJSON:e};return null!=t.id&&(r.layerId=t.id),{className:a||"FeatureLayer",properties:r}}return{className:"GroupLayer"}}(e,a);case"Feed":case"Stream Service":return{className:"StreamLayer"};case"GeoJson":return{className:"GeoJSONLayer"};case"Group Layer":return{className:"GroupLayer"};case"Image Service":return async function(e,a){await e.load();const t=e.typeKeywords?.map((e=>e.toLowerCase()))??[];if(t.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(t.includes("tiled imagery"))return{className:"ImageryTileLayer"};const r=await a.fetchItemData(e),n=r?.layerType;if("ArcGISTiledImageServiceLayer"===n)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===n)return{className:"ImageryLayer"};const s=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)}),i=s.cacheType?.toLowerCase(),l=s.capabilities?.toLowerCase().includes("tilesonly"),c=s.tileInfo?.format?.toLowerCase()??"",o=null==i&&["jpg","jpeg","png","png8","png24","png32","mixed"].includes(c);return"map"===i||o||l?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(e,a);case"KML":return{className:"KMLLayer"};case"Knowledge Graph Layer":return{className:"KnowledgeGraphLayer"};case"Map Service":return async function(e,a){return await async function(e,a){const{tileInfo:t}=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)});return t}(e,a)?{className:"TileLayer"}:{className:"MapImageLayer"}}(e,a);case"Media Layer":return{className:"MediaLayer"};case"Scene Service":return async function(e,a){const t=await m(e,a,(async()=>{try{if(!e.url)return[];const{serverUrl:t}=await(0,n.L)(e.url,{sceneLayerItem:e}),r=await a.fetchServiceMetadata(t);return r?.tables??[]}catch{return[]}}));if("object"==typeof t){const r={};let n;if(null!=t.id?(r.layerId=t.id,n=`${e.url}/layers/${t.id}`):n=e.url,e.typeKeywords?.length)for(const a of Object.keys(l.XX))if(e.typeKeywords.includes(a))return{className:l.XX[a]};const s=await a.fetchServiceMetadata(n,{customParameters:await a.fetchCustomParameters(e,(e=>(0,u.pJ)(e)?.customParameters))});return{className:l.XX[s?.layerType]||"SceneLayer",properties:r}}if(!1===t){const t=await a.fetchServiceMetadata(e.url);if("Voxel"===t?.layerType)return{className:"VoxelLayer"}}return{className:"GroupLayer"}}(e,a);case"Video Service":return async function(e,a){return"object"==typeof await m(e,a)?{className:"VideoLayer"}:{className:"GroupLayer"}}(e,a);case"Vector Tile Service":return{className:"VectorTileLayer"};case"WCS":return{className:"WCSLayer"};case"WFS":return{className:"WFSLayer"};case"WMS":return{className:"WMSLayer"};case"WMTS":return{className:"WMTSLayer"};default:throw new r.A("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function m(e,a,t){const{url:r,type:n}=e,i="Feature Service"===n;if(!r)return{};if(/\/\d+$/.test(r)){if(i){const t=await a.fetchServiceMetadata(r,{customParameters:await a.fetchCustomParameters(e,(e=>(0,u.pJ)(e)?.customParameters))});return(0,l.Gh)(e,(0,l.G$)()),{id:t.id,className:(0,s.K)(t.type),sourceJSON:t}}return{}}if("Video Service"===n){const e=await a.fetchServiceMetadata(r);return!((e.layers?.length??0)>1)&&{}}await e.load();let c=await a.fetchItemData(e);if(i){const{data:t,preferredHost:n}=await(0,u.bO)(c,r,a);(0,l.Gh)(e,n);const s=w(t);if("object"==typeof s){const e=(0,u.rc)(t,s.id);s.className=(0,u.K8)(e?.layerType)}return s}if("Scene Service"===n&&(c=await(0,u.nu)(e,c,a)),(0,u.XH)(c)>0)return w(c);const o=await a.fetchServiceMetadata(r);return t&&(o.tables=await t()),w(o)}function w(e){return 1===(0,u.XH)(e)&&{id:(0,u.pJ)(e)?.id}}},90176:(e,a,t)=>{t.d(a,{V:()=>n});var r=t(86394);async function n(e,a){const{data:t}=await(0,r.A)(e,{responseType:"json",query:{f:"json",...a?.customParameters,token:a?.apiKey}});return t}}}]);