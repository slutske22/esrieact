"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[266],{40266:(e,t,n)=>{n.r(t),n.d(t,{invokeGeometryOp:()=>s});var i=n(1171);function r(e,t){let n;return{loaded:!1,load:()=>n??=t().then((t=>{o[e]={loaded:!0,execute:t}}))}}function a(e){return null==e?null:e.toJSON()}const o={disjoint:r("disjoint",(()=>Promise.all([n.e(2076),n.e(8537)]).then(n.bind(n,8537)).then((e=>e.execute)))),intersects:r("intersects",(()=>Promise.all([n.e(2076),n.e(4619)]).then(n.bind(n,4619)).then((e=>e.execute)))),touches:r("touches",(()=>Promise.all([n.e(2076),n.e(3294)]).then(n.bind(n,23294)).then((e=>e.execute)))),crosses:r("crosses",(()=>Promise.all([n.e(2076),n.e(2569)]).then(n.bind(n,22569)).then((e=>e.execute)))),within:r("within",(()=>Promise.all([n.e(2076),n.e(102)]).then(n.bind(n,80102)).then((e=>e.execute)))),contains:r("contains",(()=>Promise.all([n.e(2076),n.e(720)]).then(n.bind(n,80720)).then((e=>e.execute)))),overlaps:r("overlaps",(()=>Promise.all([n.e(2076),n.e(561)]).then(n.bind(n,50561)).then((e=>e.execute)))),equals:r("equals",(async()=>{const e=await Promise.all([n.e(2076),n.e(7141)]).then(n.bind(n,47141));return(t,n)=>e.execute((0,i.rS)(t),(0,i.rS)(n))})),relate:r("relate",(async()=>{const e=await Promise.all([n.e(2076),n.e(1445)]).then(n.bind(n,31445));return(t,n,r)=>e.execute((0,i.rS)(t),(0,i.rS)(n),r)})),intersection:r("intersection",(()=>Promise.all([n.e(2076),n.e(80)]).then(n.bind(n,20080)).then((e=>e.execute)))),union:r("union",(()=>Promise.all([n.e(2076),n.e(2310)]).then(n.bind(n,82310)).then((e=>e.executeMany)))),difference:r("difference",(async()=>{const e=await Promise.all([n.e(2076),n.e(159)]).then(n.bind(n,50159));return(t,n)=>a(e.execute((0,i.rS)(t),(0,i.rS)(n)))})),symmetricDifference:r("symmetricDifference",(async()=>{const e=await Promise.all([n.e(2076),n.e(554)]).then(n.bind(n,30554));return(t,n)=>a(e.execute((0,i.rS)(t),(0,i.rS)(n)))})),clip:r("clip",(async()=>{const e=await Promise.all([n.e(2076),n.e(3581)]).then(n.bind(n,95962));return(t,n)=>a(e.execute((0,i.rS)(t),(0,i.rS)(n)))})),cut:r("cut",(async()=>{const e=await Promise.all([n.e(2076),n.e(5262)]).then(n.bind(n,35262));return(t,n)=>e.execute((0,i.rS)(t),(0,i.rS)(n)).map((e=>a(e)))})),area:r("area",(async()=>{const e=await Promise.all([n.e(2076),n.e(7477)]).then(n.bind(n,57477)),{convertFromSpatialReferenceUnit:t,toAreaUnit:r}=await Promise.all([n.e(2076),n.e(7798)]).then(n.bind(n,27798));return(n,a)=>{const o=e.execute((0,i.rS)(n));return t(n.spatialReference,r(a),o)}})),geodeticArea:r("geodeticArea",(async()=>{const e=await n.e(427).then(n.bind(n,80427)),{convert:t,squareMeters:r,toAreaUnit:a}=await Promise.all([n.e(2076),n.e(7798)]).then(n.bind(n,27798));return await e.load(),(n,o,s)=>{const c=e.execute((0,i.rS)(n),{curveType:s});return t(r,a(o),c)}})),length:r("length",(async()=>{const e=await Promise.all([n.e(2076),n.e(4725)]).then(n.bind(n,64725)),{convertFromSpatialReferenceUnit:t,toLengthUnit:i}=await Promise.all([n.e(2076),n.e(7798)]).then(n.bind(n,27798));return(n,r)=>{const a=e.execute(n);return t(n.spatialReference,i(r),a)}})),geodeticLength:r("geodeticLength",(async()=>{const e=await n.e(8945).then(n.bind(n,51326)),{convert:t,meters:r,toLengthUnit:a}=await Promise.all([n.e(2076),n.e(7798)]).then(n.bind(n,27798));return await e.load(),(n,o,s)=>{const c=e.execute((0,i.rS)(n),{curveType:s});return t(r,a(o),c)}})),distance:r("distance",(async()=>{const e=await Promise.all([n.e(2076),n.e(2079)]).then(n.bind(n,92079)),{convertFromSpatialReferenceUnit:t,toLengthUnit:r}=await Promise.all([n.e(2076),n.e(7798)]).then(n.bind(n,27798));return(n,a,o)=>{const s=e.execute((0,i.rS)(n),(0,i.rS)(a));return t(n.spatialReference,r(o),s)}})),densify:r("densify",(async()=>{const e=await Promise.all([n.e(2076),n.e(9468)]).then(n.bind(n,89468)),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await Promise.all([n.e(2076),n.e(7798)]).then(n.bind(n,27798));return(n,o,s)=>(o=t(r(s),n.spatialReference,o),a(e.execute((0,i.rS)(n),o)))})),geodeticDensify:r("geodeticDensify",(async()=>{const e=await Promise.all([n.e(2076),n.e(8358)]).then(n.bind(n,68358)),{convert:t,meters:r,toLengthUnit:o}=await Promise.all([n.e(2076),n.e(7798)]).then(n.bind(n,27798));return await e.load(),(n,s,c,l)=>(s=t(o(c),r,s),a(e.execute((0,i.rS)(n),s,{curveType:l})))})),generalize:r("generalize",(async()=>{const e=await Promise.all([n.e(2076),n.e(2862)]).then(n.bind(n,52862)),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await Promise.all([n.e(2076),n.e(7798)]).then(n.bind(n,27798));return(n,o,s,c)=>(o=t(r(s),n.spatialReference,o),a(e.execute((0,i.rS)(n),o,c)))})),buffer:r("buffer",(async()=>{const e=await Promise.all([n.e(2076),n.e(7319),n.e(1607)]).then(n.bind(n,51607)),{convertToSpatialReferenceUnit:t,toLengthUnit:i}=await Promise.all([n.e(2076),n.e(7798)]).then(n.bind(n,27798));return(n,r,a)=>(r=t(i(a),n.spatialReference,r),e.execute(n,r))})),geodesicBuffer:r("geodesicBuffer",(async()=>{const e=await Promise.all([n.e(2076),n.e(9219)]).then(n.bind(n,31600)),{convert:t,meters:i,toLengthUnit:r}=await Promise.all([n.e(2076),n.e(7798)]).then(n.bind(n,27798));return await e.load(),(n,a,o,s)=>(a=t(r(o),i,a),e.execute(n,a,{curveType:s}))})),offset:r("offset",(async()=>{const e=await Promise.all([n.e(2076),n.e(8834)]).then(n.bind(n,28834)),{convertToSpatialReferenceUnit:t,toLengthUnit:i}=await Promise.all([n.e(2076),n.e(7798)]).then(n.bind(n,27798));return(n,r,a,o)=>(r=t(i(a),n.spatialReference,r),e.execute(n,r,o))})),rotate:r("rotate",(async()=>{const e=await Promise.all([n.e(2076),n.e(8841)]).then(n.bind(n,68841)),{default:t}=await Promise.all([n.e(2076),n.e(677)]).then(n.bind(n,70677));return(n,r,o,s)=>{const c=(new t).rotate(r,o,s);return a(e.execute((0,i.rS)(n),c))}})),centroid:r("centroid",(async()=>{const e=await Promise.all([n.e(2076),n.e(2884)]).then(n.bind(n,32884));return t=>a(e.execute((0,i.rS)(t)))})),labelPoint:r("labelPoint",(async()=>{const e=await Promise.all([n.e(2076),n.e(6660)]).then(n.bind(n,86660));return t=>a(e.execute((0,i.rS)(t)))})),simplify:r("simplify",(()=>Promise.all([n.e(2076),n.e(9882)]).then(n.bind(n,49882)).then((e=>e.execute)))),isSelfIntersecting:r("isSelfIntersecting",(async()=>{const{NonSimpleResult:e}=await n.e(2076).then(n.bind(n,77536)),t=await Promise.all([n.e(2076),n.e(5962)]).then(n.bind(n,25962)),r=new Set([5,6,7,10,11,12]);return n=>{const a=new e;return!t.isSimple((0,i.rS)(n),a)&&r.has(a.m_reason)}})),isSimple:r("isSimple",(()=>Promise.all([n.e(2076),n.e(9882)]).then(n.bind(n,49882)).then((e=>e.isSimple)))),convexHull:r("convexHull",(()=>Promise.all([n.e(2076),n.e(9965)]).then(n.bind(n,9965)).then((e=>e.execute)))),getNearestCoordinate:r("getNearestCoordinate",(async()=>{const e=await Promise.all([n.e(2076),n.e(3375)]).then(n.bind(n,63375));return(t,n,r)=>{const o=e.getNearestCoordinate((0,i.rS)(t),(0,i.rS)(n),r);return{...o,coordinate:a(o.coordinate)}}})),getNearestVertex:r("getNearestVertex",(async()=>{const e=await Promise.all([n.e(2076),n.e(3375)]).then(n.bind(n,63375));return(t,n)=>{const r=e.getNearestVertex((0,i.rS)(t),(0,i.rS)(n));return{...r,coordinate:a(r.coordinate)}}}))};function s(e,t){const n=o[e];return n.loaded?n.execute.apply(void 0,t):n.load().then((()=>s(e,t)))}}}]);