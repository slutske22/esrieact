"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9172],{6371:(e,t,r)=>{function o(e){let t,r,o=[],i=!1;return function(...s){return i&&t===this&&function(e,t){if(e.length!==t.length)return!1;for(let r=0;r<e.length;++r)if(e[r]!==t[r])return!1;return!0}(s,o)||(r=e.apply(this,s),t=this,o=s,i=!0),r}}r.d(t,{B:()=>o})},87290:(e,t,r)=>{r.r(t),r.d(t,{DrawScreenTool:()=>w,geometryTypeToDrawOperationGeometryType:()=>k});var o=r(66866),i=r(17306),s=r(20464),n=r(6267),a=r(21564),l=(r(39831),r(539),r(9272),r(63863)),d=r(50424),h=r(96453),p=r(12019),c=r(83372),u=r(7388),y=r(37413),g=r(52495),v=r(80510),m=(r(99484),r(96704));let _=class extends g.A{constructor(e){super(e),this.coordinates=void 0,this.strokeDash=[],this.strokeWidth=1,this.strokeColor=[0,0,0,1],this.strokeDashColor=[255,255,255,1],this.fillColor=[0,0,0,0],this.visible=!0,this.isDecoration=!0}get _strokeStyle(){const e=this.strokeColor;return`rgba(${e[0]}, ${e[1]}, ${e[2]}, ${e[3]})`}get _strokeBackgroundStyle(){const e=this.strokeDashColor;return`rgba(${e[0]}, ${e[1]}, ${e[2]}, ${e[3]})`}get _fillStyle(){const e=this.fillColor;return`rgba(${e[0]}, ${e[1]}, ${e[2]}, ${e[3]})`}get _renderCoordinates(){const e=[];if(!this.coordinates)return{coordinates:e,rect:v.qv};const t=(0,v.eV)((0,v.Jf)((0,v.vt)(v.qv),this.coordinates),2*this.strokeWidth);t[0]=Math.floor(t[0]),t[1]=Math.floor(t[1]),t[2]=Math.ceil(t[2]+.5),t[3]=Math.ceil(t[3]+.5);for(const r of this.coordinates)e.push([Math.floor(r[0]-t[0])+.5,Math.floor(r[1]-t[1])+.5]);return e.reverse(),{coordinates:e,rect:t}}render(){const{coordinates:e,rect:t}=this._renderCoordinates,r=(0,v.VL)(t),o=(0,v.uJ)(t);return(0,m.K)("div",{classes:{"esri-outline-overlay-item":!0},styles:{left:t[0]+"px",top:t[1]+"px",width:r+"px",height:o+"px",visibility:this.visible?"visible":"hidden"}},(0,m.K)("svg",{height:o,styles:{display:"block"},width:r},(0,m.K)("polygon",{fill:this._fillStyle,points:e.map((([e,t])=>`${e},${t}`)).join(" "),stroke:this._strokeBackgroundStyle,"stroke-width":this.strokeWidth}),(0,m.K)("polygon",{fill:"transparent",points:e.map((([e,t])=>`${e},${t}`)).join(" "),stroke:this._strokeStyle,"stroke-dasharray":this.strokeDash.length?this.strokeDash.join(" "):void 0,"stroke-width":this.strokeWidth})))}renderCanvas(){}};(0,o._)([(0,a.MZ)()],_.prototype,"coordinates",void 0),(0,o._)([(0,a.MZ)()],_.prototype,"strokeDash",void 0),(0,o._)([(0,a.MZ)()],_.prototype,"strokeWidth",void 0),(0,o._)([(0,a.MZ)()],_.prototype,"strokeColor",void 0),(0,o._)([(0,a.MZ)()],_.prototype,"strokeDashColor",void 0),(0,o._)([(0,a.MZ)()],_.prototype,"fillColor",void 0),(0,o._)([(0,a.MZ)()],_.prototype,"visible",void 0),(0,o._)([(0,a.MZ)()],_.prototype,"isDecoration",void 0),(0,o._)([(0,a.MZ)({readOnly:!0})],_.prototype,"_strokeStyle",null),(0,o._)([(0,a.MZ)({readOnly:!0})],_.prototype,"_strokeBackgroundStyle",null),(0,o._)([(0,a.MZ)({readOnly:!0})],_.prototype,"_fillStyle",null),(0,o._)([(0,a.MZ)({readOnly:!0})],_.prototype,"_renderCoordinates",null),_=(0,o._)([(0,l.$)("esri.views.overlay.OutlineOverlayItem")],_);let w=class extends(i.A.EventedMixin(y.g)){constructor(e){super(e),this.drawOperation=null,this._overlayItem=void 0,this.geometryType=null,this.mode=null,this.type="draw-screen"}initialize(){this.drawOperation=this._makeDrawOperation();const e=e=>this.drawOperation?.on(e,(t=>{this._updateVisuals(),this.emit(e,t)}))??(0,s.hA)();this.addHandles([e("vertex-add"),e("vertex-remove"),e("vertex-update"),e("cursor-update"),e("complete")]),this.finishToolCreation()}destroy(){this.drawOperation=(0,n.pR)(this.drawOperation),this._set("view",null)}get canRedo(){return!!this.drawOperation?.canRedo}get canUndo(){return!!this.drawOperation?.canUndo}set centeredToggled(e){this._set("centeredToggled",e),this._updateVisuals()}set enabled(e){const{drawOperation:t}=this;t&&(t.interactive=e),this._set("enabled",e)}set uniformSizeToggled(e){this._set("uniformSizeToggled",e),this._updateVisuals()}get updating(){return this.drawOperation?.updating??!1}get cursor(){return this._get("cursor")??"crosshair"}set cursor(e){this._set("cursor",e);const{drawOperation:t}=this;t&&(t.cursor=e)}completeCreateOperation(){this.drawOperation?.complete()}onInputEvent(e){this.destroyed||this.drawOperation?.onInputEvent(e)}redo(){this.drawOperation?.redo()}undo(){this.drawOperation?.undo()}reset(){}_makeDrawOperation(){const{view:e}=this;return new h.O0({view:e,manipulators:this.manipulators,geometryType:k(this.geometryType),drawingMode:this.mode,hasZ:!1,defaultZ:0,snapToSceneEnabled:!1,drawSurface:new p.Sl,hasM:!1,snappingManager:null,snappingVisualizer:null,graphic:null,cursor:this.cursor,automaticLengthMeasurementUtils:this.automaticLengthMeasurementUtils})}get coordinates(){const{drawOperation:e}=this;if(!e?.geometryIncludingUncommittedVertices.length)return[];const{coordinateHelper:t}=e,r=e.committableVertex,o=e.committedVertices.slice();null!=r&&o.push(t.pointToArray(r));const i=o.length;switch(this.geometryType){case"point":return o.slice(0,1);case"circle":case"rectangle":{const t=new u.vz(d.zK,p.Sl.spatialReference),r="circle"===this.geometryType?c.zV:c.GF,s="circle"===this.geometryType?c.zd:c._T;if(1===i&&e.isCompleted){const e=o[0],i=t.makeMapPoint(e[0]+f,e[1]);return r([e,i],t,!0)?.geometry.rings[0]??[]}if(2===i){const e="rectangle"!==this.geometryType,i=this.centeredToggled!==e,n="rectangle"!==this.geometryType;return(this.uniformSizeToggled!==n?r(o,t,i)?.geometry.rings[0]:s(o,t,i)?.geometry.rings[0])??[]}return[]}}return o}_updateVisuals(){if(!this._overlayItem){const e=new _({strokeDash:[5],strokeDashColor:[255,255,255,255]});this.view.overlay?.addItem(e),this.addHandles((0,s.hA)((()=>{this.view.overlay?.removeItem(e),e?.destroy(),this._overlayItem=void 0}))),this._overlayItem=e}this._overlayItem.coordinates=this.coordinates}onDeactivate(){this.drawOperation?.isCompleted||this.drawOperation?.cancel()}};function k(e){switch(e){case"polygon":case"point":return e;case"circle":case"rectangle":return"segment"}}(0,o._)([(0,a.MZ)({value:!1})],w.prototype,"centeredToggled",null),(0,o._)([(0,a.MZ)()],w.prototype,"drawOperation",void 0),(0,o._)([(0,a.MZ)({value:!0})],w.prototype,"enabled",null),(0,o._)([(0,a.MZ)({value:!1})],w.prototype,"uniformSizeToggled",null),(0,o._)([(0,a.MZ)({constructOnly:!0})],w.prototype,"geometryType",void 0),(0,o._)([(0,a.MZ)({constructOnly:!0})],w.prototype,"mode",void 0),(0,o._)([(0,a.MZ)({readOnly:!0})],w.prototype,"type",void 0),(0,o._)([(0,a.MZ)({readOnly:!0})],w.prototype,"updating",null),(0,o._)([(0,a.MZ)({constructOnly:!0,nonNullable:!0})],w.prototype,"view",void 0),(0,o._)([(0,a.MZ)({constructOnly:!0})],w.prototype,"automaticLengthMeasurementUtils",void 0),(0,o._)([(0,a.MZ)()],w.prototype,"cursor",null),w=(0,o._)([(0,l.$)("esri.views.draw.DrawScreenTool")],w);const f=48}}]);