"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[49544],{49544:(e,t,n)=>{n.r(t),n.d(t,{invokeGeometryOp:()=>o});var i=n(56053);function r(e,t){let n;return{loaded:!1,load:()=>n??=t().then((t=>{c[e]={loaded:!0,execute:t}}))}}function a(e){return null==e?null:e.toJSON()}const c={disjoint:r("disjoint",(()=>Promise.all([n.e(72076),n.e(85987)]).then(n.bind(n,85987)).then((e=>e.execute)))),intersects:r("intersects",(()=>Promise.all([n.e(72076),n.e(88865)]).then(n.bind(n,88865)).then((e=>e.execute)))),touches:r("touches",(()=>Promise.all([n.e(72076),n.e(59136)]).then(n.bind(n,59136)).then((e=>e.execute)))),crosses:r("crosses",(()=>Promise.all([n.e(72076),n.e(7175)]).then(n.bind(n,7175)).then((e=>e.execute)))),within:r("within",(()=>Promise.all([n.e(72076),n.e(24536)]).then(n.bind(n,24536)).then((e=>e.execute)))),contains:r("contains",(()=>Promise.all([n.e(72076),n.e(53342)]).then(n.bind(n,53342)).then((e=>e.execute)))),overlaps:r("overlaps",(()=>Promise.all([n.e(72076),n.e(17499)]).then(n.bind(n,17499)).then((e=>e.execute)))),equals:r("equals",(async()=>{const e=await Promise.all([n.e(72076),n.e(59659)]).then(n.bind(n,59659));return(t,n)=>e.execute((0,i.rS)(t),(0,i.rS)(n))})),relate:r("relate",(async()=>{const e=await Promise.all([n.e(72076),n.e(25147)]).then(n.bind(n,25147));return(t,n,r)=>e.execute((0,i.rS)(t),(0,i.rS)(n),r)})),intersection:r("intersection",(()=>Promise.all([n.e(72076),n.e(19122)]).then(n.bind(n,19122)).then((e=>e.execute)))),union:r("union",(()=>Promise.all([n.e(72076),n.e(37560)]).then(n.bind(n,37560)).then((e=>e.executeMany)))),difference:r("difference",(async()=>{const e=await Promise.all([n.e(72076),n.e(16485)]).then(n.bind(n,16485));return(t,n)=>a(e.execute((0,i.rS)(t),(0,i.rS)(n)))})),symmetricDifference:r("symmetricDifference",(async()=>{const e=await Promise.all([n.e(72076),n.e(76960)]).then(n.bind(n,76960));return(t,n)=>a(e.execute((0,i.rS)(t),(0,i.rS)(n)))})),clip:r("clip",(async()=>{const e=await Promise.all([n.e(72076),n.e(39296)]).then(n.bind(n,39296));return(t,n)=>a(e.execute((0,i.rS)(t),(0,i.rS)(n)))})),cut:r("cut",(async()=>{const e=await Promise.all([n.e(72076),n.e(504)]).then(n.bind(n,504));return(t,n)=>e.execute((0,i.rS)(t),(0,i.rS)(n)).map((e=>a(e)))})),area:r("area",(async()=>{const e=await Promise.all([n.e(72076),n.e(37339)]).then(n.bind(n,37339)),{convertFromSpatialReferenceUnit:t,toAreaUnit:r}=await n.e(32064).then(n.bind(n,32064));return(n,a)=>{const c=e.execute((0,i.rS)(n));return t(n.spatialReference,r(a),c)}})),geodeticArea:r("geodeticArea",(async()=>{const e=await n.e(17517).then(n.bind(n,17517)),{convert:t,squareMeters:r,toAreaUnit:a}=await n.e(32064).then(n.bind(n,32064));return await e.load(),(n,c,o)=>{const s=e.execute((0,i.rS)(n),{curveType:o});return t(r,a(c),s)}})),length:r("length",(async()=>{const e=await Promise.all([n.e(72076),n.e(55847)]).then(n.bind(n,55847)),{convertFromSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(32064).then(n.bind(n,32064));return(n,r)=>{const a=e.execute(n);return t(n.spatialReference,i(r),a)}})),geodeticLength:r("geodeticLength",(async()=>{const e=await n.e(90676).then(n.bind(n,90676)),{convert:t,meters:r,toLengthUnit:a}=await n.e(32064).then(n.bind(n,32064));return await e.load(),(n,c,o)=>{const s=e.execute((0,i.rS)(n),{curveType:o});return t(r,a(c),s)}})),distance:r("distance",(async()=>{const e=await Promise.all([n.e(72076),n.e(71741)]).then(n.bind(n,71741)),{convertFromSpatialReferenceUnit:t,toLengthUnit:r}=await n.e(32064).then(n.bind(n,32064));return(n,a,c)=>{const o=e.execute((0,i.rS)(n),(0,i.rS)(a));return t(n.spatialReference,r(c),o)}})),densify:r("densify",(async()=>{const e=await Promise.all([n.e(72076),n.e(1878)]).then(n.bind(n,1878)),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await n.e(32064).then(n.bind(n,32064));return(n,c,o)=>(c=t(r(o),n.spatialReference,c),a(e.execute((0,i.rS)(n),c)))})),geodeticDensify:r("geodeticDensify",(async()=>{const e=await Promise.all([n.e(72076),n.e(66372)]).then(n.bind(n,66372)),{convert:t,meters:r,toLengthUnit:c}=await n.e(32064).then(n.bind(n,32064));return await e.load(),(n,o,s,l)=>(o=t(c(s),r,o),a(e.execute((0,i.rS)(n),o,{curveType:l})))})),generalize:r("generalize",(async()=>{const e=await Promise.all([n.e(72076),n.e(98944)]).then(n.bind(n,98944)),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await n.e(32064).then(n.bind(n,32064));return(n,c,o,s)=>(c=t(r(o),n.spatialReference,c),a(e.execute((0,i.rS)(n),c,s)))})),buffer:r("buffer",(async()=>{const e=await Promise.all([n.e(72076),n.e(66641),n.e(36689)]).then(n.bind(n,36689)),{convertToSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(32064).then(n.bind(n,32064));return(n,r,a)=>(r=t(i(a),n.spatialReference,r),e.execute(n,r))})),geodesicBuffer:r("geodesicBuffer",(async()=>{const e=await Promise.all([n.e(72076),n.e(914)]).then(n.bind(n,914)),{convert:t,meters:i,toLengthUnit:r}=await n.e(32064).then(n.bind(n,32064));return await e.load(),(n,a,c,o)=>(a=t(r(c),i,a),e.execute(n,a,{curveType:o}))})),offset:r("offset",(async()=>{const e=await Promise.all([n.e(72076),n.e(6988)]).then(n.bind(n,6988)),{convertToSpatialReferenceUnit:t,toLengthUnit:i}=await n.e(32064).then(n.bind(n,32064));return(n,r,a,c)=>(r=t(i(a),n.spatialReference,r),e.execute(n,r,c))})),rotate:r("rotate",(async()=>{const e=await Promise.all([n.e(72076),n.e(41935)]).then(n.bind(n,41935)),{default:t}=await Promise.all([n.e(72076),n.e(34679)]).then(n.bind(n,34679));return(n,r,c,o)=>{const s=(new t).rotate(r,c,o);return a(e.execute((0,i.rS)(n),s))}})),centroid:r("centroid",(async()=>{const e=await Promise.all([n.e(72076),n.e(19694)]).then(n.bind(n,19694));return t=>a(e.execute((0,i.rS)(t)))})),labelPoint:r("labelPoint",(async()=>{const e=await Promise.all([n.e(72076),n.e(50482)]).then(n.bind(n,50482));return t=>a(e.execute((0,i.rS)(t)))})),simplify:r("simplify",(()=>Promise.all([n.e(72076),n.e(29284)]).then(n.bind(n,29284)).then((e=>e.execute)))),isSelfIntersecting:r("isSelfIntersecting",(async()=>{const{NonSimpleResult:e}=await n.e(72076).then(n.bind(n,31174)),t=await Promise.all([n.e(72076),n.e(66692)]).then(n.bind(n,66692)),r=new Set([5,6,7,10,11,12]);return n=>{const a=new e;return!t.isSimple((0,i.rS)(n),a)&&r.has(a.m_reason)}})),isSimple:r("isSimple",(()=>Promise.all([n.e(72076),n.e(29284)]).then(n.bind(n,29284)).then((e=>e.isSimple)))),convexHull:r("convexHull",(()=>Promise.all([n.e(72076),n.e(81311)]).then(n.bind(n,81311)).then((e=>e.execute)))),getNearestCoordinate:r("getNearestCoordinate",(async()=>{const e=await Promise.all([n.e(72076),n.e(36077)]).then(n.bind(n,36077));return(t,n,r)=>{const c=e.getNearestCoordinate((0,i.rS)(t),(0,i.rS)(n),r);return{...c,coordinate:a(c.coordinate)}}})),getNearestVertex:r("getNearestVertex",(async()=>{const e=await Promise.all([n.e(72076),n.e(36077)]).then(n.bind(n,36077));return(t,n)=>{const r=e.getNearestVertex((0,i.rS)(t),(0,i.rS)(n));return{...r,coordinate:a(r.coordinate)}}}))};function o(e,t){const n=c[e];return n.loaded?n.execute.apply(void 0,t):n.load().then((()=>o(e,t)))}}}]);