"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[85517],{84858:(e,t,a)=>{var i;a.d(t,{u:()=>i}),function(e){e[e.KILOBYTES=1024]="KILOBYTES",e[e.MEGABYTES=1048576]="MEGABYTES",e[e.GIGABYTES=1073741824]="GIGABYTES"}(i||(i={}))},45691:(e,t,a)=>{a.d(t,{H:()=>c});var i=a(66866),n=a(21564),r=(a(39831),a(539),a(9272),a(63863)),s=a(24793),l=a(21877),o=a(73446),u=a(28902),d=a(73810);let p=class extends(s.A.ClonableMixin(l.A)){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};(0,i._)([(0,n.MZ)({type:String,json:{write:{isRequired:!0}}})],p.prototype,"name",void 0),(0,i._)([(0,n.MZ)({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),(0,u.e)({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],p.prototype,"method",void 0),(0,i._)([(0,n.MZ)({type:String,json:{write:{isRequired:!0}}})],p.prototype,"value",void 0),(0,i._)([(0,n.MZ)({type:[o.jz],json:{write:{isRequired:!0}}})],p.prototype,"bandIds",void 0),(0,i._)([(0,n.MZ)({types:d.uy,json:{write:!0,origins:{"web-scene":{types:d.Gj,write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],p.prototype,"renderer",void 0),p=(0,i._)([(0,r.$)("esri.renderers.support.RasterPresetRenderer")],p);const c=e=>{let t=class extends e{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return(0,i._)([(0,n.MZ)({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],t.prototype,"activePresetRendererName",void 0),(0,i._)([(0,n.MZ)({type:[p],json:{name:"layerDefinition.presetRenderers",write:!0}})],t.prototype,"presetRenderers",void 0),t=(0,i._)([(0,r.$)("esri.layers.mixins.RasterPresetRendererMixin")],t),t}},40842:(e,t,a)=>{a.d(t,{E9:()=>h,Tw:()=>c,X6:()=>m});var i=a(86394),n=a(84698),r=a(97066),s=a(78983),l=a(22366),o=a(19044),u=a(11499),d=a(57822);async function p(e,t,a){const p=(0,u.Dl)(e),{rasterFunction:c,sourceJSON:m}=t||{},h=c?JSON.stringify(c.rasterFunctionDefinition||c):null,f=(0,u.lF)({...p.query,renderingRule:h,f:"json"}),v=(0,u.jV)(f,a);e=p.path;const y=m||await(0,i.A)(e,v).then((e=>e.data)),g=y.hasRasterAttributeTable?(0,i.A)(`${e}/rasterAttributeTable`,v):null,b=y.hasColormap?(0,i.A)(`${e}/colormap`,v):null,x=y.hasHistograms?(0,i.A)(`${e}/histograms`,v):null,S=y.currentVersion>=10.3?(0,i.A)(`${e}/keyProperties`,v):null,w=y.hasMultidimensions?(0,i.A)(`${e}/multidimensionalInfo`,v):null,A=await Promise.allSettled([g,b,x,S,w]);let R=null;if(y.minValues&&y.minValues.length===y.bandCount){R=[];for(let e=0;e<y.minValues.length;e++)R.push({min:y.minValues[e],max:y.maxValues[e],avg:y.meanValues[e],stddev:y.stdvValues[e]})}const T=n.A.fromJSON(y.extent),M=Math.ceil(T.width/y.pixelSizeX-.1),V=Math.ceil(T.height/y.pixelSizeY-.1),D=s.A.fromJSON(y.spatialReference||y.extent.spatialReference),I="fulfilled"===A[0].status?A[0].value?.data:null,E=I?.features?.length?d.A.fromJSON(I):null,N="fulfilled"===A[1].status?A[1].value?.data.colormap:null,j=N?.length?N:null,P="fulfilled"===A[2].status?A[2].value?.data.histograms:null,k=P?.[0]?.counts?.length?P:null,O="fulfilled"===A[3].status?A[3].value?.data??{}:{},C="fulfilled"===A[4].status?A[4].value?.data.multidimensionalInfo:null,_=C?.variables?.length?C:null;_&&_.variables.forEach((e=>{e.statistics?.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),e.dimensions?.forEach((e=>{"StdTime"!==e.name||e.recurring||e.unit||(e.unit="ISO8601")}))}));const{defaultVariable:B,serviceDataType:Y}=y;B&&B!==O.DefaultVariable&&(O.DefaultVariable=B),Y?.includes("esriImageServiceDataTypeVector")&&!Y.includes(O.DataType)&&(O.DataType=Y.replace("esriImageServiceDataType",""));let G=y.noDataValue;y.noDataValues?.length&&y.noDataValues.some((e=>e!==G))&&(G=y.noDataValues);const J=y.transposeInfo?new o.A({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new r.A({x:y.extent.xmin,y:y.extent.ymax,spatialReference:D}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(M,V))/Math.LN2-8)),transposeInfo:y.transposeInfo}):void 0;return new l.A({width:M,height:V,bandCount:y.bandCount,extent:n.A.fromJSON(y.extent),spatialReference:D,pixelSize:new r.A({x:y.pixelSizeX,y:y.pixelSizeY,spatialReference:D}),pixelType:y.pixelType.toLowerCase(),statistics:R,attributeTable:E,colormap:j,histograms:k,keyProperties:O,noDataValue:G,multidimensionalInfo:_,storageInfo:J})}function c(e,t,a){return p(e,{sourceJSON:t},a)}function m(e,t,a){return p(e,{rasterFunction:t},a)}function h(e,t){e.attributeTable||(t.hasRasterAttributeTable=!1),e.histograms||(t.hasHistograms=!1),e.colormap||(t.hasColormap=!1),e.multidimensionalInfo||(t.hasMultidimensions=!1)}}}]);