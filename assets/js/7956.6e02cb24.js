"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7956],{66753:(t,e,s)=>{s.d(e,{A:()=>A});var r=s(98849),i=s(39831),n=s(539),a=s(92504),o=s(40189),u=s(64442),h=s(4238),d=s(79005),l=s(43556),c=s(65065),_=s(38403),f=s(81884),p=s(79783),g=s(41746);const m=n.A.getLogger("esri.views.layers.2d.features.support.AttributeStore"),y=(0,f.m)(f.N,m),b={sharedArrayBuffer:(0,i.A)("esri-shared-array-buffer"),atomics:(0,i.A)("esri-atomics")};function x(t,e){return s=>e(t(s))}class I{constructor(t,e,s,r){this.size=0,this.texelSize=4,this.dirtyStart=0,this.dirtyEnd=0;const{pixelType:i,layout:n,textureOnly:a}=r;this.textureOnly=a||!1,this.pixelType=i,this._ctype=e,this.layout=n,this._resetRange(),this._shared=t,this.size=s,a||(this.data=this._initData(i,s,t,e))}get buffer(){return this.data?.buffer}unsetComponentAllTexels(t,e){const s=this.data;for(let r=0;r<this.size*this.size;r++)s[r*this.texelSize+t]&=~e;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1}setComponentAllTexels(t,e){const s=this.data;for(let r=0;r<this.size*this.size;r++)s[r*this.texelSize+t]|=255&e;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1}setComponent(t,e,s){const r=this.data;for(const i of s)r[i*this.texelSize+t]|=e,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i)}setComponentTexel(t,e,s){this.data[s*this.texelSize+t]|=e,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s)}unsetComponentTexel(t,e,s){this.data[s*this.texelSize+t]&=~e,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s)}getData(t,e){const s=(0,c.Q4)(t);return this.data[s*this.texelSize+e]}setData(t,e,s){const r=(0,c.Q4)(t),i=1<<e;this.layout&i?null!=this.data&&(this.data[r*this.texelSize+e]=s,this.dirtyStart=Math.min(this.dirtyStart,r),this.dirtyEnd=Math.max(this.dirtyEnd,r)):m.error("mapview-attributes-store","Tried to set a value for a texel's readonly component")}lock(){this.pixelType===g.ld.UNSIGNED_BYTE&&this._shared&&b.atomics&&"local"!==this._ctype&&Atomics.store(this.data,0,1)}unlock(){this.pixelType===g.ld.UNSIGNED_BYTE&&this._shared&&b.atomics&&"local"!==this._ctype&&Atomics.store(this.data,0,0)}expand(t){if(this.size=t,!this.textureOnly){const e=this._initData(this.pixelType,t,this._shared,this._ctype),s=this.data;e.set(s),this.data=e}}toMessage(){const t=this.dirtyStart,e=this.dirtyEnd,s=this.texelSize;if(t>e)return null;this._resetRange();const r=!(this._shared||"local"===this._ctype),i=this.pixelType,n=this.layout,a=this.data;return{start:t,end:e,data:r&&a.slice(t*s,(e+1)*s)||null,pixelType:i,layout:n}}_initData(t,e,s,r){const i=s&&"local"!==r?SharedArrayBuffer:ArrayBuffer,n=(0,_.Qz)(t),a=new n(new i(e*e*4*n.BYTES_PER_ELEMENT));for(let o=0;o<a.length;o+=4)a[o+1]=255;return a}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}}class A{constructor(t,e){this._client=t,this.config=e,this.updatingHandles=new h.U,this._blocks=new Array,this._filters=new Array(l.KM),this._attributeComputeInfo=null,this._targetType=0,this._abortController=new AbortController,this._hasScaleExpr=!1,this._size=32,this._nextUpdate=null,this._currUpdate=null,this._idsToHighlight=new Set;const s=e.supportsTextureFloat?g.ld.FLOAT:g.ld.UNSIGNED_BYTE;y(`Creating AttributeStore ${b.sharedArrayBuffer?"with":"without"} shared memory`),this._blockDescriptors=[{pixelType:g.ld.UNSIGNED_BYTE,layout:1},{pixelType:g.ld.UNSIGNED_BYTE,layout:15,textureOnly:!0},{pixelType:g.ld.UNSIGNED_BYTE,layout:15,textureOnly:!0},{pixelType:s,layout:15},{pixelType:s,layout:15},{pixelType:s,layout:15},{pixelType:s,layout:15}],this._blocks=this._blockDescriptors.map((()=>null))}destroy(){this._abortController.abort(),this.updatingHandles.destroy()}get hasScaleExpr(){return this._hasScaleExpr}get _signal(){return this._abortController.signal}get hasHighlight(){return this._idsToHighlight.size>0}isUpdating(){const t=this.updatingHandles.updating||!!this._nextUpdate;return(0,i.A)("esri-2d-log-updating")&&console.log(`Updating AttributeStore: ${t}\n  -> updatingHandles ${this.updatingHandles.updating} (currUpdate: ${!!this._currUpdate})\n  -> nextUpdate: ${!!this._nextUpdate}\n`),t}update(t,e){this.config=e;const s=e.schema.processors[0].storage,r=(0,u.Ui)(this._schema,s);if((t.targets.feature||t.targets.aggregate)&&(t.storage.data=!0),r&&((0,i.A)("esri-2d-update-debug")&&console.debug("Applying Update - AttributeStore:",r),t.storage.data=!0,this._schema=s,this._attributeComputeInfo=null,null!=s)){switch(s.target){case"feature":this._targetType=c.Gl;break;case"aggregate":this._targetType=c.ry}if("subtype"===s.type){this._attributeComputeInfo={isSubtype:!0,subtypeField:s.subtypeField,map:new Map};for(const t in s.mapping){const e=s.mapping[t];if(null!=e?.vvMapping)for(const s of e.vvMapping)this._bindAttribute(s,parseInt(t,10))}}else{if(this._attributeComputeInfo={isSubtype:!1,map:new Map},null!=s.vvMapping)for(const t of s.vvMapping)this._bindAttribute(t);if(null!=s.attributeMapping)for(const t of s.attributeMapping)this._bindAttribute(t)}}}onTileData(t,e){if(null==e.addOrUpdate)return;const s=e.addOrUpdate.getCursor();for(;s.next();){const t=s.getDisplayId();this.setAttributeData(t,s)}}async setHighlight(t,e){const s=this._getBlock(0),r=e.map((t=>(0,c.Q4)(t)));s.lock(),s.unsetComponentAllTexels(0,1),s.setComponent(0,1,r),s.unlock(),this._idsToHighlight.clear();for(const i of t)this._idsToHighlight.add(i);await this.sendUpdates()}async updateFilters(t,e,s){(0,i.A)("esri-2d-update-debug")&&console.debug("AttributeStore::updateFilters");const{service:r,spatialReference:n}=s,{filters:a}=e,o=a.map(((t,e)=>this._updateFilter(t,e,r,n))),u=(await Promise.all(o)).some((t=>t));(0,i.A)("esri-2d-update-debug")&&console.debug("AttributeStore::updateFilters - finsihed"),u&&(t.storage.filters=!0,(0,i.A)("esri-2d-update-debug")&&console.debug("Applying Update - AttributeStore:","Filters changed"))}setData(t,e,s,r){const i=(0,c.Q4)(t);this._ensureSizeForTexel(i),this._getBlock(e).setData(t,s,r)}getData(t,e,s){return this._getBlock(e).getData(t,s)}getHighlightFlag(t){return this._idsToHighlight.has(t)?l.X3:0}unsetAttributeData(t){const e=(0,c.Q4)(t);this._getBlock(0).setData(e,0,0)}setAttributeData(t,e){const s=(0,c.Q4)(t);if(this._ensureSizeForTexel(s),this._getBlock(0).setData(s,0,this.getFilterFlags(e)),this._targetType!==(0,c.qP)(t))return;const r=this._attributeComputeInfo,i=this.config.supportsTextureFloat?1:2;let n=null;r&&(n=r.isSubtype?r.map.get(e.readAttribute(r.subtypeField)):r.map,n?.size&&n.forEach(((t,r)=>{const n=r*i%4,o=Math.floor(r*i/4),u=this._getBlock(o+l.dx),h=t(e);if(this.config.supportsTextureFloat)u.setData(s,n,h);else if(h===l.qM)u.setData(s,n,255),u.setData(s,n+1,255);else{const t=(0,a.qE)(Math.round(h),-32767,32766)+32768,e=255&t,r=(65280&t)>>8;u.setData(s,n,e),u.setData(s,n+1,r)}})))}sendUpdates(){if((0,i.A)("esri-2d-update-debug")&&console.debug("AttributeStore::sendUpdate"),this._nextUpdate)return this._nextUpdate.promise;if(this._currUpdate)return this._nextUpdate=(0,o.Tw)(),this.updatingHandles.addPromise(this._nextUpdate.promise),this._nextUpdate.promise;const t={blocks:this._blocks.map((t=>null!=t?t.toMessage():null))};return this._currUpdate=this._createResources().then((()=>{const e=()=>{if(this._currUpdate=null,this._nextUpdate){const t=this._nextUpdate;this._nextUpdate=null,this.sendUpdates().then((()=>t.resolve()))}else(0,i.A)("esri-2d-update-debug")&&console.debug("AttributeStore::sendUpdate::No additional updates queued")};(0,i.A)("esri-2d-update-debug")&&console.debug("AttributeStore::sendUpdate::client.update");const s=this.updatingHandles.addPromise(this._client.update(t,this._signal).then(e).catch(e));return this._client.render(this._signal),s})).catch((t=>{if((0,o.zf)(t))return this._createResourcesPromise=null,this._createResources();m.error(new r.A("mapview-attribute-store","Encountered an error during client update",t))})),this._currUpdate}_ensureSizeForTexel(t){for(;t>=this._size*this._size;)if(this._expand())return}_bindAttribute(t,e){let s;if(null!=t.fieldIndex)t.normalizationField&&m.warn("mapview-arcade","Ignoring normalizationField specified with an arcade expression which is not supported."),s=e=>e.getComputedNumericAtIndex(t.fieldIndex);else{if(!t.field)return;s=function(){const{normalizationField:e}=t;return e?s=>{const r=s.readAttribute(e);return r?s.readAttribute(t.field)/r:null}:e=>e.readAttribute(t.field)}()}const{valueRepresentation:r}=t;r&&(s=x(s,(t=>(0,p.lS)(t,r))));const i=t=>null===t||isNaN(t)||t===1/0||t===-1/0?l.qM:t,n=this._attributeComputeInfo;if(n.isSubtype){const r=n.map.get(e)??new Map;r.set(t.binding,x(s,i)),n.map.set(e,r)}else n.map.set(t.binding,x(s,i))}_createResources(){if(null!=this._createResourcesPromise)return this._createResourcesPromise;this._getBlock(l.Nb),this._getBlock(l.O7),y("Initializing AttributeStore");const t={shared:b.sharedArrayBuffer&&!("local"===this._client.type),size:this._size,blocks:this._blocks.map((t=>null!=t?{textureOnly:t.textureOnly,buffer:t.buffer,pixelType:t.pixelType}:null))},e=this._client.initialize(t,this._signal).catch((t=>{(0,o.zf)(t)?this._createResourcesPromise=null:m.error(new r.A("mapview-attribute-store","Encountered an error during client initialization",t))}));return this._createResourcesPromise=e,e.then((()=>null==this._createResourcesPromise?this._createResources():void 0)),e}_getBlock(t){const e=this._blocks[t];if(null!=e)return e;y(`Initializing AttributeBlock at index ${t}`);const s=b.sharedArrayBuffer,r=this._client.type,i=new I(s,r,this._size,this._blockDescriptors[t]);return this._blocks[t]=i,this._createResourcesPromise=null,i}_expand(){if(this._size<this.config.maxTextureSize){const t=this._size<<=1;y("Expanding block size to",t,this._blocks);for(const e of this._blocks)e?.expand(t);return this._createResourcesPromise=null,this._size=t,0}return m.error(new r.A("mapview-limitations","Maximum number of onscreen features exceeded.")),-1}async _updateFilter(t,e,s,r){const i=this._filters[e],n=null!=i&&i.hash;if(!i&&!t)return!1;if(n===JSON.stringify(t))return!1;if(null==t){if(!i)return!1;const t=1<<e+1,s=this._getBlock(0);return this._filters[e]=null,s.setComponentAllTexels(0,t),this.sendUpdates(),!0}const a=await this._getFilter(e,s);return await a.update(t,r),!0}async _getFilter(t,e){const r=this._filters[t];if(null!=r)return r;const{default:i}=await Promise.all([s.e(2076),s.e(2213)]).then(s.bind(s,92213)),n=new i({geometryType:e.geometryType,hasM:!1,hasZ:!1,timeInfo:e.timeInfo,fieldsIndex:d.A.fromJSON(e.fieldsIndex)});return this._filters[t]=n,n}isVisible(t){return!!(2&this._getBlock(0).getData(t,0))}getFilterFlags(t){let e=0;const s=(0,c.KG)(t.getDisplayId());for(let i=0;i<this._filters.length;i++){const r=!!(s&1<<i),n=this._filters[i];e|=(!r||null==n||n.check(t)?1:0)<<i}let r=0;if(this._idsToHighlight.size){const e=t.getObjectId();r=this.getHighlightFlag(e)}return e<<1|r}}},16816:(t,e,s)=>{s.d(e,{l:()=>o});var r=s(65065);class i{constructor(){this._freeIds=[],this._idCounter=1}createId(t=!1){return(0,r.Ss)(this._getFreeId(),t)}releaseId(t){this._freeIds.push(t)}_getFreeId(){return this._freeIds.length?this._freeIds.pop():this._idCounter++}}var n=s(43871);function a(t,e,s){if(!(t.length>e))for(;t.length<=e;)t.push(s)}class o{constructor(){this._numerics=[],this._strings=[],this._idGenerator=new i,this._allocatedSize=256,this._bitsets=[],this._instanceIds=[],this._bounds=[]}createBitset(){const t=this._bitsets.length;return this._bitsets.push(n.y.create(this._allocatedSize,r.KQ)),t+1}getBitset(t){return this._bitsets[t-1]}_expand(){this._allocatedSize<<=1;for(const t of this._bitsets)t.resize(this._allocatedSize)}_ensureNumeric(t,e){this._numerics[t]||(this._numerics[t]=[]),a(this._numerics[t],e,0)}_ensureInstanceId(t){a(this._instanceIds,t,0)}_ensureString(t,e){this._strings[t]||(this._strings[t]=[]),a(this._strings[t],e,null)}createDisplayId(t=!1){const e=this._idGenerator.createId();return e>this._allocatedSize&&this._expand(),(0,r.Ss)(e,t)}releaseDisplayId(t){for(const e of this._bitsets)e.unset(t);return this._idGenerator.releaseId(t&r.KQ)}getComputedNumeric(t,e){return this.getComputedNumericAtIndex(t&r.KQ,0)}setComputedNumeric(t,e,s){return this.setComputedNumericAtIndex(t&r.KQ,s,0)}getComputedString(t,e){return this.getComputedStringAtIndex(t&r.KQ,0)}setComputedString(t,e,s){return this.setComputedStringAtIndex(t&r.KQ,0,s)}getComputedNumericAtIndex(t,e){const s=t&r.KQ;return this._ensureNumeric(e,s),this._numerics[e][s]}setComputedNumericAtIndex(t,e,s){const i=t&r.KQ;this._ensureNumeric(e,i),this._numerics[e][i]=s}getInstanceId(t){const e=t&r.KQ;return this._ensureInstanceId(e),this._instanceIds[e]}setInstanceId(t,e){const s=t&r.KQ;this._ensureInstanceId(s),this._instanceIds[s]=e}getComputedStringAtIndex(t,e){const s=t&r.KQ;return this._ensureString(e,s),this._strings[e][s]}setComputedStringAtIndex(t,e,s){const i=t&r.KQ;this._ensureString(e,i),this._strings[e][i]=s}getXMin(t){return this._bounds[4*(t&r.KQ)]}getYMin(t){return this._bounds[4*(t&r.KQ)+1]}getXMax(t){return this._bounds[4*(t&r.KQ)+2]}getYMax(t){return this._bounds[4*(t&r.KQ)+3]}setBounds(t,e){const s=e.readHydratedGeometry();if(!s?.coords.length)return!1;let i=1/0,n=1/0,o=-1/0,u=-1/0;s.forEachVertex(((t,e)=>{i=Math.min(i,t),n=Math.min(n,e),o=Math.max(o,t),u=Math.max(u,e)}));const h=t&r.KQ;return a(this._bounds,4*h+4,0),this._bounds[4*h]=i,this._bounds[4*h+1]=n,this._bounds[4*h+2]=o,this._bounds[4*h+3]=u,!0}}},42549:(t,e,s)=>{s.d(e,{Y:()=>w});s(17639);var r=s(98918),i=s(39831),n=s(6267),a=s(45132),o=s(40845),u=s(14816),h=s(73138),d=s(21355),l=s(88443),c=s(12129),_=s(43871),f=s(1171);let p=0;const g=(0,i.A)("featurelayer-simplify-thresholds")??[.5,.5,.5,.5],m=g[0],y=g[1],b=g[2],x=g[3],I=(0,i.A)("featurelayer-simplify-payload-size-factors")??[1,2,4],A=I[0],T=I[1],S=I[2],z=(0,i.A)("featurelayer-simplify-mobile-factor")??2,F=(0,i.A)("esri-mobile");class w{constructor(t,e){this.type="FeatureSetReader",this.arcadeDeclaredClass="esri.arcade.Feature",this.seen=!1,this.instance=0,this._tx=0,this._ty=0,this._sx=1,this._sy=1,this._deleted=null,this._joined=[],this._objectIdToIndex=null,this._contextTimeZone=null,this._level=0,this.instance=t,this._layerSchema=e}static createInstance(){return p++,p=p>65535?0:p,p}get isEmpty(){return null!=this._deleted&&this._deleted.countSet()===this.getSize()}get contextTimeZone(){return this._contextTimeZone}set contextTimeZone(t){this._contextTimeZone=t}set level(t){this._level=t}getAreaSimplificationThreshold(t,e){let s=1;const r=F?z:1;e>4e6?s=S*r:e>1e6?s=T*r:e>5e5?s=A*r:e>1e5&&(s=r);let i=0;t>4e3?i=x*s:t>2e3?i=b*s:t>100?i=y:t>15&&(i=m);let n=8;return this._level<4?n=1:this._level<5?n=2:this._level<6&&(n=4),i*n}createQuantizedExtrudedGeometry(t,e){return"esriGeometryPolyline"===this.geometryType?this._createQuantizedExtrudedLine(t,e):this._createQuantizedExtrudedQuad(t,e)}_createQuantizedExtrudedQuad(t,e){return new l.A([5],[t-1,e,1,-1,1,1,-1,1,-1,-1])}_createQuantizedExtrudedLine(t,e){return new l.A([2],[t-1,e+1,1,-1])}parseTimestampOffset(t){return t}setArcadeSpatialReference(t){this._arcadeSpatialReference=t}attachStorage(t){this._storage=t}getQuantizationTransform(){throw new Error("Unable to find transform for featureSet")}getStorage(){return this._storage}getComputedNumeric(t){return this.getComputedNumericAtIndex(0)}setComputedNumeric(t,e){return this.setComputedNumericAtIndex(e,0)}getComputedString(t){return this.getComputedStringAtIndex(0)}setComputedString(t,e){return this.setComputedStringAtIndex(0,e)}getComputedNumericAtIndex(t){return this._storage.getComputedNumericAtIndex(this.getDisplayId(),t)}setComputedNumericAtIndex(t,e){this._storage.setComputedNumericAtIndex(this.getDisplayId(),t,e)}getComputedStringAtIndex(t){return this._storage.getComputedStringAtIndex(this.getDisplayId(),t)}setComputedStringAtIndex(t,e){return this._storage.setComputedStringAtIndex(this.getDisplayId(),t,e)}transform(t,e,s,r){const i=this.copy();return i._tx+=t,i._ty+=e,i._sx*=s,i._sy*=r,i}readAttributeAsTimestamp(t){const e=this.readAttribute(t);return"string"==typeof e?new Date(e).getTime():"number"==typeof e||null==e?e:null}readAttribute(t,e=!1){const s=this._readAttribute(t,e);if(void 0!==s)return s;for(const r of this._joined){r.setIndex(this.getIndex());const s=r._readAttribute(t,e);if(void 0!==s)return s}}readAttributes(){const t=this._readAttributes();for(const e of this._joined){e.setIndex(this.getIndex());const s=e._readAttributes();for(const e of Object.keys(s))t[e]=s[e]}return t}joinAttributes(t){this._joined.push(t)}readArcadeFeature(){return this}hasField(t){return this.fields.has(t)}geometry(){const t=this.readHydratedGeometry(),e=(0,d.zv)(t,this.geometryType,this.hasZ,this.hasM),s=(0,f.rS)(e);return s&&(s.spatialReference=this._arcadeSpatialReference),s}autocastArcadeDate(t,e){return e&&e instanceof Date?this.isUnknownDateTimeField(t)?r.lY.unknownDateJSToArcadeDate(e):r.lY.dateJSAndZoneToArcadeDate(e,this.contextTimeZone??c.qU):e}isUnknownDateTimeField(t){return this._layerSchema.fieldsIndex.getTimeZone(t)===c.L5}field(t){let e=this.fields.get(t);if(e)switch(e.type){case"date-only":case"esriFieldTypeDateOnly":return a.n.fromReader(this.readAttribute(t,!1));case"time-only":case"esriFieldTypeTimeOnly":return o.k.fromReader(this.readAttribute(t,!1));case"esriFieldTypeTimestampOffset":case"timestamp-offset":return r.lY.fromReaderAsTimeStampOffset(this.readAttribute(t,!1));case"date":case"esriFieldTypeDate":return this.autocastArcadeDate(t,this.readAttribute(t,!0));default:return this.readAttribute(t,!1)}for(const s of this._joined)if(s.setIndex(this.getIndex()),e=s.fields.get(t),e)switch(e.type){case"date-only":case"esriFieldTypeDateOnly":return a.n.fromReader(s._readAttribute(t,!1));case"time-only":case"esriFieldTypeTimeOnly":return o.k.fromReader(s._readAttribute(t,!1));case"esriFieldTypeTimestampOffset":case"timestamp-offset":return r.lY.fromReaderAsTimeStampOffset(s._readAttribute(t,!1));case"date":case"esriFieldTypeDate":return this.autocastArcadeDate(t,s._readAttribute(t,!0));default:return this.readAttribute(t,!1)}throw new Error(`Field ${t} does not exist`)}setField(t,e){throw new Error("Unable to update feature attribute values, feature is readonly")}keys(){return this.fields.fields.map((t=>t.name))}castToText(t=!1){if(!t)return JSON.stringify(this.readLegacyFeature());const e=this.readLegacyFeature();if(!e)return JSON.stringify(null);const s={geometry:e.geometry,attributes:{...e.attributes??{}}};for(const r in s.attributes){const t=s.attributes[r];t instanceof Date&&(s.attributes[r]=t.getTime())}return JSON.stringify(s)}gdbVersion(){return null}fullSchema(){return this._layerSchema}castAsJson(t=null){return{attributes:this._readAttributes(),geometry:!0===t?.keepGeometryType?this.geometry():this.geometry()?.toJSON()??null}}castAsJsonAsync(t=null,e=null){return Promise.resolve(this.castAsJson(e))}removeIds(t){if(null==this._objectIdToIndex){const t=new Map,e=this.getCursor();for(;e.next();){const s=e.getObjectId();(0,n.Lw)(s),t.set(s,e.getIndex())}this._objectIdToIndex=t}const e=this._objectIdToIndex;for(const s of t)e.has(s)&&this.removeAtIndex(e.get(s))}removeAtIndex(t){null==this._deleted&&(this._deleted=_.y.create(this.getSize())),this._deleted.set(t)}readGeometryForDisplay(){return this.readUnquantizedGeometry(!0)}readLegacyGeometryForDisplay(){return this.readLegacyGeometry(!0)}*features(){const t=this.getCursor();for(;t.next();)yield t.readOptimizedFeature()}_getExists(){return null==this._deleted||!this._deleted.has(this.getIndex())}_computeCentroid(){if("esriGeometryPolygon"!==this.geometryType)return null;const t=this.readUnquantizedGeometry();if(!t||t.hasIndeterminateRingOrder)return null;const e=u.z.fromOptimized(t,this.geometryType);e.yFactor*=-1;const s=(0,h.d)(e);return s?(s[1]*=-1,new l.A([],s)):null}copyInto(t){t.seen=this.seen,t._storage=this._storage,t._arcadeSpatialReference=this._arcadeSpatialReference,t._joined=this._joined,t._tx=this._tx,t._ty=this._ty,t._sx=this._sx,t._sy=this._sy,t._deleted=this._deleted,t._objectIdToIndex=this._objectIdToIndex,t.contextTimeZone=this.contextTimeZone}}},51747:(t,e,s)=>{s.d(e,{K:()=>o});var r=s(21355),i=s(32597),n=s(79005),a=s(42549);class o extends a.Y{static fromFeatures(t,e){const{objectIdField:s,geometryType:i}=e,n=(0,r.Di)([],t,i,!1,!1,s);for(let r=0;r<n.length;r++)n[r].displayId=t[r].displayId;return o.fromOptimizedFeatures(n,e)}static fromFeatureSet(t,e){const s=(0,r.q3)(t,e.objectIdField);return o.fromOptimizedFeatureSet(s,e)}static fromOptimizedFeatureSet(t,e){const{features:s}=t,r=o.fromOptimizedFeatures(s,e);return r._exceededTransferLimit=t.exceededTransferLimit,r._transform=t.transform,r._fieldsIndex=new n.A(e.fields),r}static fromOptimizedFeatures(t,e,s){const r=a.Y.createInstance(),i=new o(r,t,e);return i._fieldsIndex=new n.A(e.fields),i._transform=s,i}constructor(t,e,s){super(t,s),this._exceededTransferLimit=!1,this._featureIndex=-1,this._fieldsIndex=null,this._geometryType=s?.geometryType,this._features=e}get fields(){return this._fieldsIndex}get _current(){return this._features[this._featureIndex]}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}removeIds(t){const e=new Set(t);this._features=this._features.filter((t=>!(null!=t.objectId&&e.has(t.objectId))))}append(t){for(const e of t)this._features.push(e)}getSize(){return this._features.length}getCursor(){return this.copy()}getQuantizationTransform(){return this._transform}getAttributeHash(){let t="";for(const e in this._current.attributes)t+=this._current.attributes[e];return t}getIndex(){return this._featureIndex}setIndex(t){this._featureIndex=t}getObjectId(){return this._current?.objectId}getDisplayId(){return this._current.displayId}setDisplayId(t){this._current.displayId=t}getGroupId(){return this._current.groupId}setGroupId(t){this._current.groupId=t}copy(){const t=new o(this.instance,this._features,this.fullSchema());return this.copyInto(t),t}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readLegacyFeature(){return(0,r.oN)(this._current,this.geometryType,this.hasZ,this.hasM)}readOptimizedFeature(){return this._current}readLegacyPointGeometry(){return this.readGeometry()?{x:this.getX(),y:this.getY()}:null}readLegacyGeometry(){const t=this.readUnquantizedGeometry();return(0,r.zv)(t,this.geometryType,this.hasZ,this.hasM)}readLegacyCentroid(){const t=this.readCentroid();return null==t?null:{x:t.coords[0]*this._sx+this._tx,y:t.coords[1]*this._sy+this._ty}}readGeometryArea(){return(0,i.N3)(this._current)?(0,r.Rk)(this._current.geometry,2):0}readUnquantizedGeometry(){const t=this.readGeometry();if("esriGeometryPoint"===this.geometryType||!t)return t;const e=t.clone();return function({coords:t,lengths:e}){let s=0;for(const r of e){for(let e=1;e<r;e++)t[2*(s+e)]+=t[2*(s+e)-2],t[2*(s+e)+1]+=t[2*(s+e)-1];s+=r}}(e),e}readHydratedGeometry(){const t=this._current.geometry;if(null==t)return null;const e=t.clone();return null!=this._transform&&(0,r.Ch)(e,e,this.hasZ,this.hasM,this._transform),e}getXHydrated(){if(!(0,i.N3)(this._current))return 0;const t=this._current.geometry.coords[0],e=this.getQuantizationTransform();return null==e?t:t*e.scale[0]+e.translate[0]}getYHydrated(){if(!(0,i.N3)(this._current))return 0;const t=this._current.geometry.coords[1],e=this.getQuantizationTransform();return null==e?t:e.translate[1]-t*e.scale[1]}getX(){return(0,i.N3)(this._current)?this._current.geometry.coords[0]*this._sx+this._tx:0}getY(){return(0,i.N3)(this._current)?this._current.geometry.coords[1]*this._sy+this._ty:0}readGeometry(){if(!(0,i.N3)(this._current)){if(null!=this._current.centroid){const[t,e]=this._current.centroid.coords;return this.createQuantizedExtrudedGeometry(t,e)}return null}const t=this._current.geometry.clone();if(t.isPoint)return t.coords[0]=t.coords[0]*this._sx+this._tx,t.coords[1]=t.coords[1]*this._sy+this._ty,t;let e=0;for(const s of t.lengths)t.coords[2*e]=t.coords[2*e]*this._sx+this._tx,t.coords[2*e+1]=t.coords[2*e+1]*this._sy+this._ty,e+=s;return t}readCentroid(){return(0,i.N3)(this._current)?this._computeCentroid():this._current.centroid}_readAttribute(t,e){const s=this._fieldsIndex.get(t);if(!s)return;let r=this._current.attributes[s.name];return null==r?r:("esriFieldTypeTimestampOffset"===this.fields.get(t)?.type&&(r=this.parseTimestampOffset(r)),e&&this.fields.isDateField(t)?new Date(r):r)}copyInto(t){super.copyInto(t),t._featureIndex=this._featureIndex,t._transform=this._transform,t._fieldsIndex=this._fieldsIndex}_readAttributes(){return this._current.attributes}}},43871:(t,e,s)=>{s.d(e,{y:()=>r});class r{static fromBuffer(t,e){return new r(t,e)}static create(t,e=4294967295){const s=new Uint32Array(Math.ceil(t/32));return new r(s,e)}constructor(t,e){this._mask=0,this._buf=t,this._mask=e}_getIndex(t){return Math.floor(t/32)}has(t){const e=this._mask&t;return!!(this._buf[this._getIndex(e)]&1<<e%32)}hasRange(t,e){let s=t,r=e;for(;s%32&&s!==r;){if(this.has(s))return!0;s++}for(;r%32&&s!==r;){if(this.has(s))return!0;r--}if(s===r)return!1;for(let i=s/32;i!==r/32;i++)if(this._buf[i])return!0;return!1}set(t){const e=this._mask&t,s=this._getIndex(e),r=1<<e%32;this._buf[s]|=r}setRange(t,e){let s=t,r=e;for(;s%32&&s!==r;)this.set(s++);for(;r%32&&s!==r;)this.set(r--);if(s!==r)for(let i=s/32;i!==r/32;i++)this._buf[i]=4294967295}unset(t){const e=this._mask&t,s=this._getIndex(e),r=1<<e%32;this._buf[s]&=4294967295^r}resize(t){const e=this._buf,s=new Uint32Array(Math.ceil(t/32));s.set(e),this._buf=s}or(t){for(let e=0;e<this._buf.length;e++)this._buf[e]|=t._buf[e];return this}and(t){for(let e=0;e<this._buf.length;e++)this._buf[e]&=t._buf[e];return this}xor(t){for(let e=0;e<this._buf.length;e++)this._buf[e]^=t._buf[e];return this}ior(t){for(let e=0;e<this._buf.length;e++)this._buf[e]|=~t._buf[e];return this}iand(t){for(let e=0;e<this._buf.length;e++)this._buf[e]&=~t._buf[e];return this}ixor(t){for(let e=0;e<this._buf.length;e++)this._buf[e]^=~t._buf[e];return this}any(){for(let t=0;t<this._buf.length;t++)if(this._buf[t])return!0;return!1}copy(t){for(let e=0;e<this._buf.length;e++)this._buf[e]=t._buf[e];return this}clone(){return new r(this._buf.slice(),this._mask)}clear(){for(let t=0;t<this._buf.length;t++)this._buf[t]=0}forEachSet(t){for(let e=0;e<this._buf.length;e++){let s=this._buf[e],r=32*e;if(s)for(;s;)1&s&&t(r),s>>>=1,r++}}countSet(){let t=0;return this.forEachSet((e=>{t++})),t}}}}]);