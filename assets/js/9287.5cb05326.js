"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9287],{9287:(e,t,s)=>{s.r(t),s.d(t,{default:()=>Te});var r=s(66866),i=s(25707),o=s(56542),a=s(24793),n=s(48982),l=s(98849),p=s(20464),d=s(539),u=s(6267),c=s(35775),y=s(40189),h=s(85251),f=s(21564),m=(s(39831),s(9272),s(55135)),g=s(75094),v=s(63863),w=s(94255),b=s(97066),I=s(68833),_=s(29567),A=s(50193),F=s(45681),L=s(16161),S=s(46602),T=s(41506),x=s(34722),M=s(25389),E=s(68821),O=s(90826),P=s(21877),Z=s(42453);function j({associatedLayer:e,serviceUpdateTimeStamp:t}){const s=e?.editingInfo?.lastEditDate,r=e?.serverGens,i=null!=s,o=null!=t,a=i&&o&&t.lastUpdate!==s.getTime();return i&&(a||!o&&r?.minServerGen!==r?.serverGen)}var D=s(83849),R=s(17197),C=s(16984);const q=e=>{let t=class extends e{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){const e=this.associatedLayer?.timeInfo;if(null==e)return null;const t=e.clone();return(0,Z.sv)(t,this.fieldsIndex),t}set timeInfo(e){(0,Z.sv)(e,this.fieldsIndex),this._override("timeInfo",e)}get timeExtent(){return this.associatedLayer?.timeExtent}set timeExtent(e){this._override("timeExtent",e)}get timeOffset(){return this.associatedLayer?.timeOffset}set timeOffset(e){this._override("timeOffset",e)}get datesInUnknownTimezone(){return this.associatedLayer?.datesInUnknownTimezone??!1}set datesInUnknownTimezone(e){this._override("datesInUnknownTimezone",e)}async loadTimeInfoFromService(e){const{serviceTimeInfo:t}=this;if(null==t)return;const{startTimeField:s,endTimeField:r}=t;if(null==s&&null==r)return;if(j({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const i=async t=>{let r=null;try{const s=await(this.fetchStatistics?.(t,e));r=s?.stats}catch{}if(null==r)return null;const{minTimeStr:i,min:o,maxTimeStr:a,max:n}=r,l=t===s?i??o:a??n;return null!=l?new Date(l):null},[o,a]=await Promise.all([i(s),i(r)]);if(null!=s&&null==o||null!=r&&null==a)return;const n=new R.T({start:o,end:a});this.setAtOrigin("timeInfo",new D.A({endField:r,startField:s,fullTimeExtent:n}),"service")}};return(0,r._)([(0,f.MZ)({type:D.A,json:{read:!1,write:!1}})],t.prototype,"timeInfo",null),(0,r._)([(0,f.MZ)({type:R.T,json:{read:!1,write:!1}})],t.prototype,"timeExtent",null),(0,r._)([(0,f.MZ)({type:C.T,json:{read:!1,write:!1}})],t.prototype,"timeOffset",null),(0,r._)([(0,f.MZ)({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],t.prototype,"datesInUnknownTimezone",null),(0,r._)([(0,f.MZ)({type:U,readOnly:!0,json:{read:{source:"timeInfo"}}})],t.prototype,"serviceTimeInfo",void 0),t=(0,r._)([(0,v.$)("esri.layers.mixins.TemporalSceneLayer")],t),t};let U=class extends P.A{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};(0,r._)([(0,f.MZ)({type:String})],U.prototype,"endTimeField",void 0),(0,r._)([(0,f.MZ)({type:String})],U.prototype,"startTimeField",void 0),U=(0,r._)([(0,v.$)("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],U);var $=s(16123),Q=s(98154),G=s(97934),N=s(76592),k=s(52506),V=s(18475),B=s(99989),z=s(77567),H=s(79005),W=s(84546),K=s(40906),X=s(61826),J=s(79682),Y=s(8585),ee=s(12434),te=s(44335);let se=class extends P.A{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};(0,r._)([(0,f.MZ)({type:String,json:{read:!0,write:{isRequired:!0}}})],se.prototype,"name",void 0),(0,r._)([(0,f.MZ)({type:String,json:{read:!0,write:{isRequired:!0}}})],se.prototype,"field",void 0),(0,r._)([(0,f.MZ)({type:[Number],json:{read:!0,write:!0}})],se.prototype,"currentRangeExtent",void 0),(0,r._)([(0,f.MZ)({type:[Number],json:{read:!0,write:!0}})],se.prototype,"fullRangeExtent",void 0),(0,r._)([(0,f.MZ)({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:{isRequired:!0}}})],se.prototype,"type",void 0),se=(0,r._)([(0,v.$)("esri.layers.support.RangeInfo")],se);var re,ie=s(86394),oe=s(19251),ae=s(77841),ne=s(32532),le=s(63680);let pe=re=class extends P.A{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new ne.A,this._geometriesSource=null}initialize(){this.addHandles((0,h.on)((()=>this.geometries),"after-changes",(()=>this.geometries=this.geometries),h.OH))}readGeometries(e,t,s){Array.isArray(e)?this.geometries=ne.A.fromJSON(e,s):this._geometriesSource={url:(0,le.f)(e,s),context:s}}async loadGeometries(e,t){if(null==this._geometriesSource)return;const{url:s,context:r}=this._geometriesSource,i=await(0,ie.A)(s,{responseType:"json",signal:t?.signal}),o=e.toJSON(),a=i.data.map((e=>({...e,spatialReference:o})));this.geometries=ne.A.fromJSON(a,r),this._geometriesSource=null}clone(){const e=new re({geometries:(0,oe.o8)(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};(0,r._)([(0,f.MZ)({type:["disjoint","contains"],nonNullable:!0,json:{write:{isRequired:!0}}})],pe.prototype,"spatialRelationship",void 0),(0,r._)([(0,f.MZ)({type:ne.A,nonNullable:!0,json:{write:!0,origins:{"web-scene":{write:{isRequired:!0}}}}}),(0,ae.P)({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],pe.prototype,"geometries",void 0),(0,r._)([(0,g.w)(["web-scene","portal-item"],"geometries")],pe.prototype,"readGeometries",null),pe=re=(0,r._)([(0,v.$)("esri.layers.support.SceneFilter")],pe);const de=pe;var ue=s(20909);var ce=s(21484),ye=s(53835),he=s(14474),fe=s(27451),me=s(44116);async function ge(e){const t=[];for(const s of e)s.name.toLowerCase().endsWith(".zip")?t.push(ve(s)):t.push(Promise.resolve(s));return(await Promise.all(t)).flat()}async function ve(e){const{BlobReader:t,ZipReader:r,BlobWriter:i}=await s.e(79087).then(s.bind(s,79087)),o=[],a=new r(new t(e));return(await a.getEntries()).forEach((e=>{if(e.directory||/^__MACOS/i.test(e.filename))return;const t=new i,s=e.getData?.(t).then((t=>new File([t],e.filename)));s&&o.push(s)})),Promise.all(o)}var we=s(15976),be=s(18846),Ie=s(48904);const _e=new Set(["3DObject","Point"]),Ae=(0,z.p)();let Fe=class extends(q((0,S.w6)((0,E.w6)((0,F.b)((0,T.q)((0,x.A)((0,M.j)((0,c.P)((0,L.d)((0,A.p)(a.A.ClonableMixin(I.A)))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new n.A,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.attributeTableTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._set("renderer",null),this.associatedLayer=(0,u.pR)(this.associatedLayer)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){const s=this.getField(e)?.domain??null;return this.associatedLayer?(0,k.Vq)(this.associatedLayer,e,t,s):s}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer?.types??[]}get typeIdField(){return this.associatedLayer?.typeIdField??null}get templates(){return this.associatedLayer?.templates??null}get formTemplate(){return this.associatedLayer?.formTemplate??null}get fieldsIndex(){return new H.A(this.fields)}readNodePages(e,t,s){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:W.W4.fromJSON(e,s)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.effectiveCapabilities)}get effectiveEditingEnabled(){return null!=this.associatedLayer&&(0,k.C$)(this.associatedLayer)}get geometryType(){return Se[this.profile]||"mesh"}set renderer(e){(0,Z.yp)(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){e=null!=e?e:G.P;const{query:t,queryRelated:s,editing:{supportsGlobalId:r,supportsRollbackOnFailure:i,supportsUploadWithItemId:o,supportsGeometryUpdate:a,supportsReturnServiceEditsInSourceSpatialReference:n},data:{supportsZ:l,supportsM:p,isVersioned:d,supportsAttachment:u},operations:{supportsEditing:c,supportsAdd:y,supportsUpdate:h,supportsDelete:f,supportsQuery:m,supportsQueryAttachments:g,supportsAsyncConvert3D:v}}=e,w=e.operations.supportsChangeTracking,b=!!this.associatedLayer?.infoFor3D;return{query:t,queryRelated:s,editing:{supportsGlobalId:r,supportsReturnServiceEditsInSourceSpatialReference:n,supportsRollbackOnFailure:i,supportsGeometryUpdate:b&&a,supportsUploadWithItemId:o},data:{supportsAttachment:u,supportsZ:l,supportsM:p,isVersioned:d},operations:{supportsQuery:m,supportsQueryAttachments:g,supportsEditing:c&&w,supportsAdd:b&&y&&w,supportsDelete:b&&f&&w,supportsUpdate:h&&w,supportsAsyncConvert3D:v}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.associatedLayer?.editingEnabled??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){return this.associatedLayer?.infoFor3D??null}get relationships(){return this.associatedLayer?.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return this.associatedLayer?.displayField??null}readProfile(e,t){const s=t.store.profile;return null!=s&&Le[s]?Le[s]:(d.A.getLogger(this).error("Unknown or missing profile",{profile:s,layer:this}),"mesh-pyramids")}get useViewTime(){return this.associatedLayer?.useViewTime??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=null!=e?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(y.QP),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await(0,ce.L)(this,{origin:"service"},t),(0,Z.yp)(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){null!=this.filter&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){d.A.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new he.A;return"mesh"===this.geometryType?this.capabilities.query.supportsReturnMesh&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e?.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new l.A("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new l.A("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){const s=(0,Z.hL)(this.fieldsIndex,await(0,be.TO)(this,(0,be.D8)(this)));return(0,we.s1)(this.parsedUrl?.path??"",this.attributeStorageInfo??[],e,t,s,this.apiKey,this.customParameters)}async queryCachedFeature(e,t){const s=await this.queryCachedAttributes(e,[t]);if(!s||0===s.length)throw new l.A("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const r=new i.A;return r.attributes=s[0],r.layer=this,r.sourceLayer=this,r}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryObjectIds(e||this.createQuery(),t)))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryAttachments(e,t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(d.A.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return(0,me.tn)(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new l.A("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new l.A("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){return await this.load(t),await this.fetchStatistics(e,t)}async saveAs(e,t){return this._debouncedSaveOperations(E.Xh.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(E.Xh.SAVE,e)}async applyEdits(e,t){const{applyEdits:r}=await s.e(75903).then(s.bind(s,75903));let i=t;await this.load();const o=this.associatedLayer;if(!o)throw new l.A(`${this.type}-layer:not-editable`,"Service is not editable");await o.load();const{globalIdField:a}=o,n=!!o.infoFor3D,p=i?.globalIdUsed??!0;if(n&&null==a)throw new l.A(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(n&&!p)throw new l.A(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return(0,$.Wo)(o.url)&&n&&null!=e.deleteFeatures&&null!=a&&(i={...i,globalIdToObjectId:await(0,k.GA)(o,e.deleteFeatures,a)}),r(this,o.source,e,i)}async uploadAssets(e,t){if(await this.load(),null==this.associatedLayer)throw new l.A(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}async convertMesh(e,t){t??={};const r=e=>{throw d.A.getLogger(this).error(".convertMesh()",e.message),e};await this.load(),this.infoFor3D||r(new l.A("invalid:layer","SceneLayer has no capability for mesh conversion"));const i=await this.extractAndFilterFiles(e),o=i.reduce(((e,t)=>(0,K.oF)(this.infoFor3D,t)?e+1:e),0);0===o&&r(new _.VP),o>1&&r(new _.XQ);const a=this.spatialReference,n=t.location??new b.A({x:0,y:0,z:0,spatialReference:a}),p=n.spatialReference.isGeographic?"local":"georeferenced",{default:u}=await Promise.all([s.e(72076),s.e(94704),s.e(39647)]).then(s.bind(s,39647)),c=u.createWithExternalSource(n,{type:"client",files:i},{vertexSpace:p,transform:(0,te.Z)(n.spatialReference),unitConversionDisabled:!0}),[y]=await this.uploadAssets([c],{...t,useAssetOrigin:!t.location});return y}async extractAndFilterFiles(e){await this.load();const t=this.infoFor3D;return t?(await ge(e)).filter((e=>(0,K.fu)(t,e))):e}validateLayer(e){if(e.layerType&&!_e.has(e.layerType))throw new l.A("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new l.A("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new l.A("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});!function(e,t){let s=!1,r=!1;if(null==e)s=!0,r=!0;else{const i=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":s=!0,r=i;break;case"vertex-reference-frame":s=!0,r=!i;break;default:s=!1}}if(!s)throw new l.A("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!r)throw new l.A("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new l.A("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!!this.attributeStorageInfo?.some((t=>t.name===e.name)),s=!!this.associatedLayer?.fields?.some((t=>t&&e.name===t.name)),r={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||s,supportsLayerQuery:s};this._fieldUsageInfo[e.name]=r}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPropertyOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){if(!this.associatedLayer?.fields)return;let e=null;for(const t of this.associatedLayer.fields){const s=this.getField(t.name);s?(!s.domain&&t.domain&&(s.domain=t.domain.clone()),s.editable=t.editable,s.nullable=t.nullable,s.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPropertyOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled","attributeTableTemplate"],t=(0,m.oY)(this);for(let s=0;s<e.length;s++){const r=e[s],i=this.originIdOf(r),o=this.associatedLayer.originIdOf(r);i<o&&(o===w.Gr.SERVICE||o===w.Gr.PORTAL_ITEM)&&t.setAtOrigin(r,this.associatedLayer[r],o)}}_applyAssociatedLayerExtentOverride(){const e=this.associatedLayer?.getAtOrigin("fullExtent","service");null!=this.associatedLayer?.infoFor3D&&e&&(0,$.Wo)(this.associatedLayer?.url)&&j(this)&&(0,m.oY)(this).setAtOrigin("fullExtent",e.clone(),w.Gr.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:s,portalItem:r}=await(0,Q.L)(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),i=await ee.S.FeatureLayer();this.associatedLayer=new i({url:t,customParameters:this.customParameters,layerId:s,portalItem:r}),await this.associatedLayer.load()}catch(ve){(0,y.zf)(ve)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){const e=new AbortController;this.addHandles((0,p.rE)(e));try{await(0,h.C_)((()=>this.popupEnabled&&null!=this.popupTemplate),e.signal)}catch(s){return void(0,y.jH)(s)}const t=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?d.A.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${t}`):d.A.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${t}`)}_validateElevationInfo(){const e=this.elevationInfo;"mesh-pyramids"===this.profile&&(0,fe.XF)(d.A.getLogger(this),(0,fe.$7)("Mesh scene layers","relative-to-scene",e)),(0,fe.XF)(d.A.getLogger(this),(0,fe.tW)("Scene layers",e))}async fetchStatistics(e,t){return await async function({fieldName:e,statisticsInfo:t,errorContext:s,fieldsIndex:r,path:i,customParameters:o,apiKey:a,signal:n}){if(null==t)throw new l.A(`${s}:no-cached-statistics`,"Cached statistics are not available for this layer");const p=r.get(e);if(null==p)throw new l.A(`${s}:field-unexisting`,`Field '${e}' does not exist on the layer`);const d=t.find((e=>e.name===p.name));if(null==d)throw new l.A(`${s}:no-cached-statistics`,"Cached statistics for this attribute are not available");const u=(0,ue.fj)(i,d.href),{data:c}=await(0,ie.A)(u,{query:{f:"json",...o,token:a},responseType:"json",signal:n});return c}({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:this.parsedUrl?.path??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:t?.signal})}};(0,r._)([(0,f.MZ)({types:{key:"type",base:V.c,typeMap:{selection:B.A}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],Fe.prototype,"featureReduction",void 0),(0,r._)([(0,f.MZ)({type:[se],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],Fe.prototype,"rangeInfos",void 0),(0,r._)([(0,f.MZ)({json:{read:!1}})],Fe.prototype,"associatedLayer",void 0),(0,r._)([(0,f.MZ)({type:["show","hide"]})],Fe.prototype,"listMode",void 0),(0,r._)([(0,f.MZ)({type:["ArcGISSceneServiceLayer"]})],Fe.prototype,"operationalLayerType",void 0),(0,r._)([(0,f.MZ)({json:{read:!1},readOnly:!0})],Fe.prototype,"type",void 0),(0,r._)([(0,f.MZ)({...Ae.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],Fe.prototype,"fields",void 0),(0,r._)([(0,f.MZ)()],Fe.prototype,"types",null),(0,r._)([(0,f.MZ)()],Fe.prototype,"typeIdField",null),(0,r._)([(0,f.MZ)()],Fe.prototype,"templates",null),(0,r._)([(0,f.MZ)()],Fe.prototype,"formTemplate",null),(0,r._)([(0,f.MZ)({readOnly:!0,clonable:!1})],Fe.prototype,"fieldsIndex",null),(0,r._)([(0,f.MZ)({type:Y.A,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],Fe.prototype,"floorInfo",void 0),(0,r._)([(0,f.MZ)(Ae.outFields)],Fe.prototype,"outFields",void 0),(0,r._)([(0,f.MZ)({type:W.W4,readOnly:!0,json:{read:!1}})],Fe.prototype,"nodePages",void 0),(0,r._)([(0,g.w)("service","nodePages",["nodePages","pointNodePages"])],Fe.prototype,"readNodePages",null),(0,r._)([(0,f.MZ)({type:[W.uV],readOnly:!0})],Fe.prototype,"materialDefinitions",void 0),(0,r._)([(0,f.MZ)({type:[W.Ot],readOnly:!0})],Fe.prototype,"textureSetDefinitions",void 0),(0,r._)([(0,f.MZ)({type:[W.L0],readOnly:!0})],Fe.prototype,"geometryDefinitions",void 0),(0,r._)([(0,f.MZ)({readOnly:!0})],Fe.prototype,"serviceUpdateTimeStamp",void 0),(0,r._)([(0,f.MZ)({readOnly:!0})],Fe.prototype,"attributeStorageInfo",void 0),(0,r._)([(0,f.MZ)({readOnly:!0})],Fe.prototype,"statisticsInfo",void 0),(0,r._)([(0,f.MZ)({type:n.A.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],Fe.prototype,"excludeObjectIds",void 0),(0,r._)([(0,f.MZ)({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],Fe.prototype,"definitionExpression",void 0),(0,r._)([(0,f.MZ)({type:de,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],Fe.prototype,"filter",void 0),(0,r._)([(0,f.MZ)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],Fe.prototype,"path",void 0),(0,r._)([(0,f.MZ)(N.Yj)],Fe.prototype,"elevationInfo",null),(0,r._)([(0,f.MZ)({readOnly:!0,json:{read:!1}})],Fe.prototype,"effectiveCapabilities",null),(0,r._)([(0,f.MZ)({readOnly:!0})],Fe.prototype,"effectiveEditingEnabled",null),(0,r._)([(0,f.MZ)({type:String})],Fe.prototype,"geometryType",null),(0,r._)([(0,f.MZ)(N.kF)],Fe.prototype,"labelsVisible",void 0),(0,r._)([(0,f.MZ)({type:[X.A],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:J.w},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:J.w},write:!0}})],Fe.prototype,"labelingInfo",void 0),(0,r._)([(0,f.MZ)(N.fV)],Fe.prototype,"legendEnabled",void 0),(0,r._)([(0,f.MZ)({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){if("number"==typeof e&&e>=0&&e<=1)return e;const s=t.layerDefinition?.drawingInfo?.transparency;return void 0!==s?(0,Ie.D)(s):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],Fe.prototype,"opacity",void 0),(0,r._)([(0,f.MZ)({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],Fe.prototype,"priority",void 0),(0,r._)([(0,f.MZ)({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],Fe.prototype,"semantic",void 0),(0,r._)([(0,f.MZ)({types:ye.XJ,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],Fe.prototype,"renderer",null),(0,r._)([(0,f.MZ)({json:{read:!1}})],Fe.prototype,"cachedDrawingInfo",void 0),(0,r._)([(0,g.w)("service","cachedDrawingInfo")],Fe.prototype,"readCachedDrawingInfo",null),(0,r._)([(0,f.MZ)({readOnly:!0,json:{read:!1}})],Fe.prototype,"capabilities",null),(0,r._)([(0,f.MZ)({type:Boolean,json:{read:!1}})],Fe.prototype,"editingEnabled",null),(0,r._)([(0,f.MZ)({readOnly:!0,json:{write:!1,read:!1}})],Fe.prototype,"infoFor3D",null),(0,r._)([(0,f.MZ)({readOnly:!0,json:{write:!1,read:!1}})],Fe.prototype,"relationships",null),(0,r._)([(0,f.MZ)(N.M6)],Fe.prototype,"popupEnabled",void 0),(0,r._)([(0,f.MZ)({type:o.A,json:{name:"popupInfo",write:!0}})],Fe.prototype,"popupTemplate",void 0),(0,r._)([(0,f.MZ)({readOnly:!0,json:{read:!1}})],Fe.prototype,"defaultPopupTemplate",null),(0,r._)([(0,f.MZ)(N.zQ)],Fe.prototype,"attributeTableTemplate",void 0),(0,r._)([(0,f.MZ)({type:String,json:{read:!1}})],Fe.prototype,"objectIdField",void 0),(0,r._)([(0,g.w)("service","objectIdField",["objectIdField","fields"])],Fe.prototype,"readObjectIdField",null),(0,r._)([(0,f.MZ)({type:String,json:{read:!1}})],Fe.prototype,"globalIdField",void 0),(0,r._)([(0,g.w)("service","globalIdField",["globalIdField","fields"])],Fe.prototype,"readGlobalIdField",null),(0,r._)([(0,f.MZ)({readOnly:!0,type:String,json:{read:!1}})],Fe.prototype,"displayField",null),(0,r._)([(0,f.MZ)({type:String,json:{read:!1}})],Fe.prototype,"profile",void 0),(0,r._)([(0,g.w)("service","profile",["store.profile"])],Fe.prototype,"readProfile",null),(0,r._)([(0,f.MZ)({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],Fe.prototype,"normalReferenceFrame",void 0),(0,r._)([(0,f.MZ)(N.PY)],Fe.prototype,"screenSizePerspectiveEnabled",void 0),(0,r._)([(0,f.MZ)({json:{read:!1,origins:{service:{read:!0}}}})],Fe.prototype,"serviceItemId",void 0),(0,r._)([(0,f.MZ)(O.B)],Fe.prototype,"useViewTime",null),Fe=(0,r._)([(0,v.$)("esri.layers.SceneLayer")],Fe);const Le={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},Se={"mesh-pyramids":"mesh",points:"point"},Te=Fe},29567:(e,t,s)=>{s.d(t,{$1:()=>p,H2:()=>y,MT:()=>h,VP:()=>f,WF:()=>d,Wt:()=>a,XQ:()=>m,hK:()=>c,nS:()=>u,uh:()=>n,xY:()=>l});var r=s(98849);const i="upload-assets",o=()=>new Error;class a extends r.A{constructor(){super(`${i}:unsupported`,"Layer does not support asset uploads.",o())}}class n extends r.A{constructor(){super(`${i}:no-glb-support`,"Layer does not support glb.",o())}}class l extends r.A{constructor(){super(`${i}:no-supported-source`,"No supported external source found",o())}}class p extends r.A{constructor(){super(`${i}:not-base-64`,"Expected gltf data in base64 format after conversion.",o())}}class d extends r.A{constructor(){super(`${i}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",o())}}class u extends r.A{constructor(e,t){super(`${i}:bad-response`,`Bad response. Uploaded ${e} items and received ${t} results.`,o())}}class c extends r.A{constructor(e,t){super(`${i}-layer:upload-failed`,`Failed to upload mesh file ${e}. Error code: ${t?.code??"-1"}. Error message: ${t?.messages??"unknown"}`,o())}}class y extends r.A{constructor(e){super(`${i}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${e}, but it does not list it in its supported formats.`,o())}}class h extends r.A{constructor(){super(`${i}:convert3D-failed`,"convert3D failed.")}}class f extends r.A{constructor(){super("invalid-input:no-model","No supported model found")}}class m extends r.A{constructor(){super("invalid-input:multiple-models","Multiple supported models found")}}},97934:(e,t,s)=>{s.d(t,{$:()=>r,P:()=>i});const r={supportsDate:!1,supportsFixedInterval:!1,supportsAutoInterval:!1,supportsFixedBoundaries:!1,supportsStackBy:!1,supportsSplitBy:!1,supportsSnapToData:!1,supportsReturnFullIntervalBin:!1,supportsFirstDayOfWeek:!1,supportsNormalization:!1,supportedStatistics:void 0,supportedNormalizationTypes:void 0},i={analytics:{supportsCacheHint:!1},attachment:{supportsContentType:!1,supportsExifInfo:!1,supportsKeywords:!1,supportsName:!1,supportsSize:!1,supportsCacheHint:!1,supportsOrderByFields:!1,supportsResize:!1},data:{isVersioned:!1,isBranchVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:!1},editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsAsyncApplyEdits:!1,zDefault:void 0},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!1,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1,supportsAsyncConvert3D:!1},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},queryAttributeBins:r,query:{maxRecordCount:0,maxRecordCountFactor:0,maxUniqueIDCount:0,standardMaxRecordCount:0,supportsCacheHint:!1,supportsCentroid:!1,supportsCompactGeometry:!1,supportsCurrentUser:!1,supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:!1,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:!1,supportsPagination:!1,supportsPaginationOnAggregatedQueries:!1,supportsPercentileStatistics:!1,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsSqlExpression:!1,supportsStandardizedQueriesOnly:!1,supportsTopFeaturesQuery:!1,supportsTrueCurve:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsStatistics:!1,tileMaxRecordCount:0}}},44335:(e,t,s)=>{s.d(t,{Z:()=>o});var r=s(92976),i=s(8695);function o(e){const t=1/(0,r.GA)(e,1);return 1!==t?new i.A({scale:[t,t,t]}):void 0}},18846:(e,t,s)=>{s.d(t,{D8:()=>o,TO:()=>i,d0:()=>a});var r=s(42453);async function i(e,t=e.popupTemplate){if(null==t)return[];const s=await t.getRequiredFields(e.fieldsIndex),{lastEditInfoEnabled:i}=t,{objectIdField:o,typeIdField:a,globalIdField:n,relationships:l}=e;if(s.includes("*"))return["*"];const p=i?(0,r.eX)(e):[],d=(0,r.DB)(e.fieldsIndex,[...s,...p]);return a&&d.push(a),d&&o&&e.fieldsIndex?.has(o)&&!d.includes(o)&&d.push(o),d&&n&&e.fieldsIndex?.has(n)&&!d.includes(n)&&d.push(n),l&&l.forEach((t=>{const{keyField:s}=t;d&&s&&e.fieldsIndex?.has(s)&&!d.includes(s)&&d.push(s)})),d}function o(e,t){return e.popupTemplate?e.popupTemplate:null!=t&&t.defaultPopupTemplateEnabled&&null!=e.defaultPopupTemplate?e.defaultPopupTemplate:null}function a(e,t){return null!=o(e,{defaultPopupTemplateEnabled:t})}}}]);