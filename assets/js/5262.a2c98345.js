"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5262],{42609:(t,e,n)=>{n.d(e,{g:()=>o});var i=n(22279),s=n(84119);function o(t,e,n,i=0){l[0]=t.x,l[1]=t.y;const o=t.z;return l[2]=void 0!==o?o:i,(0,s.projectBuffer)(l,t.spatialReference,0,e,n,0,1)}const l=(0,i.c)()},18578:(t,e,n)=>{n.d(e,{Cy:()=>r,UT:()=>y,hs:()=>c,lR:()=>a,wW:()=>h});var i=n(92504),s=n(80510),o=n(36358),l=n(65319);function r(t,e,n,i){if(null==i||t.hasZ||(i=void 0),"point"===t.type)return t.x+=e,t.y+=n,t.hasZ&&null!=i&&(t.z+=i),t;if("multipoint"===t.type){const s=t.points;for(let t=0;t<s.length;t++)s[t]=u(s[t],e,n,i);return t}if("extent"===t.type)return t.xmin+=e,t.xmax+=e,t.ymin+=n,t.ymax+=n,null!=i&&(t.zmin??=0,t.zmin+=i,t.zmax??=0,t.zmax+=i),t;const s=(0,l.$K)(t),o="polyline"===t.type?t.paths:t.rings;for(let l=0;l<s.length;l++){const t=s[l];for(let s=0;s<t.length;s++)t[s]=u(t[s],e,n,i)}return"paths"in t?t.paths=o:t.rings=o,t}function a(t,e,n,i,s){const o=t.clone(),a=i.resolution;if("point"===o.type){if(s)r(o,e*a,-n*a);else{const t=i.state.transform,s=i.state.inverseTransform,l=t[0]*o.x+t[2]*o.y+t[4],r=t[1]*o.x+t[3]*o.y+t[5];o.x=s[0]*(l+e)+s[2]*(r+n)+s[4],o.y=s[1]*(l+e)+s[3]*(r+n)+s[5]}return o}if("multipoint"===o.type){if(s)r(o,e*a,-n*a);else{const t=o.points,s=i.state.transform,l=i.state.inverseTransform;for(let i=0;i<t.length;i++){const o=t[i],r=s[0]*o[0]+s[2]*o[1]+s[4],a=s[1]*o[0]+s[3]*o[1]+s[5],c=l[0]*(r+e)+l[2]*(a+n)+l[4],h=l[1]*(r+e)+l[3]*(a+n)+l[5];t[i]=m(o,c,h,void 0)}}return o}if("extent"===o.type){if(s)r(o,e*a,-n*a);else{const t=i.state.transform,s=i.state.inverseTransform,l=t[0]*o.xmin+t[2]*o.ymin+t[4],r=t[1]*o.xmin+t[3]*o.ymin+t[5],a=t[0]*o.xmax+t[2]*o.ymax+t[4],c=t[1]*o.xmax+t[3]*o.ymax+t[5];o.xmin=s[0]*(l+e)+s[2]*(r+n)+s[4],o.ymin=s[1]*(l+e)+s[3]*(r+n)+s[5],o.xmax=s[0]*(a+e)+s[2]*(c+n)+s[4],o.ymax=s[1]*(a+e)+s[3]*(c+n)+s[5]}return o}if(s)r(o,e*a,-n*a);else{const t=(0,l.$K)(o),s="polyline"===o.type?o.paths:o.rings,r=i.state.transform,a=i.state.inverseTransform;for(let i=0;i<t.length;i++){const s=t[i];for(let t=0;t<s.length;t++){const i=s[t],o=r[0]*i[0]+r[2]*i[1]+r[4],l=r[1]*i[0]+r[3]*i[1]+r[5],c=a[0]*(o+e)+a[2]*(l+n)+a[4],h=a[1]*(o+e)+a[3]*(l+n)+a[5];s[t]=m(i,c,h,void 0)}}"paths"in o?o.paths=s:o.rings=s}return o}function c(t,e,n,i){if("point"===t.type){const{x:s,y:o}=t,l=i?i[0]:s,r=i?i[1]:o,a=t.clone(),c=(s-l)*e+l,h=(o-r)*n+r;return a.x=c,a.y=h,a}if("multipoint"===t.type){const r=(0,l.$K)(t),a=(0,s.vt)(),[c,h,y,u]=(0,o.Yz)(a,[r]),p=i?i[0]:(c+y)/2,f=i?i[1]:(u+h)/2,g=t.clone(),d=g.points;for(let t=0;t<d.length;t++){const i=d[t],[s,o]=i,l=(s-p)*e+p,r=(o-f)*n+f;d[t]=m(i,l,r,void 0)}return g}if("extent"===t.type){const{xmin:s,xmax:o,ymin:l,ymax:r}=t,a=i?i[0]:(s+o)/2,c=i?i[1]:(r+l)/2,h=t.clone();if(h.xmin=(s-a)*e+a,h.ymax=(r-c)*n+c,h.xmax=(o-a)*e+a,h.ymin=(l-c)*n+c,h.xmin>h.xmax){const t=h.xmin,e=h.xmax;h.xmin=e,h.xmax=t}if(h.ymin>h.ymax){const t=h.ymin,e=h.ymax;h.ymin=e,h.ymax=t}return h}const r=(0,l.$K)(t),a=(0,s.vt)(),[c,h,y,u]=(0,o.Yz)(a,r),p=i?i[0]:(c+y)/2,f=i?i[1]:(u+h)/2,g=t.clone(),d="polyline"===g.type?g.paths:g.rings;for(let s=0;s<r.length;s++){const t=r[s];for(let i=0;i<t.length;i++){const o=t[i],[l,r]=o,a=(l-p)*e+p,c=(r-f)*n+f;d[s][i]=m(o,a,c,void 0)}}return"paths"in g?g.paths=d:g.rings=d,g}function h(t,e,n,i,s,o){const l=Math.sqrt((n-t)*(n-t)+(i-e)*(i-e));return Math.sqrt((s-t)*(s-t)+(o-e)*(o-e))/l}function y(t,e,n,s=!1){const o=Math.atan2(e.y-n.y,e.x-n.x)-Math.atan2(t.y-n.y,t.x-n.x),l=Math.atan2(Math.sin(o),Math.cos(o));return s?l:(0,i.KJ)(l)}function u(t,e,n,i){return m(t,t[0]+e,t[1]+n,null!=t[2]&&null!=i?t[2]+i:void 0)}function m(t,e,n,i){const s=[e,n];return t.length>2&&s.push(null!=i?i:t[2]),t.length>3&&s.push(t[3]),s}},285:(t,e,n)=>{n.d(e,{l:()=>_});var i=n(66866),s=n(52495),o=n(17306),l=n(85251),r=n(89882),a=n(21564),c=(n(73446),n(85569),n(39831),n(63863)),h=n(58680),y=n(21839),u=n(22279),m=n(97303),p=n(42609),f=n(27451),g=n(26207),d=n(60973),b=n(68928),x=n(49313);let _=class extends s.A{set graphic(t){this._circleCollisionCache=null,this._originalSymbol=t.symbol,this._set("graphic",t),this.attachSymbolChanged()}get elevationInfo(){const{layer:t}=this.graphic,e=t&&"elevationInfo"in t?t.elevationInfo:null,n=(0,f.ky)(this.graphic),i=e?e.offset:0;return new d.A({mode:n,offset:i})}set focusedSymbol(t){t!==this._get("focusedSymbol")&&(this._set("focusedSymbol",t),this._updateGraphicSymbol(),this._circleCollisionCache=null)}grabbableForEvent(){return!0}set grabbing(t){t!==this._get("grabbing")&&(this._set("grabbing",t),this._updateGraphicSymbol())}set hovering(t){t!==this._get("hovering")&&(this._set("hovering",t),this._updateGraphicSymbol())}set selected(t){t!==this._get("selected")&&(this._set("selected",t),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:t?"select":"deselect"}))}get _focused(){return this._get("hovering")||this._get("grabbing")}constructor(t){super(t),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.consumesClicks=!0,this.events=new o.A.EventEmitter,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null)}intersectionDistance(t){const e=this.graphic;if(!1===e.visible)return null;const n=e.geometry;if(null==n)return null;const i=this._get("focusedSymbol"),s=null!=i?i:e.symbol;return"2d"===this.view.type?this._intersectDistance2D(this.view,t,n,s):this._intersectDistance3D(this.view,t,e)}attach(){this.attachSymbolChanged(),null!=this.layer&&this.layer.add(this.graphic)}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),null!=this.layer&&this.layer.remove(this.graphic)}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=(0,l.wB)((()=>this.graphic?.symbol),(t=>{null!=t&&t!==this.focusedSymbol&&t!==this._originalSymbol&&(this._originalSymbol=t,this._focused&&null!=this.focusedSymbol&&(this.graphic.symbol=this.focusedSymbol))}),l.OH)}detachSymbolChanged(){null!=this._graphicSymbolChangedHandle&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null)}onElevationChange(){}onViewChange(){}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&null!=this.focusedSymbol?this.focusedSymbol:this._originalSymbol}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol}_intersectDistance2D(t,e,n,i){if(null==(i=i||(0,g.SF)(n)))return null;let s=this._circleCollisionCache;if("point"===n.type&&"cim"===i.type&&"CIMPointSymbol"===i.data.symbol?.type&&i.data.symbol.symbolLayers){const{offsetX:s,offsetY:o,size:l}=(0,b.T)(i),a=(0,r.WA)(e,S),c=l/2,y=t.toScreen(n),u=y.x+s,m=y.y+o;return(0,h.k)(a,[u,m])<c*c?1:null}if("point"!==n.type||"simple-marker"!==i.type)return(0,x.t)(e,n,t)?1:null;if(null==s||!s.originalPoint.equals(n)){const e=n,o=t.spatialReference;if((0,m.canProjectWithoutEngine)(e.spatialReference,o)){const t=(0,m.project)(e,o);s={originalPoint:e.clone(),mapPoint:t,radiusPx:(0,r.Lz)(i.size)},this._circleCollisionCache=s}}if(null!=s){const n=(0,r.WA)(e,S),o=t.toScreen?.(s.mapPoint);if(!o)return null;const l=s.radiusPx,a=o.x+(0,r.Lz)(i.xoffset),c=o.y-(0,r.Lz)(i.yoffset);return(0,h.k)(n,[a,c])<l*l?1:null}return null}_intersectDistance3D(t,e,n){const i=t.toMap(e,{include:[n]});return i&&(0,p.g)(i,v,t.renderSpatialReference)?(0,y.o)(v,t.state.camera.eye):null}};(0,i._)([(0,a.MZ)({constructOnly:!0,nonNullable:!0})],_.prototype,"graphic",null),(0,i._)([(0,a.MZ)()],_.prototype,"elevationInfo",null),(0,i._)([(0,a.MZ)({constructOnly:!0,nonNullable:!0})],_.prototype,"view",void 0),(0,i._)([(0,a.MZ)({value:null})],_.prototype,"focusedSymbol",null),(0,i._)([(0,a.MZ)({constructOnly:!0})],_.prototype,"layer",void 0),(0,i._)([(0,a.MZ)()],_.prototype,"interactive",void 0),(0,i._)([(0,a.MZ)()],_.prototype,"selectable",void 0),(0,i._)([(0,a.MZ)()],_.prototype,"grabbable",void 0),(0,i._)([(0,a.MZ)({value:!1})],_.prototype,"grabbing",null),(0,i._)([(0,a.MZ)()],_.prototype,"dragging",void 0),(0,i._)([(0,a.MZ)()],_.prototype,"hovering",null),(0,i._)([(0,a.MZ)({value:!1})],_.prototype,"selected",null),(0,i._)([(0,a.MZ)()],_.prototype,"cursor",void 0),_=(0,i._)([(0,c.$)("esri.views.interactive.GraphicManipulator")],_);const v=(0,u.c)(),S=(0,r.gs)()},68928:(t,e,n)=>{n.d(e,{T:()=>s});var i=n(89882);function s(t){let e=0,n=0,s=0;return t?("cim"===t.type&&t.data.symbol&&"symbolLayers"in t.data.symbol&&t.data.symbol.symbolLayers&&t.data.symbol.symbolLayers.map((t=>{"CIMVectorMarker"===t.type&&t.anchorPoint&&(Math.abs(t.anchorPoint.x)>e&&(e=t.anchorPoint.x),Math.abs(t.anchorPoint.y)>n&&(n=t.anchorPoint.y),null!=t.size&&t.size>s&&(s=t.size))})),e=(0,i.Lz)(e),n=(0,i.Lz)(n),s=(0,i.Lz)(s),{offsetX:e,offsetY:n,size:s}):{offsetX:e,offsetY:n,size:s}}}}]);