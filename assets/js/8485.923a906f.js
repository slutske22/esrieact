"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8485],{8485:(e,t,r)=>{r.r(t),r.d(t,{default:()=>W});var s=r(66866),i=r(56542),o=r(35775),n=r(40189),a=r(20909),l=r(21564),u=r(39831),p=r(539),d=(r(9272),r(63863)),c=r(84698),y=r(78983),h=r(12433),f=r(68833),m=r(98849),g=r(45307),_=r(90752),v=r(62802),b=r(20061),F=r(57822);let O=class extends g.A{constructor(){super(...arguments),this.type="geojson",this.refresh=(0,n.sg)((async e=>{await this.load();const{extent:t,timeExtent:r}=await this._connection.invoke("refresh",e);return this.sourceJSON.extent=t,r&&(this.sourceJSON.timeInfo.timeExtent=[r.start,r.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}}))}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}applyEdits(e){return this.load().then((()=>this._applyEdits(e)))}openPorts(){return this.load().then((()=>this._connection.openPorts()))}queryFeatures(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t))).then((e=>F.A.fromJSON(e)))}queryFeaturesJSON(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t)))}queryFeatureCount(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)))}queryObjectIds(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)))}queryExtent(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t))).then((e=>({count:e.count,extent:c.A.fromJSON(e.extent)})))}querySnapping(e,t={}){return this.load(t).then((()=>this._connection.invoke("querySnapping",e,t)))}async queryAttributeBins(e,t={}){return await this.load(),this._connection.invoke("queryAttributeBins",e?.toJSON(),t)}_applyEdits(e){if(!this._connection)throw new m.A("geojson-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField,r=[],s=[],i=[];if(e.addFeatures)for(const o of e.addFeatures)r.push(this._serializeFeature(o));if(e.deleteFeatures)for(const o of e.deleteFeatures)"objectId"in o&&null!=o.objectId?s.push(o.objectId):"attributes"in o&&null!=o.attributes[t]&&s.push(o.attributes[t]);if(e.updateFeatures)for(const o of e.updateFeatures)i.push(this._serializeFeature(o));return this._connection.invoke("applyEdits",{adds:r,updates:i,deletes:s}).then((({extent:e,timeExtent:t,featureEditResults:r})=>(this.sourceJSON.extent=e,t&&(this.sourceJSON.timeInfo.timeExtent=[t.start,t.end]),this._createEditsResult(r))))}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=!0===e.success?null:e.error||{code:void 0,description:""};return{objectId:e.objectId,globalId:e.globalId,error:t?new m.A("geojson-layer-source:edit-failure",t.description,{code:t.code}):null}}_serializeFeature(e){const{attributes:t}=e,r=this._geometryForSerialization(e);return r?{geometry:r.toJSON(),attributes:t}:{attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return null==t?null:"mesh"===t.type||"extent"===t.type?v.A.fromExtent(t.extent):t}async _startWorker(e){this._connection=await(0,_.ho)("GeoJSONSourceWorker",{strategy:(0,u.A)("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{fields:t,spatialReference:r,hasZ:s,geometryType:i,objectIdField:o,url:n,timeInfo:a,customParameters:l}=this.layer,d="defaults"===this.layer.originOf("spatialReference"),c={url:n,customParameters:l,fields:t&&t.map((e=>e.toJSON())),geometryType:h.gy.toJSON(i),hasZ:s,objectIdField:o,timeInfo:a?a.toJSON():null,spatialReference:d?null:r&&r.toJSON()},y=await this._connection.invoke("load",c,{signal:e});for(const u of y.warnings)p.A.getLogger(this.layer).warn("#load()",`${u.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:u});y.featureErrors.length&&p.A.getLogger(this.layer).warn("#load()",`Encountered ${y.featureErrors.length} validation errors while loading features. (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{errors:y.featureErrors}),this.sourceJSON=y.layerDefinition,this.capabilities=(0,b.f)(this.sourceJSON.hasZ,!0)}};(0,s._)([(0,l.MZ)()],O.prototype,"capabilities",void 0),(0,s._)([(0,l.MZ)()],O.prototype,"type",void 0),(0,s._)([(0,l.MZ)({constructOnly:!0})],O.prototype,"layer",void 0),(0,s._)([(0,l.MZ)()],O.prototype,"sourceJSON",void 0),O=(0,s._)([(0,d.$)("esri.layers.graphics.sources.GeoJSONSource")],O);var Z=r(15305),S=r(16161),I=r(54576),A=r(15053),E=r(94783),M=r(41506),w=r(30111),x=r(34722),J=r(50508),N=r(25389),R=r(90826),q=r(40021),P=r(76592),j=r(52506),T=r(48330),k=r(24738),$=r(77567),C=r(42453),D=r(61826),B=r(79682),G=r(53835),Q=r(14474),z=r(44116),U=r(12129);const V=(0,$.p)();let L=class extends((0,w.fY)((0,I.FJ)((0,S.d)((0,E.J)((0,A.F)((0,Z.dM)((0,R.e)((0,q.d)((0,N.j)((0,J.J)((0,M.q)((0,x.A)((0,o.P)(f.A)))))))))))))){constructor(e){super(e),this.attributeTableTemplate=null,this.copyright=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.editingEnabled=!1,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="GeoJSON",this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new O({layer:this}),this.spatialReference=y.A.WGS84,this.templates=null,this.title="GeoJSON",this.type="geojson"}destroy(){this.source?.destroy()}load(e){const t=this.loadFromPortal({supportedTypes:["GeoJson"],supportsData:!1},e).catch(n.QP).then((()=>this.source.load(e))).then((()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo"],"service"),(0,C.yp)(this.renderer,this.fieldsIndex),(0,C.sv)(this.timeInfo,this.fieldsIndex)}));return this.addResolvingPromise(t),Promise.resolve(this)}get capabilities(){return this.source?this.source.capabilities:null}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}get isTable(){return this.loaded&&null==this.geometryType}get parsedUrl(){return this.url?(0,a.An)(this.url):null}set renderer(e){(0,C.yp)(e,this.fieldsIndex),this._set("renderer",e)}set url(e){if(!e)return void this._set("url",e);const t=(0,a.An)(e);this._set("url",t.path),t.query&&(this.customParameters={...this.customParameters,...t.query})}async applyEdits(e,t){const{applyEdits:s}=await Promise.all([r.e(72076),r.e(75903)]).then(r.bind(r,75903));await this.load();const i=await s(this,this.source,e,t);return this.read({extent:this.source.sourceJSON.extent,timeInfo:this.source.sourceJSON.timeInfo},{origin:"service",ignoreDefaults:!0}),i}on(e,t){return super.on(e,t)}createPopupTemplate(e){return(0,z.tn)(this,e)}createQuery(){const e=new Q.A,t=this.capabilities?.data;e.returnGeometry=!0,t&&t.supportsZ&&(e.returnZ=!0),e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:r,timeExtent:s}=this;return e.timeExtent=null!=r&&null!=s?s.offset(-r.value,r.unit):s||null,e}getFieldDomain(e,t){return this.getField(e)?.domain}getField(e){return this.fieldsIndex.get(e)}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(Q.A.from(e)||this.createQuery(),t))).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(Q.A.from(e)||this.createQuery(),t)))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(Q.A.from(e)||this.createQuery(),t)))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(Q.A.from(e)||this.createQuery(),t)))}async queryAttributeBins(e,t){const{source:s,capabilities:i}=await this.load();(0,j.ZJ)(e,i,"GeoJSONLayer");const o=await Promise.all([r.e(72076),r.e(45970)]).then(r.bind(r,45970)),n=await s.queryAttributeBins(o.default.from(e),t);if(n.features)for(const r of n.features)r.layer=r.sourceLayer=this;return n}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return null!=t&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};(0,s._)([(0,l.MZ)(P.zQ)],L.prototype,"attributeTableTemplate",void 0),(0,s._)([(0,l.MZ)({readOnly:!0,json:{read:!1,write:!1}})],L.prototype,"capabilities",null),(0,s._)([(0,l.MZ)({type:String})],L.prototype,"copyright",void 0),(0,s._)([(0,l.MZ)({readOnly:!0})],L.prototype,"createQueryVersion",null),(0,s._)([(0,l.MZ)((0,U.P6)("dateFieldsTimeReference"))],L.prototype,"dateFieldsTimeZone",void 0),(0,s._)([(0,l.MZ)({readOnly:!0})],L.prototype,"defaultPopupTemplate",null),(0,s._)([(0,l.MZ)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],L.prototype,"definitionExpression",void 0),(0,s._)([(0,l.MZ)({type:String})],L.prototype,"displayField",void 0),(0,s._)([(0,l.MZ)({type:Boolean})],L.prototype,"editingEnabled",void 0),(0,s._)([(0,l.MZ)(P.Yj)],L.prototype,"elevationInfo",void 0),(0,s._)([(0,l.MZ)({type:[k.A],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],L.prototype,"fields",void 0),(0,s._)([(0,l.MZ)(V.fieldsIndex)],L.prototype,"fieldsIndex",void 0),(0,s._)([(0,l.MZ)({type:c.A,json:{name:"extent"}})],L.prototype,"fullExtent",void 0),(0,s._)([(0,l.MZ)({type:["point","polygon","polyline","multipoint"],json:{read:{reader:h.gy.read}}})],L.prototype,"geometryType",void 0),(0,s._)([(0,l.MZ)({type:Boolean})],L.prototype,"hasZ",void 0),(0,s._)([(0,l.MZ)(P.id)],L.prototype,"id",void 0),(0,s._)([(0,l.MZ)({type:Boolean,readOnly:!0})],L.prototype,"isTable",null),(0,s._)([(0,l.MZ)(P.kF)],L.prototype,"labelsVisible",void 0),(0,s._)([(0,l.MZ)({type:[D.A],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:B.w},write:!0}})],L.prototype,"labelingInfo",void 0),(0,s._)([(0,l.MZ)(P.fV)],L.prototype,"legendEnabled",void 0),(0,s._)([(0,l.MZ)({type:["show","hide"]})],L.prototype,"listMode",void 0),(0,s._)([(0,l.MZ)({type:String,json:{name:"layerDefinition.objectIdField",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"objectIdField"}}}})],L.prototype,"objectIdField",void 0),(0,s._)([(0,l.MZ)(P.ke)],L.prototype,"opacity",void 0),(0,s._)([(0,l.MZ)({type:["GeoJSON"]})],L.prototype,"operationalLayerType",void 0),(0,s._)([(0,l.MZ)(V.outFields)],L.prototype,"outFields",void 0),(0,s._)([(0,l.MZ)({readOnly:!0})],L.prototype,"parsedUrl",null),(0,s._)([(0,l.MZ)(P.M6)],L.prototype,"popupEnabled",void 0),(0,s._)([(0,l.MZ)({type:i.A,json:{name:"popupInfo",write:!0}})],L.prototype,"popupTemplate",void 0),(0,s._)([(0,l.MZ)({types:G.Hg,json:{name:"layerDefinition.drawingInfo.renderer",write:!0,origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:G.XJ}}}})],L.prototype,"renderer",null),(0,s._)([(0,l.MZ)(P.PY)],L.prototype,"screenSizePerspectiveEnabled",void 0),(0,s._)([(0,l.MZ)({readOnly:!0})],L.prototype,"source",void 0),(0,s._)([(0,l.MZ)({type:y.A})],L.prototype,"spatialReference",void 0),(0,s._)([(0,l.MZ)({type:[T.A]})],L.prototype,"templates",void 0),(0,s._)([(0,l.MZ)()],L.prototype,"title",void 0),(0,s._)([(0,l.MZ)({json:{read:!1},readOnly:!0})],L.prototype,"type",void 0),(0,s._)([(0,l.MZ)(P.OZ)],L.prototype,"url",null),L=(0,s._)([(0,d.$)("esri.layers.GeoJSONLayer")],L);const W=L},20061:(e,t,r)=>{r.d(t,{F0:()=>a,Vx:()=>p,e2:()=>c,f:()=>y});var s=r(39831),i=r(19251),o=r(22567),n=r(23173);function a(e){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===e||"esriGeometryMultipoint"===e?n.Cb:"esriGeometryPolyline"===e?n.yM:n.WR}}}const l=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let u=1;function p(e,t){if((0,s.A)("esri-csp-restrictions"))return()=>({[t]:null,...e});try{let r=`this${d(t)} = null;`;for(const t in e)r+=`this${d(t)} = ${JSON.stringify(e[t])};`;const s=new Function(`\n      return class AttributesClass$${u++} {\n        constructor() {\n          ${r};\n        }\n      }\n    `)();return()=>new s}catch(r){return()=>({[t]:null,...e})}}function d(e){return l.test(e)?`.${e}`:`["${e}"]`}function c(e={}){return[{name:"New Feature",description:"",prototype:{attributes:(0,i.o8)(e)}}]}function y(e,t){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,isBranchVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:t,supportsDelete:t,supportsEditing:t,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryBins:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:t,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:o.F,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},queryAttributeBins:o.P,editing:{supportsGeometryUpdate:t,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1,zDefault:void 0}}}}}]);